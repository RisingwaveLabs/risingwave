# Text/Binary String Conversion Functions

# encode/decode
# escape
query T
SELECT encode('\xc3b1', 'escape');
----
\303\261

query T
SELECT decode('\303\261', 'escape');
----
\xc3b1

query T
SELECT encode('\xe78e8be58695e6adbbe4ba86e788b6e4bab2', 'escape');
----
\347\216\213\345\206\225\346\255\273\344\272\206\347\210\266\344\272\262

query T
SELECT decode('王冕死了父亲', 'escape');
----
\xe78e8be58695e6adbbe4ba86e788b6e4bab2

# base64
query T
SELECT encode('123\000\001', 'base64');
----
MTIzAAE=

query T
SELECT decode('MTIzAAE=', 'base64');
----
\x3132330001

# hex
query T
SELECT encode('joanna', 'hex');
----
6a6f616e6e61

query T
SELECT decode('6a6f616e6e61', 'hex');
----
\x6a6f616e6e61

# convert
query T
SELECT convert_from('\xc3b1', 'UTF8');
----
ñ

query T
SELECT convert_from('\xe78e8be58695e6adbbe4ba86e788b6e4bab2', 'UTF8');
----
王冕死了父亲

query T
SELECT convert_from('\x6a6f616e6e61', 'UTF8');
----
joanna

# UTF[-]8, case-insensitive
query T
SELECT convert_from('\x6a6f616e6e61', 'UTF-8');
----
joanna

query T
SELECT convert_from('\x6a6f616e6e61', 'utf8');
----
joanna

query T
SELECT convert_from('\x6a6f616e6e61', 'utf-8');
----
joanna

query T
SELECT convert_from('\x6a6f616e6e61', 'UtF8');
----
joanna

query T
SELECT convert_from('\x6a6f616e6e61', 'uTF-8');
----
joanna
