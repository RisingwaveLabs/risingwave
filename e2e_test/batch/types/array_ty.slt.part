statement ok
SET RW_IMPLICIT_FLUSH TO true;

query T
select ARRAY['foo', 'bar', null];
----
{foo,bar,NULL}

query T
select ARRAY[1,2+3,4*5+1];
----
{1,5,21}

query T
select ARRAY[null];
----
{NULL}

# PostgreSQL requires a cast from user for this. But we treat it as varchar[] here.
# Because the cast source need to be a valid subexpr.
query T
select pg_typeof(ARRAY[]);
----
varchar[]

query T
select ARRAY[]::int[];
----
{}

statement ok
create table t (v1 int);

statement ok
insert into t values (1), (2), (3);

query T rowsort
select ARRAY[1, v1*2] from t;
----
{1,2}
{1,4}
{1,6}

query I rowsort
select * from t where Array[1,v1*2] < Array[1,6];
----
1
2

query I rowsort
select * from t where Array[1,v1*2] <= Array[1,6];
----
1
2
3

query I rowsort
select * from t where Array[1,v1*2] > Array[1,2];
----
2
3

query I rowsort
select * from t where Array[1,v1*2] >= Array[1,2];
----
1
2
3

query I
select * from t where Array[1,v1*2] = Array[1,6];
----
3

query I rowsort
select * from t where Array[1,v1*2] != Array[1,6];
----
1
2

query T
select min(ARRAY[1, v1*2]) from t;
----
{1,2}

query T
select max(ARRAY[1, v1*2]) from t;
----
{1,6}

statement ok
drop table t;

# Now we don't disallow arrays with unmatching dimensions in multidimensional arrays.
# This is different from PostgreSQL, we may want to change this in the future.
statement ok
select array[array[1,2], array[3]];
