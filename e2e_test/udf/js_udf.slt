statement ok
create function int_42() returns int language javascript as $$
    return 42;
$$;

statement ok
create function gcd(a int, b int) returns int language javascript as $$
    // required before we support `RETURNS NULL ON NULL INPUT`
    if(a == null || b == null) {
        return null;
    }
    while (b != 0) {
        let t = b;
        b = a % b;
        a = t;
    }
    return a;
$$;

statement ok
create function to_string(a boolean, b smallint, c int, d bigint, e real, f float, g varchar, h bytea, i jsonb) returns varchar language javascript as $$
    return a.toString() + b.toString() + c.toString() + d.toString() + e.toString() + f.toString() + g.toString() + h.toString() + JSON.stringify(i);
$$;

# show data types in javascript
statement ok
create function js_typeof(a boolean, b smallint, c int, d bigint, e real, f float, g varchar, h bytea, i jsonb) returns jsonb language javascript as $$
    return {
        boolean: typeof a,
        smallint: typeof b,
        int: typeof c,
        bigint: typeof d,
        real: typeof e,
        float: typeof f,
        varchar: typeof g,
        bytea: typeof h,
        jsonb: typeof i,
    };
$$;

statement ok
create function series(n int) returns table (x int) language javascript as $$
    for(let i = 0; i < n; i++) {
        yield i;
    }
$$;

query I
select int_42();
----
42

query I
select gcd(25, 15);
----
5

query T
select to_string(false, 1::smallint, 2, 3, 4.5, 6.7, 'abc', '\x010203', '{"key": 1}');
----
false1234.56.7abc1,2,3{"key":1}

query T
select js_typeof(false, 1::smallint, 2, 3, 4.5, 6.7, 'abc', '\x010203', '{"key": 1}');
----
{"bigint": "number", "boolean": "boolean", "bytea": "object", "float": "number", "int": "number", "jsonb": "object", "real": "number", "smallint": "number", "varchar": "string"}

query I
select series(5);
----
0
1
2
3
4

statement ok
drop function int_42;

statement ok
drop function gcd;

statement ok
drop function to_string;

statement ok
drop function series;

statement ok
drop function js_typeof;
