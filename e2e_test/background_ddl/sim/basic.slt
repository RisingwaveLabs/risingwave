
statement ok
ALTER SYSTEM SET max_concurrent_creating_streaming_jobs TO 4;

statement ok
CREATE TABLE t (v1 int);

# This is expected to run under sim mode, which is fast,
# so we need a higher number of rows.
statement ok
INSERT INTO t select * from generate_series(1, 2000000);

statement ok
FLUSH;

# FIXME: Ideally this can succeed at the same time as the subsequent statement.
statement ok
SET BACKGROUND_DDL=true;

statement ok
CREATE MATERIALIZED VIEW m1 as SELECT * FROM t;

# FIXME: Ideally this can succeed at the same time as the subsequent statement.
statement ok
SET BACKGROUND_DDL=true;

statement ok
CREATE MATERIALIZED VIEW m2 as SELECT * FROM t;

# FIXME: Ideally this can succeed at the same time as the subsequent statement.
statement ok
SET BACKGROUND_DDL=true;

statement ok
CREATE MATERIALIZED VIEW m3 as SELECT * FROM t;

# Disable the flaky check:
# query I
# select count(*) from rw_catalog.rw_ddl_progress;
# ----
# 3

statement error
SELECT * FROM m1;

# Meta should always reject duplicate mview.
statement error
CREATE MATERIALIZED VIEW m3 as SELECT * FROM t;

# Wait for background ddl to finish
sleep 30s

query I
select count(*) from m1;
----
2000000

query I
select count(*) from m2;
----
2000000

query I
select count(*) from m3;
----
2000000

statement ok
DROP MATERIALIZED VIEW m1;

statement ok
DROP MATERIALIZED VIEW m2;

statement ok
DROP MATERIALIZED VIEW m3;

statement ok
DROP TABLE t;

statement ok
SET BACKGROUND_DDL=false;

statement ok
ALTER SYSTEM SET max_concurrent_creating_streaming_jobs TO 1;
