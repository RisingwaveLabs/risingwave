statement ok
set sink_decouple = false;

statement ok
set streaming_parallelism=4;

statement ok
CREATE TABLE s1 (i1 int, i2 varchar, i3 varchar);

statement ok
insert into s1 select * from generate_series(1, 1000);

statement ok
flush;

statement ok
CREATE MATERIALIZED VIEW mv1 AS SELECT * FROM s1;

statement ok
CREATE SINK sink1 AS select * from mv1 WITH (
    connector = 'iceberg',
    type = 'append-only',
    force_append_only = 'true',
    database.name = 'demo_db',
    table.name = 't1',
    catalog.name = 'demo',
    catalog.type = 'storage',
    warehouse.path = 's3a://icebergdata/demo',
    s3.endpoint = 'http://127.0.0.1:9301',
    s3.region = 'us-east-1',
    s3.access.key = 'hummockadmin',
    s3.secret.key = 'hummockadmin',
    commit_checkpoint_interval = 1,
    create_table_if_not_exists = 'true'
);

statement ok
CREATE SOURCE iceberg_t1_source
WITH (
    connector = 'iceberg',
    s3.endpoint = 'http://127.0.0.1:9301',
    s3.region = 'us-east-1',
    s3.access.key = 'hummockadmin',
    s3.secret.key = 'hummockadmin',
    s3.path.style.access = 'true',
    catalog.type = 'storage',
    warehouse.path = 's3a://icebergdata/demo',
    database.name = 'demo_db',
    table.name = 't1',
);

statement ok
flush;

query I
select count(*) from iceberg_t1_source;
----
1000

query I
explain select count(*) from iceberg_t1_source where i1 > 500;
----
   BatchSimpleAgg { aggs: [sum0(count)] }
   └─BatchExchange { order: [], dist: Single }
     └─BatchSimpleAgg { aggs: [count] }
       └─BatchIcebergScan { source: iceberg_t1_source, columns: [i1], predicate: i1 > 500 }

query I
explain select count(*) from iceberg_t1_source where i1 > 500 and i1 < 600;
----
   BatchSimpleAgg { aggs: [sum0(count)] }
   └─BatchExchange { order: [], dist: Single }
     └─BatchSimpleAgg { aggs: [count] }
       └─BatchIcebergScan { source: iceberg_t1_source, columns: [i1], predicate: i1 > 500 and i1 < 600 }

query I
explain select * from iceberg_t1_source where i1 in (1, 2, 3, 4, 5);
----
   BatchSimpleAgg { aggs: [sum0(count)] }
   └─BatchExchange { order: [], dist: Single }
     └─BatchSimpleAgg { aggs: [count] }
       └─BatchIcebergScan { source: iceberg_t1_source, columns: [i1], predicate: i1 > 500 and i1 < 600 }

statement ok
DROP SINK sink1;

statement ok
DROP SOURCE iceberg_t1_source;

statement ok
DROP TABLE s1 cascade;
