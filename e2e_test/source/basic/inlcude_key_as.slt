# upsert format must have a pk
statement error
CREATE TABLE upsert_students_default_key (
    "ID" INT,
    "firstName" VARCHAR,
    "lastName" VARCHAR,
    age INT,
    height REAL,
    weight REAL
)
INCLUDE KEY AS rw_key
WITH (
	connector = 'kafka',
    properties.bootstrap.server = 'message_queue:29092',
	topic = 'upsert_json')
FORMAT UPSERT ENCODE JSON

# upsert format pk must be the key column
statement error
CREATE TABLE upsert_students_default_key (
    "ID" INT primary key,
    "firstName" VARCHAR,
    "lastName" VARCHAR,
    age INT,
    height REAL,
    weight REAL
)
INCLUDE KEY AS rw_key
WITH (
	connector = 'kafka',
    properties.bootstrap.server = 'message_queue:29092',
	topic = 'upsert_json')
FORMAT UPSERT ENCODE JSON

statement ok
CREATE TABLE upsert_students_default_key (
    "ID" INT,
    "firstName" VARCHAR,
    "lastName" VARCHAR,
    age INT,
    height REAL,
    weight REAL,
)
INCLUDE KEY AS rw_key
WITH (
	connector = 'kafka',
    properties.bootstrap.server = 'message_queue:29092',
	topic = 'upsert_json')
FORMAT PLAIN ENCODE JSON

statement ok
create table additional_columns (a int)
include key as key_col
include partition as partition_col
include offset as offset_col
include timestamp as timestamp_col
include header as header_col
WITH (
	connector = 'kafka',
    properties.bootstrap.server = 'message_queue:29092',
	topic = 'kafka_additional_columns')
FORMAT PLAIN ENCODE JSON

statement ok
select * from upsert_students_default_key;

statement ok
select * from additional_columns;

# Wait enough time to ensure SourceExecutor consumes all Kafka data.
sleep 3s

query I
select count(rw_key) from upsert_students_default_key
----
15

query I
SELECT count(*)
FROM   additional_columns
WHERE  key_col IS NOT NULL
       AND partition_col IS NOT NULL
       AND offset_col IS NOT NULL
       AND timestamp_col IS NOT NULL
       AND header_col IS NOT NULL
----
101

# the input data is from scripts/source/prepare_ci_kafka.sh
# ```
# for i in {0..100}; do echo "key$i:{\"a\": $i}" | ${KCAT_BIN} -P -b message_queue:29092 -t ${ADDI_COLUMN_TOPIC} -K : -H "header1=v1" -H "header2=v2"; done
# ```
# The command generates 101 messages with key `key0` to `key100` and value `{"a": 0}` to `{"a": 100}`, with fixed headers `header1=v1` and `header2=v2`.

query TT
SELECT (header_col[1]).key AS key, (header_col[1]).value::text AS value
FROM   additional_columns limit 1;
----
header1 \x7631

statement ok
drop table upsert_students_default_key

statement ok
drop table additional_columns
