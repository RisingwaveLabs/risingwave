# Single phase approx percentile
statement ok
create table t(p_col double, grp_col int);

statement ok
insert into t select generate_series, 1 from generate_series(1, 1000);

statement ok
flush;

query I
 select
     approx_percentile(0.5, 0.01) within group (order by p_col) as p50,
     approx_percentile(0.9, 0.01) within group (order by p_col) as p90
 from t group by grp_col;
----
497.7794014558068 907.0313473737922

query I
select percentile_disc(0.5) within group (order by p_col) as p50, percentile_disc(0.9) within group (order by p_col) as p90 from t group by grp_col;
----
500 900

statement ok
create materialized view m1 as
 select
     approx_percentile(0.5, 0.01) within group (order by p_col) as p50,
     approx_percentile(0.9, 0.01) within group (order by p_col) as p90
 from t group by grp_col;

query I
select * from m1;
----
497.7794014558068 907.0313473737922

# statement ok
# recover;

# wait recovery
# sleep 10s

query I
select * from m1;
----
497.7794014558068 907.0313473737922

# Test state encode / decode
onlyif can-use-recover
statement ok
recover;

onlyif can-use-recover
sleep 10s

query I
select * from m1;
----
497.7794014558068 907.0313473737922

# Test 0<x<1 values
statement ok
insert into t select 0.001, 1 from generate_series(1, 500);

statement ok
insert into t select 0.0001, 1 from generate_series(1, 501);

statement ok
flush;

query I
select * from m1;
----
0.000997478114637043 804.4614206837127

query I
select percentile_cont(0.5) within group (order by p_col) as p50, percentile_cont(0.9) within group (order by p_col) as p90 from t group by grp_col;
----
0.001 800

statement ok
drop materialized view m1;

statement ok
drop table t;