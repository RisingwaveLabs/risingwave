<Root>
    <TestCase name="tpch q21">
        <Resource name="sql">
            <![CDATA[
select
	s_name,
	count(*) as numwait
from
	supplier,
	lineitem l1,
	orders,
	nation
where
	s_suppkey = l1.l_suppkey
	and o_orderkey = l1.l_orderkey
	and o_orderstatus = 'F'
	and l1.l_receiptdate > l1.l_commitdate
	and exists (
		select
			*
		from
			lineitem l2
		where
			l2.l_orderkey = l1.l_orderkey
			and l2.l_suppkey <> l1.l_suppkey
	)
	and not exists (
		select
			*
		from
			lineitem l3
		where
			l3.l_orderkey = l1.l_orderkey
			and l3.l_suppkey <> l1.l_suppkey
			and l3.l_receiptdate > l3.l_commitdate
	)
	and s_nationkey = n_nationkey
	and n_name = 'GERMANY'
group by
	s_name
order by
	numwait desc,
	s_name
LIMIT 100;
            ]]>
        </Resource>
        <Resource name="distributed">
            <![CDATA[
RwBatchSort(sort0=[$1], sort1=[$0], dir0=[DESC], dir1=[ASC], fetch=[100])
  RwBatchExchange(distribution=[RwDistributionTrait{type=SINGLETON, keys=[]}], collation=[[]])
    RwBatchHashAgg(group=[{0}], numwait=[COUNT()])
      RwBatchExchange(distribution=[RwDistributionTrait{type=HASH_DISTRIBUTED, keys=[0]}], collation=[[]])
        RwBatchProject(s_name=[$0])
          RwBatchNestedLoopJoin(condition=[AND(=($3, $1), <>($4, $2))], joinType=[anti])
            RwBatchNestedLoopJoin(condition=[AND(=($3, $1), <>($4, $2))], joinType=[semi])
              RwBatchProject(s_name=[$0], l_orderkey=[$2], l_suppkey=[$3])
                RwBatchHashJoin(condition=[=($1, $4)], joinType=[inner])
                  RwBatchExchange(distribution=[RwDistributionTrait{type=HASH_DISTRIBUTED, keys=[1]}], collation=[[]])
                    RwBatchProject(s_name=[$0], s_nationkey=[$1], l_orderkey=[$2], l_suppkey=[$3])
                      RwBatchHashJoin(condition=[=($4, $2)], joinType=[inner])
                        RwBatchExchange(distribution=[RwDistributionTrait{type=HASH_DISTRIBUTED, keys=[2]}], collation=[[]])
                          RwBatchProject(s_name=[$1], s_nationkey=[$2], l_orderkey=[$3], l_suppkey=[$4])
                            RwBatchHashJoin(condition=[=($0, $4)], joinType=[inner])
                              RwBatchExchange(distribution=[RwDistributionTrait{type=HASH_DISTRIBUTED, keys=[0]}], collation=[[]])
                                RwBatchScan(table=[[test_schema, supplier]], columns=[s_suppkey,s_name,s_nationkey])
                              RwBatchExchange(distribution=[RwDistributionTrait{type=HASH_DISTRIBUTED, keys=[1]}], collation=[[]])
                                RwBatchProject(l_orderkey=[$0], l_suppkey=[$1])
                                  RwBatchFilter(condition=[>($3, $2)])
                                    RwBatchScan(table=[[test_schema, lineitem]], columns=[l_orderkey,l_suppkey,l_commitdate,l_receiptdate])
                        RwBatchExchange(distribution=[RwDistributionTrait{type=HASH_DISTRIBUTED, keys=[0]}], collation=[[]])
                          RwBatchProject(o_orderkey=[$0])
                            RwBatchFilter(condition=[=($1, 'F')])
                              RwBatchScan(table=[[test_schema, orders]], columns=[o_orderkey,o_orderstatus])
                  RwBatchExchange(distribution=[RwDistributionTrait{type=HASH_DISTRIBUTED, keys=[0]}], collation=[[]])
                    RwBatchProject(n_nationkey=[$0])
                      RwBatchFilter(condition=[=($1, CAST('GERMANY'):CHAR(25) NOT NULL)])
                        RwBatchScan(table=[[test_schema, nation]], columns=[n_nationkey,n_name])
              RwBatchExchange(distribution=[RwDistributionTrait{type=BROADCAST_DISTRIBUTED, keys=[]}], collation=[[]])
                RwBatchFilter(condition=[IS NOT NULL($0)])
                  RwBatchScan(table=[[test_schema, lineitem]], columns=[l_orderkey,l_suppkey])
            RwBatchExchange(distribution=[RwDistributionTrait{type=BROADCAST_DISTRIBUTED, keys=[]}], collation=[[]])
              RwBatchProject(l_orderkey=[$0], l_suppkey=[$1])
                RwBatchFilter(condition=[>($3, $2)])
                  RwBatchScan(table=[[test_schema, lineitem]], columns=[l_orderkey,l_suppkey,l_commitdate,l_receiptdate])
            ]]>
        </Resource>
    </TestCase>
</Root>
