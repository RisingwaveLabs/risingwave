<Root>
    <TestCase name="select all columns from table">
        <Resource name="sql">
            <![CDATA[
select * from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchScan(table=[[test_schema, t]], columns=[v1,v2,v3])
]]>
        </Resource>
    </TestCase>

    <TestCase name="insert into values">
        <Resource name="sql">
            <![CDATA[
insert into t values(1,4,2), (2,3,3), (3,4,4), (4,3,5)
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchInsert(table=[[test_schema, t]], operation=[INSERT], flattened=[false])
  RwBatchValues(tuples=[[{ 1, 4, 2:FLOAT }, { 2, 3, 3:FLOAT }, { 3, 4, 4:FLOAT }, { 4, 3, 5:FLOAT }]])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/insert">
        </Resource>
    </TestCase>

    <TestCase name="select with project">
        <Resource name="sql">
            <![CDATA[
select v3, v1+v2, v1-v2, v1*v2, v1/v2 from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchProject(v3=[$2], EXPR$1=[+($0, $1)], EXPR$2=[-($0, $1)], EXPR$3=[*($0, $1)], EXPR$4=[/($0, $1)])
  RwBatchScan(table=[[test_schema, t]], columns=[v1,v2,v3])
            ]]>
        </Resource>
    </TestCase>

    <TestCase name="select with filter">
        <Resource name="sql">
            <![CDATA[
select * from t where v1 > 1 and v2 > 1 and v3 > 1
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchFilter(condition=[AND(>($0, 1), >($1, 1), >($2, 1))])
  RwBatchScan(table=[[test_schema, t]], columns=[v1,v2,v3])
            ]]>
        </Resource>
        <Resource name="json" path="batch/basic/select_with_filter">
        </Resource>
    </TestCase>
    <TestCase name="simple agg">
        <Resource name="sql">
            <![CDATA[
select sum(v3) from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[SUM($0)])
  RwBatchScan(table=[[test_schema, t]], columns=[v3])
]]>
        </Resource>
    </TestCase>

        <TestCase name="simple agg with 2 sum, max, min">
        <Resource name="sql">
            <![CDATA[
select sum(v3), sum(v2), max(v1), min(v3) from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[SUM($0)], EXPR$1=[SUM($1)], EXPR$2=[MAX($2)], EXPR$3=[MIN($0)])
  RwBatchScan(table=[[test_schema, t]], columns=[v3,v2,v1])
]]>
        </Resource>
    </TestCase>

    <TestCase name="hash agg with 2 sum">
        <Resource name="sql">
            <![CDATA[
select sum(v1), sum(v2) from t group by v1
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchProject(EXPR$0=[$1], EXPR$1=[$2])
  RwBatchHashAgg(group=[{0}], EXPR$0=[SUM($0)], EXPR$1=[SUM($1)])
    RwBatchScan(table=[[test_schema, t]], columns=[v1,v2])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key sum 1">
        <Resource name="sql">
            <![CDATA[
select sum(v1+v2),sum(v1+v3) from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[SUM($0)], EXPR$1=[SUM($1)])
  RwBatchProject($f0=[+($0, $1)], $f1=[+($0, $2)])
    RwBatchScan(table=[[test_schema, t]], columns=[v1,v2,v3])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key sum 2">
        <Resource name="sql">
            <![CDATA[
select sum(v1), sum(v3) from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[SUM($0)], EXPR$1=[SUM($1)])
  RwBatchScan(table=[[test_schema, t]], columns=[v1,v3])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key min">
        <Resource name="sql">
            <![CDATA[
select min(v1) from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[MIN($0)])
  RwBatchScan(table=[[test_schema, t]], columns=[v1])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key max">
        <Resource name="sql">
            <![CDATA[
select max(v1) from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[MAX($0)])
  RwBatchScan(table=[[test_schema, t]], columns=[v1])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key max with filter">
        <Resource name="sql">
            <![CDATA[
select max(v1) from t where v2>3
    ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[MAX($0)])
  RwBatchProject(v1=[$0])
    RwBatchFilter(condition=[>($1, 3)])
      RwBatchScan(table=[[test_schema, t]], columns=[v1,v2])
            ]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key avg">
        <Resource name="sql">
            <![CDATA[
select avg(v2) from t
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[AVG($0)])
  RwBatchScan(table=[[test_schema, t]], columns=[v2])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with sum and group by">
        <Resource name="sql">
            <![CDATA[
select sum(v1), v2 from t group by v2
            ]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchProject(EXPR$0=[$1], v2=[$0])
  RwBatchHashAgg(group=[{0}], EXPR$0=[SUM($1)])
    RwBatchScan(table=[[test_schema, t]], columns=[v2,v1])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with order by">
        <Resource name="sql">
            <![CDATA[
select * from t order by v1;
]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSort(sort0=[$0], dir0=[ASC])
  RwBatchScan(table=[[test_schema, t]], columns=[v1,v2,v3])
]]>
        </Resource>>
        <Resource name="json" path="batch/basic/select_with_order_by">
        </Resource>>
    </TestCase>

    <TestCase name="select with order by + limit">
        <Resource name="sql">
            <![CDATA[
select * from t order by v1 limit 1;
]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchSort(sort0=[$0], dir0=[ASC], fetch=[1])
  RwBatchScan(table=[[test_schema, t]], columns=[v1,v2,v3])
]]>
        </Resource>>
        <Resource name="json" path="batch/basic/select_with_order_by_limit">
        </Resource>>
    </TestCase>


    <TestCase name="select only">
        <Resource name="sql">
            <![CDATA[
select 100.0::DOUBLE/8.0::DOUBLE
]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchProject(EXPR$0=[/(100.0:DOUBLE, 8.0:DOUBLE)])
  RwBatchValues(tuples=[[{ 0 }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="filter expression for date">
        <Resource name="sql">
            <![CDATA[
            select v1 from t2 where v1 >= '1970-01-01'
]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchFilter(condition=[>=($0, CAST('1970-01-01'):DATE NOT NULL)])
  RwBatchScan(table=[[test_schema, t2]], columns=[v1])
            ]]>
        </Resource>
    </TestCase>
    <TestCase name="nested loop join">
        <Resource name="sql">
            <![CDATA[
            select * from t, t3 where t.v1 > t3.v1;
]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchNestedLoopJoin(condition=[>($0, $3)], joinType=[inner])
  RwBatchScan(table=[[test_schema, t]], columns=[v1,v2,v3])
  RwBatchScan(table=[[test_schema, t3]], columns=[v1])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/nested_loop_join">
        </Resource>
    </TestCase>
    <TestCase name="insert null">
        <Resource name="sql">
            <![CDATA[
            insert into t4 values(NULL);
]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchInsert(table=[[test_schema, t4]], operation=[INSERT], flattened=[false])
  RwBatchValues(tuples=[[{ null:INTEGER }]])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/insert_null">
        </Resource>
    </TestCase>
    <TestCase name="hash inner join">
        <Resource name="sql">
            <![CDATA[
            select * from t, t3 where t.v1 = t3.v1;
]]>
        </Resource>
        <Resource name="physical">
            <![CDATA[
RwBatchHashJoin(condition=[=($0, $3)], joinType=[inner])
  RwBatchScan(table=[[test_schema, t]], columns=[v1,v2,v3])
  RwBatchScan(table=[[test_schema, t3]], columns=[v1])]]>
        </Resource>
        <Resource name="json" path="batch/basic/hash_inner_join">
        </Resource>
    </TestCase>
    <TestCase name="select interval">
        <Resource name="sql">
            <![CDATA[
            select date '2021-10-1' + interval '1024' year + interval '1024' day;
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchProject(EXPR$0=[+(+(CAST('2021-10-1'):DATE NOT NULL, 12288:INTERVAL YEAR(9)), 88473600000:INTERVAL DAY(9))])
  RwBatchValues(tuples=[[{ 0 }]])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/select_interval">
        </Resource>
    </TestCase>
    <TestCase name="extract function">
        <Resource name="sql">
            <![CDATA[
            select extract(day from date '1999-1-2');
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchProject(EXPR$0=[EXTRACT(FLAG(DAY), CAST('1999-1-2'):DATE NOT NULL)])
  RwBatchValues(tuples=[[{ 0 }]])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/extract">
        </Resource>
    </TestCase>
    <TestCase name="round function">
        <Resource name="sql">
            <![CDATA[
            select round(v1, 4) from t5;
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchProject(EXPR$0=[ROUND($0, 4)])
  RwBatchScan(table=[[test_schema, t5]], columns=[v1])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/round_digit">
        </Resource>
    </TestCase>
    <TestCase name="limit">
        <Resource name="sql">
            <![CDATA[
            select * from t5 limit 1 offset 1;
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchLimit(offset=[1], fetch=[1])
  RwBatchScan(table=[[test_schema, t5]], columns=[v1])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/limit">
        </Resource>
    </TestCase>
    <TestCase name="bool literal">
        <Resource name="sql">
            <![CDATA[
select false AND NULL, true or NULL;
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchProject(EXPR$0=[AND(false, null)], EXPR$1=[OR(true, null)])
  RwBatchValues(tuples=[[{ 0 }]])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/bool_literal">
        </Resource>
    </TestCase>
    <TestCase name="select less with sort by">
        <Resource name="sql">
            <![CDATA[
select v1 from t order by v2;
]]>
        </Resource>
        <Resource name="physcial">
            <![CDATA[
RwBatchProject(v1=[$0])
  RwBatchSort(sort0=[$1], dir0=[ASC])
    RwBatchScan(table=[[test_schema, t]], columns=[v1,v2])
]]>
        </Resource>
        <Resource name="distributed">
            <![CDATA[
RwBatchProject(v1=[$0])
  RwBatchExchange(distribution=[RwDistributionTrait{type=SINGLETON, keys=[]}], collation=[[1]])
    RwBatchSort(sort0=[$1], dir0=[ASC])
      RwBatchScan(table=[[test_schema, t]], columns=[v1,v2])
]]>
        </Resource>
        <Resource name="json" path="batch/basic/select_less_with_sort_by">
        </Resource>
    </TestCase>
    <TestCase name="cast minus numeric">
        <Resource name="sql">
            <![CDATA[
    select -1::int2::int4::int8, -2.1::float4::float8;
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchValues(tuples=[[{ -1:BIGINT, -2.1:DOUBLE }]])
]]>
        </Resource>
    </TestCase>
</Root>
