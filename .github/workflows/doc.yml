name: Deploy Developer Docs

on:
  push:
    branches:
      - main
  # for test
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        run: rustup show
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y make build-essential cmake protobuf-compiler curl openssl libssl-dev libsasl2-dev libcurl4-openssl-dev pkg-config postgresql-client tmux lld
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
        with:
          version: "v0.5.2"
      # - name: build rustdocs
      #   run: |
      #     RUSTDOCFLAGS="--markdown-css rust.css --markdown-no-toc --index-page docs/rustdoc/index.md -Zunstable-options" cargo doc --workspace --no-deps --document-private-items
      #     cp docs/rustdoc/rust.css target/doc/rust.css
      #   env:
      #     SCCACHE_GHA_ENABLED: "true"
      #     RUSTC_WRAPPER: "sccache"
      # - name: Fix file permissions
      #   shell: sh
      #   run: |
      #     chmod -c -R +rX "target/doc" |
      #     while read line; do
      #         echo "::warning title=Invalid file permissions automatically fixed::$line"
      #     done
      # - name: Archive artifact
      #   shell: sh
      #   if: runner.os == 'Linux'
      #   run: |
      #     chmod -c -R +rX "$INPUT_PATH" | while read line; do
      #       echo "::warning title=Invalid file permissions automatically fixed::$line"
      #     done
      #     tar \
      #       --dereference --hard-dereference \
      #       --directory "$INPUT_PATH" \
      #       -cvf "$RUNNER_TEMP/artifact.tar" \
      #       --exclude=.git \
      #       --exclude=.github \
      #       .
      #   env:
      #     INPUT_PATH: target/doc
      - name: Install cargo-docset
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-docset
      - name: build docsets
        run: |
          RUSTDOCFLAGS='--cfg docsrs' cargo docset

          echo "<entry>
          <version>$(date -u +%Y-%m-%dT%H:%M:%SZ)</version>
          <url>https://risingwavelabs.github.io/risingwave/risingwave.docset.tgz</url>
          </entry>" > docset-feed.xml

          # add docset to artifact
          tar -rvf "$RUNNER_TEMP/artifact.tar" risingwave.docset.tgz docset-feed.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
          retention-days: 1
          if-no-files-found: error

  deploy:
    needs: build
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
