# Override `template.yml` with contents in this file. Please run `generate.sh` to update the corresponding files.

name: CI (main)

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  start-runner-c:
    name: ec2-start-c
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.WUTAO_PAT }}
          ec2-image-id: ami-05a99cf0eb100c377 # github-actions (60gb gp3 ssd)
          ec2-instance-type: c5.4xlarge # 16 vCPU, 32Â GB Memory, EBS
          subnet-id: subnet-59743123 # default
          security-group-id: sg-9ec32bfe # default (could have security issues)

  compute-node-release-build:
    needs: start-runner-c # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner-c.outputs.label }} # run the job on the newly created runner
    container:
      image: public.ecr.aws/x5u3w5h6/risingwave-build-env:latest
      options: --security-opt seccomp=unconfined
    name: compute-node-build-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Build Rust components
        run: |
          cd rust && cargo build --release --features=all-in-one

      - uses: actions/upload-artifact@v2
        with:
          name: risingwave-release
          if-no-files-found: error
          path: |
            rust/target/release/risingwave

      - uses: actions/upload-artifact@v2
        with:
          name: risedev-playground-release
          if-no-files-found: error
          path: |
            rust/target/release/risedev-playground

  end-to-end-release-risedev:
    name: e2e-test-release-risedev
    needs:
      - compute-node-release-build
      - frontend-check
      - start-runner-c
    runs-on: ${{ needs.start-runner-c.outputs.label }} # run the job on the newly created runner
    container:
      image: public.ecr.aws/x5u3w5h6/risingwave-build-env:latest
      options: --security-opt seccomp=unconfined
    timeout-minutes: 20 # NOTE: Increase this number when we have more tests.
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - uses: actions/download-artifact@v2
        name: Download risingwave binary
        with:
          name: risingwave-release
          path: ./rust/target/release

      - uses: actions/download-artifact@v2
        name: Download frontend binary
        with:
          name: risingwave-fe-runnable.jar
          path: ./.risingwave/bin

      - uses: actions/download-artifact@v2
        name: Download playground binary
        with:
          name: risedev-playground-release
          path: ./rust/target/release

      - name: Adjust permission
        run: |
          chmod +x ./rust/target/release/risingwave
          chmod +x ./rust/target/release/risedev-playground

      - name: Install required components
        run: |
          apt-get update -yy -o Acquire::Retries=3
          apt-get install --upgrade -yy tmux -o Acquire::Retries=3

      - name: Generate RiseDev CI config
        run: |
          echo "ENABLE_RELEASE_PROFILE=true" >> risedev-components.ci.env
          cp risedev-components.ci.env risedev-components.user.env

      - name: Download sqllogictest
        run: |
          wget ${URL} -O - | tar xz && mv ${BINARY} ${DIR}/${BINARY}
          chmod +x ${DIR}/${BINARY}
        env:
          URL: https://github.com/risinglightdb/sqllogictest-rs/releases/download/v0.3.0-pre-2/sqllogictest-linux-amd64.tar.gz
          DIR: /usr/local/bin
          BINARY: sqllogictest

      - name: Download cargo-make
        run: |
          curl -fL https://github.com/sagiegurari/cargo-make/releases/download/0.35.7/cargo-make-v0.35.7-x86_64-unknown-linux-musl.zip -o ~/cargo-make-v0.35.7-x86_64-unknown-linux-musl.zip
          unzip ~/cargo-make-v0.35.7-x86_64-unknown-linux-musl.zip -d ~
          mv ~/cargo-make-v0.35.7-x86_64-unknown-linux-musl ~/cargo-make

      - name: Prepare RiseDev playground
        run: |
          ~/cargo-make/makers link-all-in-one-binaries
          ~/cargo-make/makers pre-start-playground

      # --- Tests ---
      #
      # Note: If you encounter timeout when running tests without introducing new ones,
      # please double check whether there is performance degradation. Only increase the timeout
      # if the degradation is reasonable or to be fixed soon.

      - name: e2e test streaming 3-node # Note: RiseDev cluster cannot be used to run e2e coverage unless we rebuild frontend in this workflow
        timeout-minutes: 2
        run: |
          ~/cargo-make/makers ci-start ci-3node
          sqllogictest -p 4567 -d dev './e2e_test/streaming/**/*.slt'

      - name: Kill cluster
        run: ~/cargo-make/makers ci-kill

      - name: e2e test rust frontend
        timeout-minutes: 1
        run: |
          ~/cargo-make/makers ci-start ci-v2
          sqllogictest -p 4566 -d dev './e2e_test/v2/*.slt'

      - name: Kill cluster
        run: ~/cargo-make/makers ci-kill

      - name: e2e test streaming 3-node w/o cache
        timeout-minutes: 2
        run: |
          RW_NO_CACHE=1 ~/cargo-make/makers ci-start ci-3node
          sqllogictest -p 4567 -d dev './e2e_test/streaming/**/*.slt'

      - name: Kill cluster
        run: ~/cargo-make/makers ci-kill

      - name: e2e test batch 3-node
        timeout-minutes: 2
        run: |
          RW_IMPLICIT_FLUSH=1 ~/cargo-make/makers ci-start ci-3node
          sqllogictest -p 4567 -d dev --engine risingwave './e2e_test/batch/**/*.slt'

      - name: Kill cluster
        run: ~/cargo-make/makers ci-kill

      # --- Post Tasks ---

      - name: Dump last 300 lines of logs on failure
        if: ${{ failure() }}
        run: ~/cargo-make/makers logs

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        name: Upload RiseDev logs on failure (You may find it in artifacts)
        with:
          path: .risingwave/log/
          name: risedev-logs-release

  stop-runner-c:
    name: ec2-stop-c
    needs:
      - start-runner-c
      - compute-node-release-build
      - end-to-end-release-risedev
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Stop EC2 runner C
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.WUTAO_PAT }}
          label: ${{ needs.start-runner-c.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner-c.outputs.ec2-instance-id }}
        if: ${{ always() }}
