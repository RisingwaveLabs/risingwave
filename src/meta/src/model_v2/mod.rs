//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use risingwave_pb::catalog::{PbDatabase, PbSchema};
use risingwave_pb::user::PbUserInfo;

pub mod prelude;

pub mod actor;
pub mod connection;
pub mod database;
pub mod fragment;
pub mod function;
pub mod index;
pub mod object;
pub mod object_dependency;
pub mod schema;
pub mod sink;
pub mod source;
pub mod table;
pub mod user;
pub mod user_privilege;
pub mod view;
pub mod worker;
pub mod worker_property;

impl From<database::Model> for PbDatabase {
    fn from(model: database::Model) -> Self {
        Self {
            id: model.database_id as _,
            name: model.name,
            owner: model.owner_id as _,
        }
    }
}

impl From<schema::Model> for PbSchema {
    fn from(model: schema::Model) -> Self {
        Self {
            id: model.schema_id as _,
            name: model.name,
            database_id: model.database_id as _,
            owner: model.owner_id as _,
        }
    }
}

// impl From<user::Model> for PbUserInfo {
//     fn from(model: user::Model) -> Self {
//         Self {
//             id: model.user_id as _,
//             name: model.name,
//             is_super: model.is_super.unwrap_or_default(),
//             can_create_db: model.can_create_db.unwrap_or_default(),
//             can_create_user: model.can_create_user.unwrap_or_default(),
//             can_login: model.can_login.unwrap_or_default(),
//             auth_info: None,
//             grant_privileges: vec![],
//         }
//     }
// }
