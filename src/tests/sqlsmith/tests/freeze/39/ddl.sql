CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_0.o_totalprice AS col_0, (OVERLAY('TCbxc7iF06' PLACING t_0.o_comment FROM (INT '2147483647') FOR (INT '1'))) AS col_1, t_0.o_comment AS col_2, (BIGINT '0') AS col_3 FROM orders AS t_0 GROUP BY t_0.o_comment, t_0.o_orderdate, t_0.o_totalprice, t_0.o_orderkey HAVING ((FLOAT '1') >= t_0.o_totalprice);
CREATE MATERIALIZED VIEW m1 AS SELECT tumble_0.date_time AS col_0 FROM tumble(auction, auction.expires, INTERVAL '34') AS tumble_0 GROUP BY tumble_0.reserve, tumble_0.date_time, tumble_0.expires;
CREATE MATERIALIZED VIEW m2 AS SELECT (ARRAY['CPnsjerPDz']) AS col_0 FROM m0 AS t_0 LEFT JOIN alltypes1 AS t_1 ON t_0.col_3 = t_1.c4 WHERE true GROUP BY t_1.c16, t_1.c3, t_1.c5;
CREATE MATERIALIZED VIEW m3 AS SELECT t_2.col_2 AS col_0, (concat((TRIM(t_2.col_2)), (md5(t_2.col_2)))) AS col_1, (TRIM(t_2.col_2)) AS col_2, t_2.col_2 AS col_3 FROM m0 AS t_2 WHERE true GROUP BY t_2.col_2 HAVING true;
CREATE MATERIALIZED VIEW m4 AS SELECT ((- (BIGINT '0')) | t_0.auction) AS col_0, t_0.auction AS col_1, t_0.auction AS col_2 FROM bid AS t_0 WHERE (('OeiPD6boEo') IN (t_0.url) > true) GROUP BY t_0.auction;
CREATE MATERIALIZED VIEW m5 AS SELECT t_0.id AS col_0, t_1.o_custkey AS col_1, (CAST(NULL AS STRUCT<a CHARACTER VARYING, b CHARACTER VARYING>)) AS col_2 FROM person AS t_0 FULL JOIN orders AS t_1 ON t_0.credit_card = t_1.o_clerk AND true WHERE false GROUP BY t_0.credit_card, t_1.o_shippriority, t_1.o_clerk, t_0.id, t_0.date_time, t_1.o_custkey, t_0.extra, t_0.city;
CREATE MATERIALIZED VIEW m6 AS SELECT (- (REAL '54')) AS col_0, tumble_0.c5 AS col_1 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '84') AS tumble_0 GROUP BY tumble_0.c6, tumble_0.c8, tumble_0.c16, tumble_0.c14, tumble_0.c5;
CREATE MATERIALIZED VIEW m7 AS SELECT t_2.p_mfgr AS col_0, t_2.p_type AS col_1 FROM part AS t_2 GROUP BY t_2.p_type, t_2.p_partkey, t_2.p_mfgr;
CREATE MATERIALIZED VIEW m9 AS SELECT sq_3.col_0 AS col_0, (((INT '1') - (742)) / (INT '984937317')) AS col_1 FROM (SELECT ARRAY[(INT '104'), (INT '406'), (INT '775')] AS col_0, ((BIGINT '782') <> (REAL '160297205')) AS col_1, (REAL '245') AS col_2 FROM alltypes2 AS t_2 WHERE t_2.c1 GROUP BY t_2.c3, t_2.c16, t_2.c14, t_2.c7, t_2.c15, t_2.c1 HAVING (true)) AS sq_3 WHERE ((BIGINT '36') <> (INT '68')) GROUP BY sq_3.col_0 HAVING false;
