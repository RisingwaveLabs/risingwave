CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS WITH with_0 AS (SELECT (((587) + max((SMALLINT '-32768')) FILTER(WHERE false)) = (REAL '988')) AS col_0, t_1.c4 AS col_1 FROM alltypes2 AS t_1 WHERE t_1.c1 GROUP BY t_1.c4, t_1.c13, t_1.c7 HAVING false) SELECT (FLOAT '810') AS col_0, TIME '06:15:44' AS col_1, (SMALLINT '-32768') AS col_2, (CASE WHEN true THEN (REAL '0') WHEN true THEN (REAL '1027319684') WHEN true THEN (REAL '17') ELSE (REAL '561') END) AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.c10 AS col_0, t_0.c2 AS col_1 FROM alltypes2 AS t_0 GROUP BY t_0.c15, t_0.c9, t_0.c16, t_0.c10, t_0.c2, t_0.c3, t_0.c7, t_0.c4 HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT t_0.l_shipinstruct AS col_0, t_0.l_shipinstruct AS col_1, t_0.l_shipmode AS col_2 FROM lineitem AS t_0 GROUP BY t_0.l_tax, t_0.l_shipmode, t_0.l_shipinstruct, t_0.l_quantity, t_0.l_linestatus, t_0.l_extendedprice, t_0.l_orderkey, t_0.l_receiptdate;
CREATE MATERIALIZED VIEW m4 AS SELECT (BIGINT '836') AS col_0 FROM (SELECT (BIGINT '9223372036854775807') AS col_0 FROM tumble(auction, auction.expires, INTERVAL '20') AS tumble_0 GROUP BY tumble_0.id HAVING (CAST(((INT '68')) AS BOOLEAN) AND false)) AS sq_1 WHERE false GROUP BY sq_1.col_0 HAVING (true);
CREATE MATERIALIZED VIEW m6 AS SELECT hop_0.c4 AS col_0 FROM hop(alltypes1, alltypes1.c11, INTERVAL '604800', INTERVAL '17539200') AS hop_0 GROUP BY hop_0.c4, hop_0.c3, hop_0.c10, hop_0.c9 HAVING (hop_0.c3 <> (REAL '660'));
CREATE MATERIALIZED VIEW m7 AS SELECT (REAL '4') AS col_0, (- (971)) AS col_1, t_0.c15 AS col_2, t_0.c4 AS col_3 FROM alltypes2 AS t_0 JOIN person AS t_1 ON t_0.c9 = t_1.email_address AND t_0.c1 GROUP BY t_0.c15, t_1.city, t_0.c4, t_0.c9, t_0.c2, t_0.c6 HAVING false;
CREATE MATERIALIZED VIEW m8 AS SELECT tumble_0.c13 AS col_0, TIMESTAMP '2022-07-24 05:15:47' AS col_1 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '56') AS tumble_0 GROUP BY tumble_0.c13, tumble_0.c11, tumble_0.c8, tumble_0.c10, tumble_0.c15, tumble_0.c7, tumble_0.c4, tumble_0.c14 HAVING false;
