CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_0.n_name AS col_0, t_0.n_name AS col_1 FROM nation AS t_0 WHERE true GROUP BY t_0.n_name;
CREATE MATERIALIZED VIEW m1 AS SELECT (0) AS col_0 FROM m0 AS t_0 JOIN partsupp AS t_1 ON t_0.col_0 = t_1.ps_comment WHERE false GROUP BY t_1.ps_supplycost, t_0.col_0, t_1.ps_availqty;
CREATE MATERIALIZED VIEW m2 AS SELECT t_0.c_mktsegment AS col_0, t_0.c_acctbal AS col_1, string_agg(('fBbvkbrdNa'), t_0.c_name) FILTER(WHERE false) AS col_2 FROM customer AS t_0 JOIN m1 AS t_1 ON t_0.c_acctbal = t_1.col_0 WHERE true GROUP BY t_0.c_phone, t_0.c_mktsegment, t_0.c_acctbal, t_0.c_custkey, t_0.c_address;
CREATE MATERIALIZED VIEW m3 AS SELECT (lower(tumble_0.item_name)) AS col_0, tumble_0.date_time AS col_1 FROM tumble(auction, auction.expires, INTERVAL '52') AS tumble_0 WHERE false GROUP BY tumble_0.item_name, tumble_0.date_time;
CREATE MATERIALIZED VIEW m4 AS SELECT (SMALLINT '415') AS col_0, t_0.ps_suppkey AS col_1, (FLOAT '148') AS col_2, t_0.ps_suppkey AS col_3 FROM partsupp AS t_0 RIGHT JOIN m0 AS t_1 ON t_0.ps_comment = t_1.col_1 AND true WHERE ((INT '-2147483648') <> (REAL '284')) GROUP BY t_0.ps_suppkey;
CREATE MATERIALIZED VIEW m5 AS SELECT (FLOAT '197') AS col_0, TIME '10:13:53' AS col_1 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '52') AS tumble_0 GROUP BY tumble_0.c2, tumble_0.c14, tumble_0.c15;
CREATE MATERIALIZED VIEW m6 AS SELECT (to_char(TIMESTAMP '2022-09-24 10:13:55', (md5(hop_0.col_0)))) AS col_0, hop_0.col_0 AS col_1 FROM hop(m3, m3.col_1, INTERVAL '86400', INTERVAL '5184000') AS hop_0 WHERE true GROUP BY hop_0.col_0 HAVING true;
CREATE MATERIALIZED VIEW m7 AS SELECT (BIGINT '365') AS col_0, (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, sq_3.col_0, NULL, NULL, NULL)) AS col_1, (- sq_3.col_0) AS col_2, (sq_3.col_0 - sq_3.col_0) AS col_3 FROM (WITH with_0 AS (SELECT TIME '10:13:55' AS col_0, (868) AS col_1 FROM lineitem AS t_1 RIGHT JOIN m6 AS t_2 ON t_1.l_comment = t_2.col_1 GROUP BY t_1.l_tax HAVING true) SELECT (REAL '781') AS col_0 FROM with_0 WHERE true) AS sq_3 WHERE false GROUP BY sq_3.col_0;
CREATE MATERIALIZED VIEW m8 AS SELECT (SMALLINT '0') AS col_0, (BIGINT '683') AS col_1, t_0.price AS col_2 FROM bid AS t_0 GROUP BY t_0.price;
CREATE MATERIALIZED VIEW m9 AS SELECT (md5(tumble_0.url)) AS col_0 FROM tumble(bid, bid.date_time, INTERVAL '96') AS tumble_0 GROUP BY tumble_0.url, tumble_0.price, tumble_0.auction HAVING false;
