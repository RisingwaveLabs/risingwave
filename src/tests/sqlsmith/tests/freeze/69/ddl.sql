CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT 'GJzchMq499' AS col_0 FROM person AS t_0 GROUP BY t_0.credit_card;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.p_partkey AS col_0, t_0.p_mfgr AS col_1, t_0.p_mfgr AS col_2 FROM part AS t_0 FULL JOIN customer AS t_1 ON t_0.p_comment = t_1.c_comment AND true GROUP BY t_0.p_mfgr, t_0.p_partkey HAVING (((INT '622')) < (BIGINT '9223372036854775807'));
CREATE MATERIALIZED VIEW m2 AS SELECT t_0.l_commitdate AS col_0, (TRIM(t_0.l_shipinstruct)) AS col_1 FROM lineitem AS t_0 GROUP BY t_0.l_linestatus, t_0.l_commitdate, t_0.l_shipinstruct;
CREATE MATERIALIZED VIEW m3 AS WITH with_0 AS (SELECT 'YxRSktGZkO' AS col_0, 'k288qoQYX2' AS col_1, t_1.col_0 AS col_2, t_1.col_0 AS col_3 FROM m1 AS t_1 RIGHT JOIN m0 AS t_2 ON t_1.col_1 = t_2.col_0 AND ((REAL '2147483647') <= (SMALLINT '204')) WHERE (true) GROUP BY t_1.col_2, t_1.col_0 HAVING ((51320999) = (252))) SELECT 'lFugvyMaRJ' AS col_0, ((INTERVAL '-1') + DATE '2022-03-17') AS col_1, (SMALLINT '-10719') AS col_2, TIME '01:49:13' AS col_3 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m4 AS SELECT (FLOAT '780') AS col_0, t_0.col_0 AS col_1, t_0.col_0 AS col_2, '1D8De0jpjU' AS col_3 FROM m0 AS t_0 GROUP BY t_0.col_0 HAVING true;
CREATE MATERIALIZED VIEW m5 AS SELECT (BIGINT '458') AS col_0, (999341303) AS col_1, (sq_2.col_2 & (INT '782')) AS col_2, sq_2.col_2 AS col_3 FROM (SELECT (char_length(t_1.s_address)) AS col_0, t_1.s_address AS col_1, (BIGINT '281') AS col_2, (BIGINT '799') AS col_3 FROM m1 AS t_0 RIGHT JOIN supplier AS t_1 ON t_0.col_0 = t_1.s_nationkey AND true GROUP BY t_1.s_address, t_1.s_nationkey) AS sq_2 WHERE false GROUP BY sq_2.col_2;
CREATE MATERIALIZED VIEW m7 AS SELECT (((BIGINT '93') * (827)) = (1)) AS col_0, TIMESTAMP '2022-03-17 00:49:15' AS col_1 FROM alltypes2 AS t_0 GROUP BY t_0.c4, t_0.c11;
CREATE MATERIALIZED VIEW m8 AS SELECT ((INT '69') + t_0.col_0) AS col_0, t_0.col_0 AS col_1, t_1.l_extendedprice AS col_2, min(DATE '2022-03-10') FILTER(WHERE false) AS col_3 FROM m2 AS t_0 JOIN lineitem AS t_1 ON t_0.col_0 = t_1.l_commitdate AND true WHERE true GROUP BY t_1.l_extendedprice, t_1.l_linenumber, t_0.col_1, t_1.l_shipdate, t_1.l_receiptdate, t_0.col_0 HAVING true;
CREATE MATERIALIZED VIEW m9 AS SELECT (t_0.col_0 - ((SMALLINT '236') + (INT '1'))) AS col_0, (upper((OVERLAY(t_0.col_1 PLACING t_0.col_1 FROM (INT '-2147483648'))))) AS col_1, t_0.col_0 AS col_2 FROM m2 AS t_0 JOIN part AS t_1 ON t_0.col_1 = t_1.p_mfgr WHERE (TIMESTAMP '2022-03-17 01:48:16' < t_0.col_0) GROUP BY t_0.col_1, t_0.col_0, t_1.p_retailprice HAVING CAST((INT '980') AS BOOLEAN);
