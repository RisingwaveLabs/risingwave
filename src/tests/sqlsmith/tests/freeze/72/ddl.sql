CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT ((INTERVAL '-470068') + (TIMESTAMP '2022-08-10 19:50:47')) AS col_0, (REAL '575541603') AS col_1, (TRIM(t_1.item_name)) AS col_2, TIMESTAMP '2022-08-10 19:49:47' AS col_3 FROM part AS t_0 RIGHT JOIN auction AS t_1 ON t_0.p_brand = t_1.description GROUP BY t_1.item_name, t_0.p_comment, t_1.seller, t_0.p_container, t_1.date_time;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.s_name AS col_0, t_1.c4 AS col_1, t_1.c9 AS col_2 FROM supplier AS t_0 LEFT JOIN alltypes2 AS t_1 ON t_0.s_nationkey = t_1.c3 GROUP BY t_1.c9, t_1.c3, t_1.c14, t_1.c16, t_0.s_acctbal, t_1.c13, t_1.c4, t_1.c7, t_0.s_name, t_0.s_comment, t_1.c8 HAVING false;
CREATE MATERIALIZED VIEW m2 AS SELECT (tumble_0.c4 / (INT '323')) AS col_0, (BIGINT '-5031166049044004937') AS col_1, (BIGINT '826') AS col_2, (CASE WHEN true THEN (tumble_0.c10 - (INTERVAL '-3600')) ELSE tumble_0.c10 END) AS col_3 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '4') AS tumble_0 GROUP BY tumble_0.c10, tumble_0.c16, tumble_0.c4, tumble_0.c1 HAVING tumble_0.c1;
CREATE MATERIALIZED VIEW m3 AS SELECT (INT '305') AS col_0, TIMESTAMP '2022-08-10 19:50:48' AS col_1 FROM lineitem AS t_0 LEFT JOIN m0 AS t_1 ON t_0.l_shipinstruct = t_1.col_2 GROUP BY t_0.l_linestatus, t_0.l_commitdate, t_1.col_1, t_0.l_partkey, t_0.l_shipinstruct, t_0.l_orderkey, t_0.l_extendedprice, t_1.col_2, t_0.l_tax;
CREATE MATERIALIZED VIEW m4 AS SELECT t_0.col_0 AS col_0, (t_0.col_0 + t_1.o_custkey) AS col_1, t_1.o_custkey AS col_2, DATE '2022-08-10' AS col_3 FROM m2 AS t_0 FULL JOIN orders AS t_1 ON t_0.col_2 = t_1.o_orderkey GROUP BY t_1.o_totalprice, t_1.o_orderdate, t_0.col_0, t_1.o_custkey HAVING true;
CREATE MATERIALIZED VIEW m5 AS SELECT (SMALLINT '224') AS col_0 FROM (SELECT hop_0.city AS col_0, (SMALLINT '254') AS col_1 FROM hop(person, person.date_time, INTERVAL '60', INTERVAL '4500') AS hop_0 WHERE true GROUP BY hop_0.id, hop_0.credit_card, hop_0.city, hop_0.name HAVING ((FLOAT '2147483647') = (REAL '325'))) AS sq_1 GROUP BY sq_1.col_1 HAVING ((INT '943') < (FLOAT '668'));
CREATE MATERIALIZED VIEW m6 AS SELECT t_0.col_1 AS col_0, t_0.col_1 AS col_1, TIMESTAMP '2022-08-10 19:50:49' AS col_2 FROM m3 AS t_0 WHERE true GROUP BY t_0.col_1;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.extra AS col_0, t_0.extra AS col_1 FROM auction AS t_0 GROUP BY t_0.extra;
CREATE MATERIALIZED VIEW m8 AS SELECT t_1.l_partkey AS col_0, ((coalesce(t_1.l_partkey, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) / t_1.l_orderkey) AS col_1 FROM part AS t_0 LEFT JOIN lineitem AS t_1 ON t_0.p_mfgr = t_1.l_shipmode WHERE true GROUP BY t_1.l_orderkey, t_0.p_retailprice, t_0.p_container, t_0.p_type, t_0.p_partkey, t_1.l_partkey, t_1.l_linestatus, t_1.l_shipinstruct, t_1.l_shipdate;
CREATE MATERIALIZED VIEW m9 AS SELECT 'Hx0R9scO0V' AS col_0, t_2.city AS col_1, TIMESTAMP '2022-07-31 10:17:11' AS col_2, t_2.id AS col_3 FROM person AS t_2 GROUP BY t_2.city, t_2.id, t_2.date_time, t_2.name;
