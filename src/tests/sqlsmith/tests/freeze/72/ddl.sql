CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT (DATE '2022-08-05' - (INTERVAL '86400')) AS col_0, t_1.seller AS col_1, (concat_ws('RRBDZEFLxS', (TRIM(t_1.item_name)), t_0.p_container)) AS col_2, (BIGINT '349') AS col_3 FROM part AS t_0 RIGHT JOIN auction AS t_1 ON t_0.p_brand = t_1.description GROUP BY t_1.item_name, t_0.p_comment, t_1.seller, t_0.p_container, t_1.date_time;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.p_type AS col_0, t_1.ps_suppkey AS col_1 FROM part AS t_0 JOIN partsupp AS t_1 ON t_0.p_partkey = t_1.ps_availqty GROUP BY t_0.p_comment, t_0.p_type, t_0.p_brand, t_1.ps_suppkey HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT (tumble_0.c4 | tumble_0.c4) AS col_0, (BIGINT '-5031166049044004937') AS col_1, (BIGINT '826') AS col_2, (CASE WHEN true THEN ((INTERVAL '-60') + tumble_0.c10) ELSE (tumble_0.c10 + (INTERVAL '3600')) END) AS col_3 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '4') AS tumble_0 GROUP BY tumble_0.c10, tumble_0.c16, tumble_0.c4, tumble_0.c1 HAVING tumble_0.c1;
CREATE MATERIALIZED VIEW m3 AS SELECT max(sq_1.col_0) AS col_0, (coalesce((DATE '2022-08-10' - ((616) * (INTERVAL '40662'))), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS col_1, (INTERVAL '-1') AS col_2 FROM (SELECT TIMESTAMP '2022-08-10 19:50:47' AS col_0, hop_0.c7 AS col_1, hop_0.c9 AS col_2 FROM hop(alltypes1, alltypes1.c11, INTERVAL '60', INTERVAL '4800') AS hop_0 GROUP BY hop_0.c4, hop_0.c9, hop_0.c1, hop_0.c2, hop_0.c5, hop_0.c7, hop_0.c16 HAVING hop_0.c1) AS sq_1 WHERE true GROUP BY sq_1.col_0 HAVING false;
CREATE MATERIALIZED VIEW m4 AS SELECT t_0.col_0 AS col_0, t_0.col_3 AS col_1, t_0.col_3 AS col_2, (BIGINT '544') AS col_3 FROM m2 AS t_0 GROUP BY t_0.col_0, t_0.col_3;
CREATE MATERIALIZED VIEW m5 AS SELECT 'o8c660eoYx' AS col_0, t_1.col_1 AS col_1, 'xrrvz7MpZX' AS col_2, 'GNvQHqGdwO' AS col_3 FROM m0 AS t_0 RIGHT JOIN m2 AS t_1 ON t_0.col_3 = t_1.col_1 WHERE false GROUP BY t_1.col_0, t_0.col_2, t_1.col_1;
CREATE MATERIALIZED VIEW m6 AS SELECT 'PSpVVuO2L7' AS col_0, t_0.r_name AS col_1, t_0.r_regionkey AS col_2, t_0.r_name AS col_3 FROM region AS t_0 WHERE true GROUP BY t_0.r_name, t_0.r_regionkey HAVING true;
CREATE MATERIALIZED VIEW m7 AS SELECT TIME '19:50:50' AS col_0, t_1.o_orderstatus AS col_1, 'HGSM28Hx0R' AS col_2, t_1.o_orderstatus AS col_3 FROM m5 AS t_0 RIGHT JOIN orders AS t_1 ON t_0.col_2 = t_1.o_clerk GROUP BY t_1.o_orderstatus;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT true AS col_0, t_1.s_comment AS col_1, t_2.o_orderpriority AS col_2, t_1.s_comment AS col_3 FROM supplier AS t_1 FULL JOIN orders AS t_2 ON t_1.s_comment = t_2.o_clerk WHERE false GROUP BY t_2.o_orderpriority, t_1.s_phone, t_1.s_comment, t_2.o_orderdate HAVING false) SELECT TIMESTAMP '2022-08-10 19:49:51' AS col_0 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m9 AS SELECT t_0.url AS col_0, t_0.url AS col_1 FROM bid AS t_0 WHERE true GROUP BY t_0.url HAVING (coalesce(false, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL));
