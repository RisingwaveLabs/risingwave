CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT true AS col_0, t_0.channel AS col_1 FROM bid AS t_0 LEFT JOIN nation AS t_1 ON t_0.extra = t_1.n_comment GROUP BY t_0.date_time, t_0.channel;
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT '8CZpDcwYxd' AS col_0, sq_3.col_0 AS col_1 FROM (SELECT t_2.p_container AS col_0, (TRIM(BOTH ('LDTpE6oww4') FROM t_2.p_type)) AS col_1 FROM nation AS t_1 FULL JOIN part AS t_2 ON t_1.n_name = t_2.p_type GROUP BY t_2.p_container, t_2.p_type HAVING false) AS sq_3 WHERE false GROUP BY sq_3.col_0 HAVING true) SELECT 'NAVaAbHqcT' AS col_0, (FLOAT '632') AS col_1, true AS col_2, (BIGINT '155') AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m2 AS SELECT ((FLOAT '-2147483648') / (REAL '-1393505060')) AS col_0, TIME '15:27:13' AS col_1, ARRAY[(INT '57'), (INT '0')] AS col_2, (hop_0.c13 * (SMALLINT '758')) AS col_3 FROM hop(alltypes2, alltypes2.c11, INTERVAL '3600', INTERVAL '104400') AS hop_0 WHERE hop_0.c1 GROUP BY hop_0.c7, hop_0.c13, hop_0.c10, hop_0.c15, hop_0.c6;
CREATE MATERIALIZED VIEW m3 AS SELECT 'wStPMLy14v' AS col_0, t_0.col_0 AS col_1 FROM m1 AS t_0 GROUP BY t_0.col_0 HAVING (true);
CREATE MATERIALIZED VIEW m4 AS SELECT (56) AS col_0, t_0.col_0 AS col_1, t_0.col_0 AS col_2, t_0.col_0 AS col_3 FROM m2 AS t_0 WHERE false GROUP BY t_0.col_0;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT (FLOAT '649') AS col_0 FROM m2 AS t_1 JOIN m2 AS t_2 ON t_1.col_1 = t_2.col_1 WHERE CAST((INT '100') AS BOOLEAN) GROUP BY t_1.col_0) SELECT (REAL '744') AS col_0, TIME '15:26:15' AS col_1, (BIGINT '439') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m6 AS SELECT t_0.c13 AS col_0 FROM alltypes2 AS t_0 RIGHT JOIN auction AS t_1 ON t_0.c9 = t_1.description AND (t_0.c5 <= (CASE WHEN (t_1.initial_bid < t_0.c5) THEN t_0.c2 WHEN t_0.c1 THEN (t_0.c2 * (t_0.c2 / ((t_0.c2 - (SMALLINT '829')) >> t_0.c3))) ELSE (SMALLINT '756') END)) WHERE ((t_0.c10 + (t_0.c13 * t_0.c3)) IS NULL) GROUP BY t_1.category, t_0.c14, t_0.c2, t_0.c13, t_0.c5 HAVING true;
CREATE MATERIALIZED VIEW m7 AS SELECT t_1.s_suppkey AS col_0, ((REAL '305') + t_0.c6) AS col_1 FROM alltypes2 AS t_0 LEFT JOIN supplier AS t_1 ON t_0.c9 = t_1.s_address AND t_0.c1 GROUP BY t_0.c3, t_0.c8, t_0.c13, t_1.s_phone, t_0.c4, t_1.s_suppkey, t_0.c6, t_1.s_name, t_0.c10;
CREATE MATERIALIZED VIEW m8 AS SELECT tumble_0.url AS col_0, tumble_0.url AS col_1 FROM tumble(bid, bid.date_time, INTERVAL '19') AS tumble_0 GROUP BY tumble_0.url, tumble_0.date_time, tumble_0.bidder;
CREATE MATERIALIZED VIEW m9 AS SELECT sq_2.col_0 AS col_0 FROM (SELECT (md5('ue80RVCxBF')) AS col_0, TIMESTAMP '2022-06-11 15:27:17' AS col_1, (((SMALLINT '64') # t_1.p_size) / (SMALLINT '614')) AS col_2, t_1.p_retailprice AS col_3 FROM partsupp AS t_0 LEFT JOIN part AS t_1 ON t_0.ps_comment = t_1.p_brand GROUP BY t_0.ps_availqty, t_1.p_size, t_1.p_retailprice, t_1.p_name HAVING (coalesce(true, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL))) AS sq_2 WHERE false GROUP BY sq_2.col_3, sq_2.col_0 HAVING false;
