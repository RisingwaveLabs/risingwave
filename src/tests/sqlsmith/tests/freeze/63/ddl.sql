CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT tumble_0.c8 AS col_0, (tumble_0.c10 - tumble_0.c13) AS col_1, tumble_0.c3 AS col_2, (coalesce(NULL, (TIME '15:57:49' - tumble_0.c13), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS col_3 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '7') AS tumble_0 GROUP BY tumble_0.c5, tumble_0.c10, tumble_0.c13, tumble_0.c2, tumble_0.c11, tumble_0.c3, tumble_0.c8;
CREATE MATERIALIZED VIEW m1 AS SELECT ((SMALLINT '9') - t_1.r_regionkey) AS col_0, (SMALLINT '20556') AS col_1, true AS col_2 FROM region AS t_0 LEFT JOIN region AS t_1 ON t_0.r_comment = t_1.r_name GROUP BY t_1.r_name, t_1.r_regionkey, t_1.r_comment;
CREATE MATERIALIZED VIEW m2 AS SELECT (TRIM(BOTH t_0.l_linestatus FROM ('y2Qp7MUVr2'))) AS col_0, (OVERLAY((OVERLAY(t_0.l_shipmode PLACING t_0.l_linestatus FROM ((SMALLINT '-3144') % t_0.l_linenumber) FOR t_0.l_linenumber)) PLACING (TRIM(LEADING t_0.l_linestatus FROM t_0.l_shipmode)) FROM t_0.l_linenumber)) AS col_1 FROM lineitem AS t_0 GROUP BY t_0.l_extendedprice, t_0.l_linenumber, t_0.l_shipmode, t_0.l_tax, t_0.l_linestatus, t_0.l_quantity HAVING false;
CREATE MATERIALIZED VIEW m3 AS SELECT t_0.email_address AS col_0, t_0.id AS col_1, (((REAL '2147483647')) + (FLOAT '-2147483648')) AS col_2 FROM person AS t_0 RIGHT JOIN m2 AS t_1 ON t_0.city = t_1.col_1 AND (t_0.id = (BIGINT '815')) GROUP BY t_0.id, t_0.extra, t_1.col_0, t_0.email_address;
CREATE MATERIALIZED VIEW m4 AS SELECT t_1.ps_partkey AS col_0, (INT '-302149372') AS col_1 FROM partsupp AS t_0 LEFT JOIN partsupp AS t_1 ON t_0.ps_suppkey = t_1.ps_availqty GROUP BY t_1.ps_partkey;
CREATE MATERIALIZED VIEW m5 AS SELECT sq_2.col_1 AS col_0, sq_2.col_1 AS col_1, sq_2.col_1 AS col_2, (INT '34') AS col_3 FROM (SELECT ((INT '748') # (SMALLINT '214')) AS col_0, t_1.col_0 AS col_1 FROM partsupp AS t_0 FULL JOIN m2 AS t_1 ON t_0.ps_comment = t_1.col_0 AND ((((SMALLINT '29103') & (SMALLINT '933')) & ((SMALLINT '799'))) = (t_0.ps_supplycost * ((SMALLINT '867') % (2147483647)))) GROUP BY t_0.ps_suppkey, t_0.ps_supplycost, t_1.col_1, t_1.col_0 HAVING CAST(((char_length(t_1.col_0)) | CAST(true AS INT)) AS BOOLEAN)) AS sq_2 GROUP BY sq_2.col_1 HAVING true;
CREATE MATERIALIZED VIEW m6 AS SELECT t_0.city AS col_0, TIMESTAMP '2022-04-28 15:57:52' AS col_1, TIMESTAMP '2022-04-28 15:58:52' AS col_2, 'TeVmdVxMfy' AS col_3 FROM person AS t_0 FULL JOIN m2 AS t_1 ON t_0.extra = t_1.col_1 AND true GROUP BY t_0.city, t_0.date_time;
CREATE MATERIALIZED VIEW m7 AS WITH with_0 AS (SELECT t_1.c1 AS col_0, (DATE '2022-04-28' + (INT '780')) AS col_1 FROM alltypes1 AS t_1 LEFT JOIN partsupp AS t_2 ON t_1.c7 = t_2.ps_supplycost AND t_1.c1 GROUP BY t_1.c14, t_1.c1, t_1.c5, t_1.c8, t_1.c4, t_2.ps_partkey, t_1.c3) SELECT ((SMALLINT '1') + (SMALLINT '151')) AS col_0, (FLOAT '776') AS col_1, (((INTERVAL '773205') / (SMALLINT '117')) / (FLOAT '550')) AS col_2, (2088811577) AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m8 AS SELECT ('LQ4EddiVem') AS col_0, hop_0.col_0 AS col_1, hop_0.col_0 AS col_2, hop_0.col_0 AS col_3 FROM hop(m6, m6.col_2, INTERVAL '60', INTERVAL '4440') AS hop_0 GROUP BY hop_0.col_0 HAVING false;
CREATE MATERIALIZED VIEW m9 AS SELECT t_2.n_comment AS col_0, t_2.n_comment AS col_1 FROM nation AS t_2 WHERE true GROUP BY t_2.n_comment HAVING (((REAL '565') / (REAL '800')) <= ((FLOAT '704')));
