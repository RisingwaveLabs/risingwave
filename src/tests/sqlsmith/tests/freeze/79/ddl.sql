CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_0.c_comment AS col_0 FROM customer AS t_0 WHERE ((SMALLINT '188') <> (FLOAT '2147483647')) GROUP BY t_0.c_address, t_0.c_comment, t_0.c_custkey HAVING max(false);
CREATE MATERIALIZED VIEW m2 AS WITH with_0 AS (SELECT (OVERLAY(t_1.col_0 PLACING t_1.col_0 FROM (CASE WHEN true THEN (INT '-2147483648') WHEN CAST((INT '334') AS BOOLEAN) THEN (INT '727') ELSE (INT '263') END) FOR (INT '0'))) AS col_0, t_1.col_0 AS col_1 FROM m0 AS t_1 WHERE (TIME '19:44:30' > TIME '20:44:30') GROUP BY t_1.col_0) SELECT TIMESTAMP '2022-06-16 19:44:30' AS col_0, TIMESTAMP '2022-06-09 20:44:30' AS col_1, '9QziMehTar' AS col_2, 'IXgm60TclT' AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m3 AS SELECT (tumble_0.col_0 - (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, (INTERVAL '-1')))) AS col_0 FROM tumble(m2, m2.col_1, INTERVAL '52') AS tumble_0 GROUP BY tumble_0.col_0, tumble_0.col_3 HAVING (true);
CREATE MATERIALIZED VIEW m4 AS SELECT 'SsEDctKzCJ' AS col_0, t_0.l_linestatus AS col_1, t_0.l_quantity AS col_2 FROM lineitem AS t_0 GROUP BY t_0.l_quantity, t_0.l_linestatus HAVING false;
CREATE MATERIALIZED VIEW m6 AS SELECT t_1.o_orderstatus AS col_0, (lower(t_1.o_orderstatus)) AS col_1, t_1.o_orderpriority AS col_2 FROM region AS t_0 JOIN orders AS t_1 ON t_0.r_name = t_1.o_orderpriority AND true GROUP BY t_1.o_orderstatus, t_0.r_name, t_1.o_clerk, t_1.o_orderpriority HAVING CAST((INT '334877859') AS BOOLEAN);
CREATE MATERIALIZED VIEW m7 AS SELECT t_1.p_type AS col_0 FROM m4 AS t_0 FULL JOIN part AS t_1 ON t_0.col_2 = t_1.p_retailprice GROUP BY t_1.p_container, t_1.p_type, t_0.col_2, t_0.col_0, t_1.p_name, t_1.p_brand HAVING ((BIGINT '723') >= (SMALLINT '-32768'));
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT t_1.col_1 AS col_0 FROM m2 AS t_1 FULL JOIN m0 AS t_2 ON t_1.col_2 = t_2.col_0 WHERE (false) GROUP BY t_1.col_1 HAVING ((INTERVAL '-604800') > (INTERVAL '60'))) SELECT DATE '2022-06-16' AS col_0, DATE '2022-06-15' AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m9 AS SELECT (TIMESTAMP '2022-06-09 20:44:33') AS col_0, hop_0.date_time AS col_1, (BIGINT '712') AS col_2, (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TIMESTAMP '2022-06-09 01:37:01', NULL)) AS col_3 FROM hop(bid, bid.date_time, INTERVAL '574900', INTERVAL '36218700') AS hop_0 WHERE (hop_0.bidder >= (INT '242')) GROUP BY hop_0.bidder, hop_0.date_time, hop_0.price HAVING (true);
