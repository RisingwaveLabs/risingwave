CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT tumble_0.credit_card AS col_0, tumble_0.credit_card AS col_1, (TRIM(BOTH tumble_0.city FROM min('MYJGOF1sPQ') FILTER(WHERE false))) AS col_2, TIME '02:55:48' AS col_3 FROM tumble(person, person.date_time, INTERVAL '41') AS tumble_0 GROUP BY tumble_0.city, tumble_0.id, tumble_0.credit_card;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.col_2 AS col_0, t_0.col_0 AS col_1, TIMESTAMP '2022-05-15 22:52:30' AS col_2 FROM m0 AS t_0 JOIN bid AS t_1 ON t_0.col_0 = t_1.channel GROUP BY t_0.col_0, t_0.col_2, t_1.url;
CREATE MATERIALIZED VIEW m2 AS SELECT (INT '226') AS col_0, ((SMALLINT '150') / (BIGINT '360')) AS col_1 FROM part AS t_0 WHERE false GROUP BY t_0.p_comment, t_0.p_retailprice, t_0.p_partkey;
CREATE MATERIALIZED VIEW m3 AS SELECT t_1.ps_suppkey AS col_0, t_0.col_1 AS col_1, t_1.ps_availqty AS col_2, t_0.col_1 AS col_3 FROM m1 AS t_0 LEFT JOIN partsupp AS t_1 ON t_0.col_0 = t_1.ps_comment AND (((REAL '569') + ((FLOAT '-1285367768') * (FLOAT '470'))) > (SMALLINT '899')) WHERE (((FLOAT '635') < (SMALLINT '201')) = (false)) GROUP BY t_0.col_1, t_1.ps_comment, t_1.ps_suppkey, t_1.ps_availqty;
CREATE MATERIALIZED VIEW m4 AS SELECT (OVERLAY(t_0.l_comment PLACING (concat_ws(t_1.c_name, 'vB7hte0ACC')) FROM t_0.l_partkey)) AS col_0, TIME '22:51:33' AS col_1, t_1.c_name AS col_2, (TRIM(TRAILING t_0.l_comment FROM t_0.l_linestatus)) AS col_3 FROM lineitem AS t_0 LEFT JOIN customer AS t_1 ON t_0.l_shipinstruct = t_1.c_name WHERE true GROUP BY t_0.l_discount, t_1.c_acctbal, t_1.c_name, t_0.l_tax, t_0.l_linestatus, t_0.l_partkey, t_0.l_comment;
CREATE MATERIALIZED VIEW m5 AS SELECT DATE '2022-05-15' AS col_0, sq_2.col_2 AS col_1 FROM (WITH with_0 AS (SELECT t_1.price AS col_0 FROM bid AS t_1 GROUP BY t_1.bidder, t_1.price, t_1.auction HAVING (min(DATE '2022-05-15') IS NOT NULL)) SELECT ((min((INT '0')) / (INT '180')) + DATE '2022-05-15') AS col_0, (CAST(true AS INT) / (SMALLINT '20767')) AS col_1, CAST(NULL AS STRUCT<a BOOLEAN, b TIMESTAMP, c DOUBLE>) AS col_2 FROM with_0 WHERE false) AS sq_2 WHERE true GROUP BY sq_2.col_0, sq_2.col_2;
CREATE MATERIALIZED VIEW m6 AS SELECT hop_0.description AS col_0, hop_0.date_time AS col_1 FROM hop(auction, auction.date_time, INTERVAL '34213', INTERVAL '2976531') AS hop_0 WHERE false GROUP BY hop_0.extra, hop_0.description, hop_0.date_time HAVING true;
CREATE MATERIALIZED VIEW m7 AS SELECT (INT '449') AS col_0, t_0.col_2 AS col_1 FROM m3 AS t_0 LEFT JOIN auction AS t_1 ON t_0.col_3 = t_1.extra AND true GROUP BY t_0.col_3, t_0.col_2 HAVING true;
CREATE MATERIALIZED VIEW m8 AS SELECT (t_1.col_0 - t_1.col_0) AS col_0, (false) AS col_1 FROM alltypes1 AS t_0 FULL JOIN m3 AS t_1 ON t_0.c9 = t_1.col_3 GROUP BY t_1.col_0, t_0.c2, t_0.c7;
CREATE MATERIALIZED VIEW m9 AS SELECT (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, hop_0.price, NULL, NULL)) AS col_0 FROM hop(bid, bid.date_time, INTERVAL '86400', INTERVAL '2937600') AS hop_0 WHERE false GROUP BY hop_0.channel, hop_0.price, hop_0.extra HAVING false;
