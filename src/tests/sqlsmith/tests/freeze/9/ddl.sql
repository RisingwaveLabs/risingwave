CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m2 AS SELECT DATE '2021-12-21' AS col_0, hop_0.bidder AS col_1, hop_0.bidder AS col_2 FROM hop(bid, bid.date_time, INTERVAL '60', INTERVAL '3240') AS hop_0 WHERE false GROUP BY hop_0.bidder, hop_0.extra, hop_0.date_time;
CREATE MATERIALIZED VIEW m3 AS SELECT (t_0.c_custkey >> (SMALLINT '302')) AS col_0, ((SMALLINT '0') & t_0.c_custkey) AS col_1, (length(('ln9q8szd9c'))) AS col_2 FROM customer AS t_0 WHERE ((REAL '161') < (606)) GROUP BY t_0.c_custkey HAVING true;
CREATE MATERIALIZED VIEW m4 AS SELECT min(TIMESTAMP '2021-12-15 11:25:22') FILTER(WHERE (true)) AS col_0 FROM hop(bid, bid.date_time, INTERVAL '60', INTERVAL '1980') AS hop_0 WHERE true GROUP BY hop_0.date_time;
CREATE MATERIALIZED VIEW m5 AS SELECT t_1.c3 AS col_0, t_0.p_container AS col_1 FROM part AS t_0 LEFT JOIN alltypes2 AS t_1 ON t_0.p_retailprice = t_1.c7 AND true GROUP BY t_1.c13, t_1.c5, t_0.p_comment, t_1.c8, t_0.p_retailprice, t_0.p_container, t_1.c7, t_1.c3, t_1.c1, t_0.p_type;
CREATE MATERIALIZED VIEW m6 AS SELECT hop_0.email_address AS col_0, hop_0.email_address AS col_1, 'gyPN9SIKXe' AS col_2, hop_0.email_address AS col_3 FROM hop(person, person.date_time, INTERVAL '1', INTERVAL '25') AS hop_0 GROUP BY hop_0.email_address, hop_0.name HAVING false;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT (((INT '641') / (- (SMALLINT '193'))) / tumble_1.id) AS col_0, (INTERVAL '-196254') AS col_1, (SMALLINT '355') AS col_2 FROM tumble(person, person.date_time, INTERVAL '65') AS tumble_1 WHERE false GROUP BY tumble_1.city, tumble_1.name, tumble_1.id HAVING CAST((INT '977') AS BOOLEAN)) SELECT (BIGINT '822825985169315830') AS col_0, (-2147483648) AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m9 AS SELECT t_0.r_name AS col_0, t_1.col_0 AS col_1 FROM region AS t_0 LEFT JOIN m5 AS t_1 ON t_0.r_regionkey = t_1.col_0 AND (true) GROUP BY t_1.col_0, t_0.r_name HAVING true;
