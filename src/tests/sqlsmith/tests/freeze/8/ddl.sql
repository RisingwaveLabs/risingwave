CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_0.r_comment AS col_0, t_0.r_regionkey AS col_1 FROM region AS t_0 WHERE (((SMALLINT '227') + t_0.r_regionkey) >= ((BIGINT '402') + (SMALLINT '354'))) GROUP BY t_0.r_regionkey, t_0.r_comment HAVING ((INT '323') >= (REAL '603'));
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT (255) AS col_0 FROM bid AS t_1 WHERE ((800) <= (FLOAT '0')) GROUP BY t_1.auction) SELECT DATE '2022-04-16' AS col_0 FROM with_0;
CREATE MATERIALIZED VIEW m2 AS SELECT (((INT '663')) # (INT '1')) AS col_0, (INTERVAL '-3600') AS col_1 FROM alltypes2 AS t_0 GROUP BY t_0.c5, t_0.c1, t_0.c15, t_0.c4;
CREATE MATERIALIZED VIEW m3 AS SELECT t_1.c6 AS col_0, t_1.c1 AS col_1 FROM nation AS t_0 JOIN alltypes2 AS t_1 ON t_0.n_comment = t_1.c9 AND (t_1.c2 <> (t_1.c5 / t_1.c5)) GROUP BY t_1.c2, t_1.c1, t_1.c6, t_0.n_name, t_1.c3, t_1.c8, t_0.n_regionkey, t_1.c7 HAVING t_1.c1;
CREATE MATERIALIZED VIEW m4 AS WITH with_0 AS (SELECT ARRAY['cDy8sQfYMx', 'CO4dFEg7zg', 'FLZqRk1EwG', 'dbSszyaV3l'] AS col_0, ARRAY['NuZCMkW3Pp', 'acLgr1ooHv', 'AuluRcTrGn', '3KjvCFwhGq'] AS col_1, t_1.c16 AS col_2 FROM alltypes2 AS t_1 LEFT JOIN auction AS t_2 ON t_1.c11 = t_2.expires AND t_1.c1 WHERE t_1.c1 GROUP BY t_1.c16) SELECT (FLOAT '358') AS col_0, false AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m5 AS SELECT hop_0.city AS col_0 FROM hop(person, person.date_time, INTERVAL '604800', INTERVAL '25401600') AS hop_0 GROUP BY hop_0.city HAVING true;
CREATE MATERIALIZED VIEW m6 AS SELECT 'PD1RjTt5Lj' AS col_0, (SMALLINT '615') AS col_1, t_0.state AS col_2, (split_part(t_0.state, t_0.state, (INT '1155076413'))) AS col_3 FROM person AS t_0 WHERE (CASE WHEN true THEN ((SMALLINT '484') <= t_0.id) WHEN true THEN ((OVERLAY(t_0.credit_card PLACING 'ja5E3LjeZC' FROM ((INT '2147483647') & (SMALLINT '24533'))))) IN ('BLvvpfWSJM', (TRIM(t_0.city)), t_0.credit_card, t_0.credit_card) WHEN false THEN (((((SMALLINT '636') # (SMALLINT '654')) << (INT '811')) % ((-1133457265) % (SMALLINT '580'))) = (SMALLINT '1')) ELSE true END) GROUP BY t_0.email_address, t_0.state HAVING false;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.col_0 AS col_0, DATE '2022-04-16' AS col_1, t_0.col_0 AS col_2, DATE '2022-04-15' AS col_3 FROM m1 AS t_0 WHERE false GROUP BY t_0.col_0 HAVING true;
CREATE MATERIALIZED VIEW m9 AS WITH with_0 AS (SELECT '03uK6ZUgb6' AS col_0, (md5((TRIM((md5((TRIM(sq_5.col_0)))))))) AS col_1 FROM (SELECT sq_4.col_2 AS col_0, 'IHjqadmYD1' AS col_1 FROM (WITH with_1 AS (SELECT t_2.p_size AS col_0, t_3.c_custkey AS col_1 FROM part AS t_2 JOIN customer AS t_3 ON t_2.p_container = t_3.c_address AND ((TIME '04:00:09' + (INTERVAL '-3600')) IS NULL) GROUP BY t_2.p_size, t_3.c_custkey HAVING false) SELECT ((169) - (BIGINT '186')) AS col_0, (min((INT '522')) FILTER(WHERE true) + DATE '2022-04-16') AS col_1, '0Y1LHZcvbm' AS col_2 FROM with_1 WHERE (false)) AS sq_4 GROUP BY sq_4.col_2) AS sq_5 WHERE false GROUP BY sq_5.col_0 HAVING true) SELECT (REAL '818') AS col_0, (((SMALLINT '0') | (SMALLINT '315')) + (SMALLINT '296')) AS col_1 FROM with_0;
