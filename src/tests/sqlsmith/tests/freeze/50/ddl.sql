CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS WITH with_0 AS (SELECT (to_char((DATE '2022-01-01' + TIME '01:36:07'), (CASE WHEN false THEN t_2.l_shipinstruct WHEN true THEN t_2.l_shipinstruct ELSE t_1.l_linestatus END))) AS col_0 FROM lineitem AS t_1 FULL JOIN lineitem AS t_2 ON t_1.l_tax = t_2.l_tax WHERE (true) GROUP BY t_1.l_shipdate, t_1.l_partkey, t_1.l_suppkey, t_1.l_linenumber, t_2.l_orderkey, t_2.l_receiptdate, t_2.l_shipinstruct, t_1.l_linestatus, t_2.l_shipmode) SELECT (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, ((DATE '2021-12-26' - (INT '114')) - (INT '300')), NULL, NULL, NULL)) AS col_0, (true) AS col_1, (FLOAT '761') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m1 AS SELECT hop_0.c6 AS col_0, (DATE '2022-01-02' + (INT '536')) AS col_1 FROM hop(alltypes2, alltypes2.c11, INTERVAL '60', INTERVAL '5280') AS hop_0 WHERE true GROUP BY hop_0.c8, hop_0.c7, hop_0.c6, hop_0.c3;
CREATE MATERIALIZED VIEW m2 AS SELECT t_0.expires AS col_0, (OVERLAY('25ZQmIUYD6' PLACING t_0.extra FROM (INT '792') FOR (INT '394'))) AS col_1, (BIGINT '717') AS col_2, (648) AS col_3 FROM auction AS t_0 FULL JOIN region AS t_1 ON t_0.item_name = t_1.r_name GROUP BY t_0.expires, t_0.extra, t_0.reserve;
CREATE MATERIALIZED VIEW m3 AS SELECT t_1.extra AS col_0, t_1.auction AS col_1, ((t_1.auction * (BIGINT '849')) * t_1.bidder) AS col_2 FROM partsupp AS t_0 JOIN bid AS t_1 ON t_0.ps_comment = t_1.channel GROUP BY t_1.auction, t_1.bidder, t_0.ps_comment, t_1.channel, t_1.extra, t_0.ps_supplycost;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT DATE '2022-01-02' AS col_0, t_2.l_partkey AS col_1, (substr((substr(t_1.url, t_2.l_partkey, (INT '79'))), (INT '0'), (t_2.l_partkey & t_2.l_partkey))) AS col_2, t_2.l_commitdate AS col_3 FROM bid AS t_1 FULL JOIN lineitem AS t_2 ON t_1.extra = t_2.l_returnflag WHERE false GROUP BY t_2.l_partkey, t_1.price, t_1.url, t_2.l_commitdate, t_2.l_extendedprice HAVING true) SELECT ((INTERVAL '604800') / (INT '289')) AS col_0, (INT '650') AS col_1 FROM with_0 WHERE false;
CREATE MATERIALIZED VIEW m6 AS SELECT (BIGINT '0') AS col_0, (BIGINT '703') AS col_1 FROM m3 AS t_0 JOIN bid AS t_1 ON t_0.col_2 = t_1.price WHERE ((BIGINT '711') <> (SMALLINT '-10609')) GROUP BY t_0.col_2, t_1.bidder;
CREATE MATERIALIZED VIEW m7 AS SELECT 'u8ZOSpI3Mr' AS col_0 FROM region AS t_2 GROUP BY t_2.r_comment HAVING false;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT sq_4.col_1 AS col_0, sq_4.col_1 AS col_1, sq_4.col_1 AS col_2 FROM (SELECT ((coalesce(NULL, NULL, NULL, NULL, (INT '86'), NULL, NULL, NULL, NULL, NULL)) % (SMALLINT '0')) AS col_0, CAST(max(false) AS INT) AS col_1 FROM customer AS t_3 WHERE (((SMALLINT '231') + ((SMALLINT '551') - t_3.c_acctbal)) < t_3.c_nationkey) GROUP BY t_3.c_nationkey, t_3.c_custkey HAVING false) AS sq_4 GROUP BY sq_4.col_1 HAVING false) SELECT ((INTERVAL '60') / (FLOAT '236')) AS col_0, (INT '481') AS col_1 FROM with_0 WHERE false;
CREATE MATERIALIZED VIEW m9 AS SELECT 'cyvbBVVtpt' AS col_0, TIME '01:36:10' AS col_1, (CASE WHEN true THEN sq_2.col_2 ELSE sq_2.col_2 END) AS col_2, TIMESTAMP '2022-01-02 01:36:10' AS col_3 FROM (SELECT t_1.city AS col_0, 'RcynG4WnHR' AS col_1, TIMESTAMP '2021-12-29 16:30:45' AS col_2 FROM m3 AS t_0 RIGHT JOIN person AS t_1 ON t_0.col_1 = t_1.id GROUP BY t_1.extra, t_1.city, t_1.name) AS sq_2 WHERE false GROUP BY sq_2.col_2, sq_2.col_0;
