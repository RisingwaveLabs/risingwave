CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m1 AS SELECT (TIME '16:07:11' + DATE '2022-07-30') AS col_0, sq_2.col_3 AS col_1, sq_2.col_3 AS col_2 FROM (SELECT t_0.o_totalprice AS col_0, t_1.date_time AS col_1, t_1.email_address AS col_2, t_1.date_time AS col_3 FROM orders AS t_0 JOIN person AS t_1 ON t_0.o_comment = t_1.city GROUP BY t_0.o_custkey, t_1.date_time, t_0.o_totalprice, t_1.extra, t_1.email_address) AS sq_2 GROUP BY sq_2.col_3;
CREATE MATERIALIZED VIEW m2 AS SELECT (0) AS col_0, ('ijhCOK8Hbh') AS col_1, t_0.s_acctbal AS col_2, (819) AS col_3 FROM supplier AS t_0 LEFT JOIN part AS t_1 ON t_0.s_address = t_1.p_type GROUP BY t_1.p_type, t_0.s_acctbal;
CREATE MATERIALIZED VIEW m3 AS SELECT tumble_0.expires AS col_0, ((INT '244') + DATE '2022-08-06') AS col_1, (REAL '242') AS col_2 FROM tumble(auction, auction.expires, INTERVAL '30') AS tumble_0 WHERE false GROUP BY tumble_0.seller, tumble_0.expires, tumble_0.item_name, tumble_0.reserve;
CREATE MATERIALIZED VIEW m4 AS SELECT (INT '0') AS col_0, (FLOAT '371') AS col_1, ((REAL '309')) AS col_2, (((INTERVAL '86400') * (BIGINT '0')) + TIME '16:08:13') AS col_3 FROM hop(m1, m1.col_1, INTERVAL '3600', INTERVAL '10800') AS hop_0 WHERE false GROUP BY hop_0.col_2;
CREATE MATERIALIZED VIEW m5 AS SELECT TIMESTAMP '2022-08-07 16:08:13' AS col_0, tumble_0.date_time AS col_1 FROM tumble(person, person.date_time, INTERVAL '34') AS tumble_0 GROUP BY tumble_0.date_time, tumble_0.name;
CREATE MATERIALIZED VIEW m6 AS WITH with_0 AS (SELECT 'gdYmtz9qid' AS col_0, (OVERLAY(t_3.email_address PLACING (TRIM(TRAILING t_3.email_address FROM (upper(t_3.email_address)))) FROM min((char_length(t_3.extra))) FOR (INT '437'))) AS col_1, ((FLOAT '857') > (2147483647)) AS col_2, CAST(((SMALLINT '0') - (INT '235')) AS BOOLEAN) AS col_3 FROM person AS t_3 WHERE CAST((((SMALLINT '601') - (INT '204')) << (INT '953')) AS BOOLEAN) GROUP BY t_3.email_address) SELECT DATE '2022-08-07' AS col_0 FROM with_0 WHERE false;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.category AS col_0, t_0.expires AS col_1 FROM auction AS t_0 GROUP BY t_0.seller, t_0.category, t_0.reserve, t_0.expires HAVING false;
CREATE MATERIALIZED VIEW m8 AS SELECT tumble_0.name AS col_0, tumble_0.id AS col_1, ('PzMVpA5bBf') AS col_2, 'YPA4i3adn8' AS col_3 FROM tumble(person, person.date_time, INTERVAL '57') AS tumble_0 WHERE true GROUP BY tumble_0.extra, tumble_0.name, tumble_0.id;
CREATE MATERIALIZED VIEW m9 AS SELECT DATE '2022-08-07' AS col_0, true AS col_1, (((INT '26') + (t_2.o_orderdate + (INT '247'))) - (INT '998')) AS col_2, (1) AS col_3 FROM orders AS t_2 GROUP BY t_2.o_totalprice, t_2.o_orderpriority, t_2.o_orderdate, t_2.o_orderstatus;
