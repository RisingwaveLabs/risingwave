CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT (INT '453') AS col_0, ARRAY[TIMESTAMP '2022-10-03 12:49:13', TIMESTAMP '2022-10-03 12:49:13', TIMESTAMP '2022-10-03 13:48:13'] AS col_1, (CASE WHEN true THEN (TRIM(TRAILING t_0.r_name FROM '4KSBbXr4pK')) WHEN (t_0.r_regionkey < t_0.r_regionkey) THEN (TRIM(BOTH t_0.r_name FROM t_0.r_name)) WHEN (t_0.r_regionkey >= (FLOAT '1')) THEN t_0.r_name ELSE t_0.r_name END) AS col_2 FROM region AS t_0 WHERE false GROUP BY t_0.r_regionkey, t_0.r_name;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.n_comment AS col_0 FROM nation AS t_0 FULL JOIN bid AS t_1 ON t_0.n_name = t_1.extra WHERE true GROUP BY t_0.n_comment;
CREATE MATERIALIZED VIEW m2 AS SELECT tumble_0.c13 AS col_0, 'YyPrP1cYmk' AS col_1, tumble_0.c3 AS col_2 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '53') AS tumble_0 GROUP BY tumble_0.c13, tumble_0.c6, tumble_0.c16, tumble_0.c8, tumble_0.c3, tumble_0.c7, tumble_0.c5, tumble_0.c2;
CREATE MATERIALIZED VIEW m3 AS SELECT (CASE WHEN (false) THEN t_0.c_name ELSE (TRIM(BOTH t_0.c_phone FROM 'z8cz5Te0T8')) END) AS col_0, TIMESTAMP '2022-10-03 12:49:14' AS col_1 FROM customer AS t_0 WHERE (((t_0.c_acctbal % t_0.c_custkey) / ((601))) <= (CASE WHEN true THEN t_0.c_custkey WHEN (CASE WHEN true THEN false WHEN false THEN CAST((INT '469') AS BOOLEAN) WHEN false THEN ((FLOAT '337') <= (BIGINT '781')) ELSE true END) THEN (INT '8') ELSE t_0.c_custkey END)) GROUP BY t_0.c_name, t_0.c_nationkey, t_0.c_phone, t_0.c_comment;
CREATE MATERIALIZED VIEW m4 AS SELECT t_1.o_totalprice AS col_0, ((SMALLINT '546') # ((SMALLINT '175') / (BIGINT '846'))) AS col_1, (CAST(NULL AS STRUCT<a NUMERIC, b BIGINT, c NUMERIC>)) AS col_2, TIME '13:49:15' AS col_3 FROM m3 AS t_0 RIGHT JOIN orders AS t_1 ON t_0.col_0 = t_1.o_clerk WHERE (t_1.o_totalprice >= (SMALLINT '652')) GROUP BY t_1.o_totalprice, t_1.o_clerk;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT 'Pl3WVV7i1n' AS col_0 FROM orders AS t_1 RIGHT JOIN orders AS t_2 ON t_1.o_orderpriority = t_2.o_orderpriority GROUP BY t_2.o_shippriority, t_1.o_custkey, t_2.o_clerk, t_2.o_totalprice, t_1.o_orderkey, t_1.o_clerk, t_1.o_orderdate, t_2.o_orderpriority) SELECT TIME '13:49:15' AS col_0, TIME '13:49:14' AS col_1, (888) AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m6 AS SELECT t_0.r_regionkey AS col_0, t_0.r_regionkey AS col_1, t_0.r_regionkey AS col_2, (INT '1') AS col_3 FROM region AS t_0 WHERE (coalesce(true, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) GROUP BY t_0.r_regionkey;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.l_receiptdate AS col_0, t_1.o_shippriority AS col_1, (TRIM(TRAILING t_1.o_clerk FROM t_1.o_clerk)) AS col_2 FROM lineitem AS t_0 LEFT JOIN orders AS t_1 ON t_0.l_comment = t_1.o_clerk AND true GROUP BY t_1.o_shippriority, t_0.l_receiptdate, t_0.l_quantity, t_1.o_orderdate, t_1.o_comment, t_0.l_commitdate, t_0.l_shipinstruct, t_1.o_orderkey, t_0.l_tax, t_0.l_returnflag, t_1.o_clerk, t_1.o_custkey;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT (TRIM(tumble_1.extra)) AS col_0, (REAL '-2147483648') AS col_1, ((SMALLINT '813') / ((SMALLINT '0') - (BIGINT '953'))) AS col_2 FROM tumble(bid, bid.date_time, INTERVAL '18') AS tumble_1 GROUP BY tumble_1.auction, tumble_1.extra, tumble_1.channel HAVING (true)) SELECT (FLOAT '-2147483648') AS col_0, (INT '998') AS col_1, (BIGINT '909') AS col_2 FROM with_0;
