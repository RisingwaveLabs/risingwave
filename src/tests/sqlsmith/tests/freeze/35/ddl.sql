CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_1.r_regionkey AS col_0 FROM customer AS t_0 RIGHT JOIN region AS t_1 ON t_0.c_custkey = t_1.r_regionkey GROUP BY t_1.r_regionkey;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.c4 AS col_0, (FLOAT '31') AS col_1 FROM alltypes1 AS t_0 LEFT JOIN region AS t_1 ON t_0.c9 = t_1.r_name WHERE false GROUP BY t_0.c4, t_0.c7, t_0.c14, t_1.r_regionkey;
CREATE MATERIALIZED VIEW m2 AS WITH with_0 AS (SELECT (t_1.col_0 % t_1.col_0) AS col_0, ((SMALLINT '366') >> (SMALLINT '963')) AS col_1 FROM m0 AS t_1 GROUP BY t_1.col_0 HAVING false) SELECT (REAL '0') AS col_0 FROM with_0 WHERE ((997) <> (BIGINT '849'));
CREATE MATERIALIZED VIEW m3 AS SELECT t_0.c4 AS col_0, (BIGINT '-3640197949271920194') AS col_1, t_0.c4 AS col_2 FROM alltypes2 AS t_0 JOIN person AS t_1 ON t_0.c9 = t_1.extra GROUP BY t_0.c5, t_0.c9, t_0.c4 HAVING false;
CREATE MATERIALIZED VIEW m4 AS SELECT tumble_0.item_name AS col_0, tumble_0.item_name AS col_1, tumble_0.item_name AS col_2 FROM tumble(auction, auction.expires, INTERVAL '76') AS tumble_0 WHERE (CASE WHEN false THEN CAST((INT '210') AS BOOLEAN) WHEN true THEN ((409) >= (FLOAT '1035784441')) ELSE (true >= false) END) GROUP BY tumble_0.item_name, tumble_0.initial_bid HAVING true;
CREATE MATERIALIZED VIEW m5 AS SELECT (TRIM(TRAILING t_0.l_linestatus FROM t_0.l_shipmode)) AS col_0, t_0.l_linenumber AS col_1 FROM lineitem AS t_0 LEFT JOIN part AS t_1 ON t_0.l_quantity = t_1.p_retailprice GROUP BY t_0.l_partkey, t_1.p_brand, t_0.l_extendedprice, t_0.l_linenumber, t_0.l_comment, t_1.p_size, t_0.l_linestatus, t_1.p_mfgr, t_0.l_shipmode, t_0.l_orderkey, t_1.p_partkey HAVING true;
CREATE MATERIALIZED VIEW m6 AS SELECT t_1.p_comment AS col_0, t_0.col_1 AS col_1 FROM m5 AS t_0 FULL JOIN part AS t_1 ON t_0.col_0 = t_1.p_type WHERE (t_1.p_size <= ((SMALLINT '723') / (SMALLINT '524'))) GROUP BY t_0.col_0, t_0.col_1, t_1.p_name, t_1.p_mfgr, t_1.p_comment;
CREATE MATERIALIZED VIEW m7 AS SELECT (ARRAY[(BIGINT '1'), (BIGINT '166'), (BIGINT '165'), (BIGINT '1')]) AS col_0 FROM hop(person, person.date_time, INTERVAL '1', INTERVAL '99') AS hop_0 WHERE false GROUP BY hop_0.id, hop_0.email_address, hop_0.credit_card, hop_0.city HAVING false;
CREATE MATERIALIZED VIEW m8 AS SELECT t_2.s_phone AS col_0, t_2.s_comment AS col_1 FROM supplier AS t_2 WHERE false GROUP BY t_2.s_comment, t_2.s_phone, t_2.s_nationkey, t_2.s_acctbal HAVING true;
CREATE MATERIALIZED VIEW m9 AS SELECT (TIMESTAMP '2022-07-17 06:13:44') AS col_0 FROM person AS t_0 WHERE true GROUP BY t_0.id, t_0.name, t_0.date_time, t_0.state HAVING (((1) % t_0.id) > (REAL '332'));
