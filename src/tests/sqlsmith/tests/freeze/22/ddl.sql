CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_1.c6 AS col_0 FROM partsupp AS t_0 RIGHT JOIN alltypes2 AS t_1 ON t_0.ps_availqty = t_1.c3 AND t_1.c1 WHERE true GROUP BY t_1.c11, t_0.ps_comment, t_1.c8, t_1.c16, t_1.c14, t_1.c6;
CREATE MATERIALIZED VIEW m1 AS SELECT t_1.c16 AS col_0, ARRAY['ouNJ1bLjv4'] AS col_1, ARRAY['IrSrlj7qey'] AS col_2, t_1.c16 AS col_3 FROM region AS t_0 RIGHT JOIN alltypes2 AS t_1 ON t_0.r_regionkey = t_1.c3 GROUP BY t_1.c16 HAVING (((REAL '390') + ((REAL '702') - ((REAL '-2147483648') * (REAL '871')))) >= (1));
CREATE MATERIALIZED VIEW m2 AS SELECT TIME '01:12:43' AS col_0, t_0.col_3 AS col_1 FROM m1 AS t_0 WHERE (true) GROUP BY t_0.col_3 HAVING false;
CREATE MATERIALIZED VIEW m3 AS SELECT tumble_0.id AS col_0, (INT '807') AS col_1, tumble_0.id AS col_2 FROM tumble(auction, auction.expires, INTERVAL '14') AS tumble_0 WHERE (CASE WHEN ((FLOAT '1')) IN ((FLOAT '18')) THEN false WHEN CAST((INT '11') AS BOOLEAN) THEN true WHEN true THEN true ELSE ((FLOAT '681') = ((741))) END) GROUP BY tumble_0.date_time, tumble_0.reserve, tumble_0.extra, tumble_0.expires, tumble_0.id;
CREATE MATERIALIZED VIEW m5 AS SELECT 'Tg2TdXB5Xm' AS col_0, CAST(NULL AS STRUCT<a CHARACTER VARYING>) AS col_1 FROM tumble(bid, bid.date_time, INTERVAL '5') AS tumble_0 WHERE true GROUP BY tumble_0.auction, tumble_0.price, tumble_0.extra HAVING false;
CREATE MATERIALIZED VIEW m6 AS SELECT hop_0.date_time AS col_0, (INT '850') AS col_1, TIMESTAMP '2022-02-08 01:12:44' AS col_2 FROM hop(auction, auction.date_time, INTERVAL '1', INTERVAL '72') AS hop_0 GROUP BY hop_0.seller, hop_0.expires, hop_0.category, hop_0.date_time, hop_0.item_name HAVING false;
CREATE MATERIALIZED VIEW m8 AS SELECT (870) AS col_0, (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, (584), NULL)) AS col_1 FROM partsupp AS t_0 RIGHT JOIN partsupp AS t_1 ON t_0.ps_partkey = t_1.ps_availqty WHERE false GROUP BY t_1.ps_supplycost HAVING ((SMALLINT '235') >= (((CASE WHEN true THEN (BIGINT '425') ELSE (BIGINT '-9223372036854775808') END) / (SMALLINT '1')) | (SMALLINT '-20717')));
CREATE MATERIALIZED VIEW m9 AS SELECT TIMESTAMP '2022-02-07 01:13:45' AS col_0, tumble_0.c11 AS col_1, (CASE WHEN true THEN tumble_0.c11 WHEN false THEN (tumble_0.c11 + (INTERVAL '3600')) WHEN false THEN tumble_0.c11 ELSE tumble_0.c11 END) AS col_2 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '77') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c11;
