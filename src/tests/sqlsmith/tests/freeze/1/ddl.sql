CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT (sq_1.col_2 - CAST(true AS INT)) AS col_0, sq_1.col_1 AS col_1 FROM (SELECT ((((INT '296') - (SMALLINT '-32768')) | (INT '253')) / t_0.id) AS col_0, ((INT '-2147483648') + (t_0.initial_bid | ((- (SMALLINT '277')) # (INT '227')))) AS col_1, (773) AS col_2 FROM auction AS t_0 WHERE false GROUP BY t_0.initial_bid, t_0.description, t_0.item_name, t_0.date_time, t_0.id) AS sq_1 WHERE true GROUP BY sq_1.col_1, sq_1.col_2;
CREATE MATERIALIZED VIEW m1 AS SELECT CAST(NULL AS STRUCT<a INTERVAL, b NUMERIC>) AS col_0, (TRIM(TRAILING t_0.p_type FROM ('BrvccI19br'))) AS col_1, (CAST(CAST(t_0.p_size AS BOOLEAN) AS INT) + DATE '2022-01-02') AS col_2, true AS col_3 FROM part AS t_0 LEFT JOIN lineitem AS t_1 ON t_0.p_mfgr = t_1.l_returnflag WHERE false GROUP BY t_1.l_linestatus, t_1.l_suppkey, t_1.l_returnflag, t_1.l_shipinstruct, t_0.p_type, t_1.l_comment, t_0.p_retailprice, t_0.p_size, t_0.p_container HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT (INT '0') AS col_0, tumble_0.c7 AS col_1, (414) AS col_2 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '91') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c16, tumble_0.c14, tumble_0.c10, tumble_0.c5, tumble_0.c2, tumble_0.c7, tumble_0.c13;
CREATE MATERIALIZED VIEW m3 AS SELECT tumble_0.c1 AS col_0, tumble_0.c1 AS col_1, tumble_0.c1 AS col_2, true AS col_3 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '48') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c1 HAVING ((832) = ((SMALLINT '981') - (INT '0')));
CREATE MATERIALIZED VIEW m4 AS SELECT t_2.bidder AS col_0 FROM bid AS t_2 WHERE true GROUP BY t_2.extra, t_2.price, t_2.bidder HAVING false;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT ((coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, sq_3.col_0)) & sq_3.col_0) AS col_0 FROM (WITH with_1 AS (SELECT (((INT '900') + DATE '2022-01-02') + (INTERVAL '-595892')) AS col_0, t_2.expires AS col_1, TIMESTAMP '2022-01-02 02:04:33' AS col_2 FROM auction AS t_2 WHERE (t_2.id = (FLOAT '275')) GROUP BY t_2.expires) SELECT (SMALLINT '487') AS col_0, (802) AS col_1 FROM with_1) AS sq_3 WHERE true GROUP BY sq_3.col_0 HAVING (false)) SELECT TIMESTAMP '2022-01-01 15:23:14' AS col_0, false AS col_1, (INT '518') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m6 AS SELECT t_2.col_2 AS col_0, t_2.col_2 AS col_1, ((BIGINT '687') - ((SMALLINT '-16176') / t_2.col_2)) AS col_2, t_2.col_2 AS col_3 FROM m2 AS t_2 GROUP BY t_2.col_2 HAVING true;
CREATE MATERIALIZED VIEW m7 AS SELECT t_1.col_1 AS col_0, (substr(t_0.r_name, t_1.col_0)) AS col_1 FROM region AS t_0 RIGHT JOIN m2 AS t_1 ON t_0.r_regionkey = t_1.col_0 WHERE true GROUP BY t_1.col_1, t_1.col_0, t_0.r_name HAVING false;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT hop_1.c15 AS col_0 FROM hop(alltypes2, alltypes2.c11, INTERVAL '1', INTERVAL '53') AS hop_1 GROUP BY hop_1.c9, hop_1.c6, hop_1.c5, hop_1.c4, hop_1.c15, hop_1.c11) SELECT ((418) - (BIGINT '876')) AS col_0, (- (REAL '0')) AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m9 AS SELECT tumble_0.c15 AS col_0, (tumble_0.c5 > (BIGINT '6871269807316363457')) AS col_1 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '5') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c2, tumble_0.c1, tumble_0.c15, tumble_0.c5, tumble_0.c14, tumble_0.c11, tumble_0.c8 HAVING tumble_0.c1;
