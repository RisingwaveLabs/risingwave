CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_0.l_returnflag AS col_0 FROM lineitem AS t_0 FULL JOIN nation AS t_1 ON t_0.l_suppkey = t_1.n_nationkey AND CAST(((INT '503')) AS BOOLEAN) WHERE false GROUP BY t_0.l_linestatus, t_0.l_suppkey, t_0.l_orderkey, t_0.l_receiptdate, t_0.l_shipinstruct, t_0.l_returnflag HAVING ((SMALLINT '327') <> (849));
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.id AS col_0, t_0.id AS col_1, (CASE WHEN ((INT '124') <> (FLOAT '528')) THEN (BIGINT '0') WHEN false THEN t_0.id ELSE t_0.id END) AS col_2, ((CASE WHEN false THEN ((SMALLINT '32767') | t_0.reserve) ELSE t_0.reserve END) - (SMALLINT '0')) AS col_3 FROM auction AS t_0 LEFT JOIN region AS t_1 ON t_0.description = t_1.r_comment AND true WHERE ((((INT '667')) % (SMALLINT '278')) > (INT '469')) GROUP BY t_0.reserve, t_0.id HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT t_0.r_comment AS col_0 FROM region AS t_0 GROUP BY t_0.r_comment HAVING ((430) <= (FLOAT '99'));
CREATE MATERIALIZED VIEW m3 AS SELECT t_2.n_regionkey AS col_0, (INT '-2147483648') AS col_1, DATE '2022-04-20' AS col_2, ((BIGINT '52') * (INTERVAL '-86400')) AS col_3 FROM nation AS t_2 WHERE (TIME '07:32:49' <> TIME '06:32:49') GROUP BY t_2.n_regionkey HAVING true;
CREATE MATERIALIZED VIEW m4 AS SELECT sq_1.col_0 AS col_0, (TIMESTAMP '2022-04-20 07:32:50' > ((INTERVAL '-60') + TIMESTAMP '2022-04-27 07:32:50')) AS col_1 FROM (SELECT false AS col_0 FROM tumble(auction, auction.expires, INTERVAL '99') AS tumble_0 WHERE false GROUP BY tumble_0.initial_bid HAVING true) AS sq_1 WHERE true GROUP BY sq_1.col_0;
CREATE MATERIALIZED VIEW m6 AS WITH with_0 AS (SELECT 'ChpMWLGipm' AS col_0, t_1.s_name AS col_1, t_1.s_address AS col_2, 'XksbBviBG4' AS col_3 FROM supplier AS t_1 LEFT JOIN lineitem AS t_2 ON t_1.s_address = t_2.l_shipmode GROUP BY t_1.s_name, t_2.l_tax, t_1.s_nationkey, t_1.s_phone, t_2.l_commitdate, t_1.s_address, t_1.s_suppkey, t_2.l_quantity) SELECT TIME '06:32:50' AS col_0, (BIGINT '897') AS col_1, (118) AS col_2, (INT '903') AS col_3 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.s_acctbal AS col_0, t_0.s_acctbal AS col_1, 'DNEWKYjh0z' AS col_2, t_0.s_phone AS col_3 FROM supplier AS t_0 WHERE false GROUP BY t_0.s_acctbal, t_0.s_phone;
CREATE MATERIALIZED VIEW m8 AS SELECT 'PD6ByfwV4G' AS col_0 FROM (SELECT '0fjlMfaIUR' AS col_0, t_0.s_phone AS col_1, t_0.s_phone AS col_2, 'br5iXWrj6f' AS col_3 FROM supplier AS t_0 GROUP BY t_0.s_phone HAVING true) AS sq_1 WHERE false GROUP BY sq_1.col_1;
CREATE MATERIALIZED VIEW m9 AS WITH with_0 AS (WITH with_1 AS (SELECT ((((INT '422') * (INTERVAL '3600')) + t_2.c10) + (INTERVAL '0')) AS col_0, t_2.c8 AS col_1, t_2.c10 AS col_2 FROM alltypes1 AS t_2 GROUP BY t_2.c10, t_2.c8) SELECT (TIME '07:32:52' - (INTERVAL '0')) AS col_0, DATE '2022-04-27' AS col_1 FROM with_1 WHERE (TIME '06:32:52' <> (INTERVAL '604800'))) SELECT ((679) > (SMALLINT '25')) AS col_0, 'CHyxwnit18' AS col_1, (~ (BIGINT '84')) AS col_2, (666) AS col_3 FROM with_0 WHERE true;
