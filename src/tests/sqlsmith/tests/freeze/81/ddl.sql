CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT sq_2.col_1 AS col_0, sq_2.col_1 AS col_1, sq_2.col_1 AS col_2 FROM (SELECT t_1.ps_availqty AS col_0, (TRIM(BOTH t_1.ps_comment FROM t_1.ps_comment)) AS col_1 FROM person AS t_0 LEFT JOIN partsupp AS t_1 ON t_0.city = t_1.ps_comment GROUP BY t_1.ps_comment, t_1.ps_availqty) AS sq_2 WHERE false GROUP BY sq_2.col_1;
CREATE MATERIALIZED VIEW m1 AS SELECT (719) AS col_0, (SMALLINT '32767') AS col_1 FROM orders AS t_0 GROUP BY t_0.o_totalprice HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT min(((REAL '0') - (REAL '564'))) AS col_0, sum(t_1.c4) FILTER(WHERE true) AS col_1 FROM region AS t_0 RIGHT JOIN alltypes1 AS t_1 ON t_0.r_regionkey = t_1.c3 AND t_1.c1 WHERE t_1.c1 GROUP BY t_1.c4, t_1.c5, t_0.r_regionkey, t_0.r_comment, t_1.c7, t_1.c10, t_1.c15;
CREATE MATERIALIZED VIEW m3 AS SELECT (BIGINT '941') AS col_0, hop_0.c15 AS col_1, hop_0.c3 AS col_2 FROM hop(alltypes2, alltypes2.c11, INTERVAL '60', INTERVAL '480') AS hop_0 WHERE hop_0.c1 GROUP BY hop_0.c8, hop_0.c15, hop_0.c3, hop_0.c1, hop_0.c11;
CREATE MATERIALIZED VIEW m4 AS WITH with_0 AS (SELECT (FLOAT '201') AS col_0, hop_1.date_time AS col_1, hop_1.date_time AS col_2, (FLOAT '754') AS col_3 FROM hop(person, person.date_time, INTERVAL '604800', INTERVAL '38102400') AS hop_1 GROUP BY hop_1.date_time, hop_1.city, hop_1.state HAVING true) SELECT false AS col_0, ((2147483647)) AS col_1 FROM with_0 WHERE ((BIGINT '256') < (464));
CREATE MATERIALIZED VIEW m5 AS SELECT (INT '389') AS col_0 FROM region AS t_0 FULL JOIN partsupp AS t_1 ON t_0.r_regionkey = t_1.ps_suppkey WHERE true GROUP BY t_1.ps_partkey, t_1.ps_suppkey, t_1.ps_availqty, t_0.r_comment HAVING true;
CREATE MATERIALIZED VIEW m6 AS WITH with_0 AS (SELECT t_2.o_custkey AS col_0, t_2.o_custkey AS col_1, t_2.o_orderstatus AS col_2, t_1.r_comment AS col_3 FROM region AS t_1 LEFT JOIN orders AS t_2 ON t_1.r_comment = t_2.o_orderpriority GROUP BY t_2.o_orderstatus, t_1.r_comment, t_2.o_custkey, t_2.o_comment HAVING true) SELECT TIME '10:57:58' AS col_0, ARRAY[(BIGINT '531'), (BIGINT '605'), (BIGINT '476')] AS col_1, 'MfUe3E71At' AS col_2 FROM with_0 WHERE false;
CREATE MATERIALIZED VIEW m7 AS SELECT t_2.col_0 AS col_0, t_2.col_0 AS col_1 FROM m5 AS t_2 WHERE false GROUP BY t_2.col_0;
CREATE MATERIALIZED VIEW m8 AS SELECT sq_4.col_1 AS col_0 FROM (WITH with_0 AS (SELECT t_3.extra AS col_0, 'F9lUdkvO5I' AS col_1, (replace((lower('yBQwgAiBSo')), 'W915HzkICQ', (upper(t_3.extra)))) AS col_2, t_3.auction AS col_3 FROM bid AS t_3 WHERE (false) GROUP BY t_3.url, t_3.extra, t_3.auction) SELECT (SMALLINT '0') AS col_0, ((coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, (INTERVAL '-3600'))) * (SMALLINT '142')) AS col_1, DATE '2022-04-11' AS col_2, CAST(NULL AS STRUCT<a BOOLEAN, b TIME>) AS col_3 FROM with_0 WHERE (((SMALLINT '475') + (SMALLINT '847')) = (SMALLINT '8057'))) AS sq_4 WHERE false GROUP BY sq_4.col_1, sq_4.col_0;
CREATE MATERIALIZED VIEW m9 AS SELECT TIME '10:58:00' AS col_0 FROM (SELECT t_0.l_quantity AS col_0, (702) AS col_1 FROM lineitem AS t_0 WHERE TIMESTAMP '2022-04-11 10:58:00' IN (SELECT (t_1.date_time + (INTERVAL '60')) AS col_0 FROM person AS t_1 RIGHT JOIN m3 AS t_2 ON t_1.id = t_2.col_0 AND CAST((coalesce(NULL, t_2.col_2, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS BOOLEAN) GROUP BY t_1.date_time, t_2.col_0, t_2.col_2 HAVING false) GROUP BY t_0.l_quantity HAVING false) AS sq_3 WHERE false GROUP BY sq_3.col_1;
