CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT ('LXGeOQFdVF') AS col_0 FROM (SELECT t_1.extra AS col_0, 'm6YxW0hFle' AS col_1 FROM partsupp AS t_0 FULL JOIN auction AS t_1 ON t_0.ps_comment = t_1.item_name GROUP BY t_1.item_name, t_0.ps_comment, t_1.extra HAVING true) AS sq_2 GROUP BY sq_2.col_0;
CREATE MATERIALIZED VIEW m1 AS SELECT t_1.expires AS col_0, t_0.r_comment AS col_1, t_1.expires AS col_2, t_1.seller AS col_3 FROM region AS t_0 JOIN auction AS t_1 ON t_0.r_comment = t_1.extra WHERE false GROUP BY t_1.seller, t_0.r_comment, t_1.category, t_0.r_regionkey, t_1.expires, t_1.description HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT (BIGINT '315') AS col_0, ((INT '-2147483648') | t_0.col_3) AS col_1 FROM m1 AS t_0 JOIN nation AS t_1 ON t_0.col_1 = t_1.n_name GROUP BY t_0.col_0, t_0.col_2, t_1.n_comment, t_0.col_3 HAVING false;
CREATE MATERIALIZED VIEW m3 AS SELECT ((INT '160') | (((INT '888')) & (SMALLINT '415'))) AS col_0, hop_0.date_time AS col_1 FROM hop(person, person.date_time, INTERVAL '196454', INTERVAL '15912774') AS hop_0 GROUP BY hop_0.email_address, hop_0.date_time, hop_0.name, hop_0.extra;
CREATE MATERIALIZED VIEW m4 AS WITH with_0 AS (SELECT ((SMALLINT '34') # (INT '95')) AS col_0, (lower(t_1.extra)) AS col_1 FROM person AS t_1 WHERE true GROUP BY t_1.name, t_1.extra, t_1.state) SELECT CAST(NULL AS STRUCT<a INTERVAL, b SMALLINT, c INT>) AS col_0 FROM with_0;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT (TRIM(t_2.email_address)) AS col_0 FROM region AS t_1 JOIN person AS t_2 ON t_1.r_comment = t_2.email_address WHERE true GROUP BY t_2.email_address) SELECT true AS col_0, (((INT '393')) / (INT '148')) AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m6 AS SELECT ((155)) AS col_0, (TIMESTAMP '2022-03-19 15:07:00') AS col_1, t_1.c11 AS col_2 FROM part AS t_0 RIGHT JOIN alltypes2 AS t_1 ON t_0.p_size = t_1.c3 WHERE t_1.c1 GROUP BY t_1.c9, t_0.p_partkey, t_1.c7, t_1.c11, t_1.c1 HAVING t_1.c1;
CREATE MATERIALIZED VIEW m7 AS SELECT (BIGINT '186') AS col_0 FROM tumble(bid, bid.date_time, INTERVAL '61') AS tumble_0 GROUP BY tumble_0.channel, tumble_0.url, tumble_0.date_time, tumble_0.bidder HAVING false;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT CAST(NULL AS STRUCT<a INT, b CHARACTER VARYING>) AS col_0, (BIGINT '277') AS col_1, t_3.extra AS col_2 FROM bid AS t_3 WHERE false GROUP BY t_3.price, t_3.bidder, t_3.extra HAVING false) SELECT sum((REAL '998')) AS col_0, TIMESTAMP '2022-03-20 15:07:00' AS col_1, (INT '0') AS col_2, (FLOAT '-1815159247') AS col_3 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m9 AS SELECT (BIGINT '9223372036854775807') AS col_0 FROM m7 AS t_0 WHERE false GROUP BY t_0.col_0 HAVING TIMESTAMP '2022-03-20 14:07:01' NOT IN (SELECT TIMESTAMP '2022-03-20 15:07:00' AS col_0 FROM m8 AS t_1 FULL JOIN m1 AS t_2 ON t_1.col_1 = t_2.col_2 GROUP BY t_2.col_0, t_2.col_2, t_1.col_1);
