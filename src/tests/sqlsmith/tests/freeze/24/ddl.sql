CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT '06jQ5OqeK7' AS col_0, ((coalesce(NULL, NULL, NULL, NULL, t_0.ps_availqty, NULL, NULL, NULL, NULL, NULL)) - (SMALLINT '853')) AS col_1 FROM partsupp AS t_0 WHERE true GROUP BY t_0.ps_partkey, t_0.ps_comment, t_0.ps_availqty;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.ps_availqty AS col_0, 'urDdvCAmgG' AS col_1 FROM partsupp AS t_0 WHERE true GROUP BY t_0.ps_availqty, t_0.ps_comment;
CREATE MATERIALIZED VIEW m3 AS SELECT (TRIM(TRAILING t_0.c9 FROM 'nIFgpRK9oL')) AS col_0, (FLOAT '1') AS col_1, (REAL '341') AS col_2, t_0.c5 AS col_3 FROM alltypes1 AS t_0 GROUP BY t_0.c5, t_0.c9, t_0.c3, t_0.c7, t_0.c2, t_0.c6 HAVING false;
CREATE MATERIALIZED VIEW m4 AS SELECT (upper(t_0.col_1)) AS col_0, t_0.col_1 AS col_1 FROM m1 AS t_0 GROUP BY t_0.col_1 HAVING false;
CREATE MATERIALIZED VIEW m5 AS SELECT 'XAIvIsiFjE' AS col_0, t_1.c_address AS col_1, ((INT '259') % t_1.c_nationkey) AS col_2, TIMESTAMP '2022-05-13 15:15:45' AS col_3 FROM m4 AS t_0 FULL JOIN customer AS t_1 ON t_0.col_1 = t_1.c_phone GROUP BY t_1.c_phone, t_1.c_name, t_1.c_address, t_1.c_nationkey HAVING false;
CREATE MATERIALIZED VIEW m6 AS SELECT sq_2.col_0 AS col_0, ((REAL '217')) AS col_1 FROM (SELECT (- ((REAL '-2147483648') / (t_1.c5 + t_1.c5))) AS col_0, t_1.c4 AS col_1, (OVERLAY(t_0.c9 PLACING t_0.c9 FROM (INT '203') FOR (INT '515'))) AS col_2 FROM alltypes2 AS t_0 FULL JOIN alltypes1 AS t_1 ON t_0.c10 = t_1.c10 GROUP BY t_1.c16, t_1.c2, t_1.c14, t_0.c9, t_1.c8, t_1.c6, t_1.c11, t_1.c7, t_1.c5, t_0.c5, t_0.c14, t_1.c4, t_0.c13, t_0.c6, t_0.c1 HAVING ((REAL '-2147483648') = (INT '-2016450212'))) AS sq_2 WHERE ((BIGINT '834') <= (324)) GROUP BY sq_2.col_0, sq_2.col_1 HAVING ((sq_2.col_1 * (INTERVAL '604800')) <> (INTERVAL '604800'));
CREATE MATERIALIZED VIEW m7 AS SELECT tumble_0.c2 AS col_0, tumble_0.c4 AS col_1 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '52') AS tumble_0 GROUP BY tumble_0.c4, tumble_0.c2, tumble_0.c8, tumble_0.c14, tumble_0.c7, tumble_0.c1, tumble_0.c15;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT 'sRaOHazHvT' AS col_0, 'XTleyXGkph' AS col_1, (coalesce(NULL, (true), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS col_2 FROM m1 AS t_3 GROUP BY t_3.col_1 HAVING true) SELECT false AS col_0 FROM with_0;
CREATE MATERIALIZED VIEW m9 AS SELECT t_0.r_name AS col_0 FROM region AS t_0 GROUP BY t_0.r_name;
