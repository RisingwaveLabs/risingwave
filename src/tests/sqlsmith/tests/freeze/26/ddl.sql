CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.reserve AS col_0, t_0.reserve AS col_1 FROM auction AS t_0 GROUP BY t_0.category, t_0.reserve, t_0.description;
CREATE MATERIALIZED VIEW m2 AS SELECT (t_0.ps_supplycost % (SMALLINT '-32768')) AS col_0, (coalesce(NULL, NULL, (t_0.ps_supplycost - t_0.ps_availqty), NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS col_1 FROM partsupp AS t_0 WHERE false GROUP BY t_0.ps_availqty, t_0.ps_supplycost;
CREATE MATERIALIZED VIEW m3 AS WITH with_0 AS (WITH with_1 AS (SELECT TIME '07:01:49' AS col_0, (TIMESTAMP '2022-01-30 08:01:49') AS col_1, hop_2.c10 AS col_2, TIME '08:01:49' AS col_3 FROM hop(alltypes2, alltypes2.c11, INTERVAL '86400', INTERVAL '5788800') AS hop_2 GROUP BY hop_2.c5, hop_2.c3, hop_2.c10, hop_2.c7, hop_2.c14, hop_2.c6) SELECT (((1) - (473)) % (BIGINT '143')) AS col_0, (FLOAT '-2147483648') AS col_1, (INT '688') AS col_2 FROM with_1) SELECT (~ (INT '544')) AS col_0 FROM with_0;
CREATE MATERIALIZED VIEW m4 AS SELECT t_1.item_name AS col_0 FROM bid AS t_0 RIGHT JOIN auction AS t_1 ON t_0.url = t_1.description GROUP BY t_1.extra, t_1.item_name, t_1.category HAVING (min((INT '509')) < t_1.category);
CREATE MATERIALIZED VIEW m5 AS SELECT tumble_0.c9 AS col_0, (SMALLINT '-32768') AS col_1, (TRIM(BOTH tumble_0.c9 FROM tumble_0.c9)) AS col_2, 'Ge0Q3mFtG3' AS col_3 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '11') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c13, tumble_0.c9;
CREATE MATERIALIZED VIEW m6 AS SELECT ((INT '1') | (SMALLINT '1')) AS col_0, ((REAL '708') - (REAL '25')) AS col_1, (char_length('VzIQcd0FGJ')) AS col_2 FROM partsupp AS t_0 WHERE true GROUP BY t_0.ps_partkey, t_0.ps_suppkey HAVING true;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.o_orderpriority AS col_0, (BIGINT '887') AS col_1, '5fW983jkAz' AS col_2, (INTERVAL '60') AS col_3 FROM orders AS t_0 RIGHT JOIN m6 AS t_1 ON t_0.o_custkey = t_1.col_2 AND true GROUP BY t_1.col_2, t_0.o_orderpriority, t_0.o_orderstatus HAVING ((SMALLINT '129') = count((split_part(t_0.o_orderstatus, 'etId8xNyd2', t_1.col_0))) FILTER(WHERE (DATE '2022-01-30' >= TIMESTAMP '2022-01-30 08:01:49')));
CREATE MATERIALIZED VIEW m8 AS SELECT (SMALLINT '669') AS col_0, t_1.col_0 AS col_1, t_1.col_0 AS col_2, t_1.col_0 AS col_3 FROM m4 AS t_0 JOIN m4 AS t_1 ON t_0.col_0 = t_1.col_0 GROUP BY t_1.col_0 HAVING ((DATE '2022-01-26' + (INT '85')) > TIMESTAMP '2022-01-23 08:01:51');
CREATE MATERIALIZED VIEW m9 AS WITH with_0 AS (SELECT (TIMESTAMP '2022-01-30 08:01:51') AS col_0, tumble_1.initial_bid AS col_1, tumble_1.initial_bid AS col_2 FROM tumble(auction, auction.date_time, INTERVAL '34') AS tumble_1 WHERE true GROUP BY tumble_1.date_time, tumble_1.initial_bid, tumble_1.id HAVING (CASE WHEN (((BIGINT '220')) <= tumble_1.id) THEN true ELSE false END)) SELECT (FLOAT '656') AS col_0, (INT '-2147483648') AS col_1, (SMALLINT '0') AS col_2 FROM with_0;
