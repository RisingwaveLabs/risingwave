CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT tumble_0.email_address AS col_0 FROM tumble(person, person.date_time, INTERVAL '93') AS tumble_0 GROUP BY tumble_0.email_address HAVING false;
CREATE MATERIALIZED VIEW m1 AS SELECT t_1.ps_availqty AS col_0, (length(t_0.c9)) AS col_1, t_1.ps_availqty AS col_2 FROM alltypes1 AS t_0 JOIN partsupp AS t_1 ON t_0.c3 = t_1.ps_suppkey GROUP BY t_0.c2, t_0.c15, t_1.ps_availqty, t_0.c16, t_1.ps_supplycost, t_0.c3, t_0.c5, t_0.c9 HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT (TRIM(LEADING t_0.city FROM t_0.city)) AS col_0 FROM person AS t_0 GROUP BY t_0.city;
CREATE MATERIALIZED VIEW m3 AS SELECT TIMESTAMP '2022-07-30 05:08:18' AS col_0, (INT '-1957389066') AS col_1 FROM customer AS t_0 RIGHT JOIN region AS t_1 ON t_0.c_phone = t_1.r_comment WHERE false GROUP BY t_0.c_address, t_1.r_comment, t_0.c_nationkey, t_0.c_acctbal, t_0.c_mktsegment, t_1.r_name;
CREATE MATERIALIZED VIEW m4 AS SELECT (md5('9o7FwASmcG')) AS col_0, ((- (SMALLINT '-12128')) | t_1.c_nationkey) AS col_1 FROM bid AS t_0 RIGHT JOIN customer AS t_1 ON t_0.url = t_1.c_phone AND true WHERE ((FLOAT '143') <= (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, t_1.c_acctbal, NULL))) GROUP BY t_0.channel, t_1.c_mktsegment, t_0.extra, t_1.c_address, t_1.c_nationkey, t_0.url HAVING (false);
CREATE MATERIALIZED VIEW m5 AS SELECT t_0.n_nationkey AS col_0 FROM nation AS t_0 FULL JOIN m0 AS t_1 ON t_0.n_name = t_1.col_0 WHERE true GROUP BY t_0.n_nationkey, t_0.n_regionkey, t_0.n_name;
CREATE MATERIALIZED VIEW m6 AS SELECT (upper(hop_0.extra)) AS col_0 FROM hop(auction, auction.date_time, INTERVAL '60', INTERVAL '4080') AS hop_0 WHERE false GROUP BY hop_0.extra;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.id AS col_0 FROM auction AS t_0 GROUP BY t_0.extra, t_0.reserve, t_0.id, t_0.item_name, t_0.seller;
CREATE MATERIALIZED VIEW m8 AS SELECT ((INT '12')) AS col_0, ARRAY[(INT '362')] AS col_1, (sq_2.col_3 + sq_2.col_3) AS col_2, sq_2.col_3 AS col_3 FROM (SELECT t_1.ps_availqty AS col_0, t_1.ps_partkey AS col_1, t_1.ps_partkey AS col_2, t_1.ps_suppkey AS col_3 FROM partsupp AS t_0 LEFT JOIN partsupp AS t_1 ON t_0.ps_partkey = t_1.ps_availqty GROUP BY t_1.ps_suppkey, t_1.ps_availqty, t_1.ps_partkey) AS sq_2 WHERE false GROUP BY sq_2.col_3;
CREATE MATERIALIZED VIEW m9 AS SELECT tumble_0.c10 AS col_0, tumble_0.c10 AS col_1, ((1)) AS col_2, tumble_0.c10 AS col_3 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '47') AS tumble_0 GROUP BY tumble_0.c7, tumble_0.c10, tumble_0.c9, tumble_0.c8;
