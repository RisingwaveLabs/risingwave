CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_0.p_brand AS col_0 FROM part AS t_0 FULL JOIN nation AS t_1 ON t_0.p_mfgr = t_1.n_name GROUP BY t_0.p_type, t_1.n_regionkey, t_0.p_brand, t_1.n_name, t_0.p_container HAVING true;
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT 'v77wIq4IXc' AS col_0 FROM region AS t_1 LEFT JOIN alltypes1 AS t_2 ON t_1.r_regionkey = t_2.c3 AND true GROUP BY t_2.c14, t_2.c9, t_2.c3, t_1.r_comment, t_2.c10 HAVING true) SELECT (- (REAL '625')) AS col_0, (FLOAT '2147483647') AS col_1, (REAL '972') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m2 AS SELECT sq_1.col_1 AS col_0 FROM (SELECT (OVERLAY('LI3pIrADor' PLACING (md5(('QDqGhYbIS2'))) FROM (INT '617'))) AS col_0, t_0.category AS col_1, 'u6qGhm2D4P' AS col_2, t_0.reserve AS col_3 FROM auction AS t_0 GROUP BY t_0.item_name, t_0.seller, t_0.category, t_0.reserve, t_0.initial_bid) AS sq_1 WHERE false GROUP BY sq_1.col_3, sq_1.col_1 HAVING (sq_1.col_3 >= (REAL '98'));
CREATE MATERIALIZED VIEW m4 AS SELECT tumble_0.c10 AS col_0, ('2X8ESW0YDY') AS col_1 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '55') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c10, tumble_0.c9, tumble_0.c16 HAVING false;
CREATE MATERIALIZED VIEW m6 AS SELECT (TRIM(TRAILING 'NdSl5sIdEw' FROM t_0.l_returnflag)) AS col_0, (TRIM(LEADING (md5((TRIM('HAuG2HHbHP')))) FROM t_0.l_comment)) AS col_1, '9a5lBVL0bE' AS col_2 FROM lineitem AS t_0 WHERE ((BIGINT '0') <= (FLOAT '0')) GROUP BY t_0.l_returnflag, t_0.l_shipinstruct, t_0.l_comment, t_0.l_tax HAVING true;
CREATE MATERIALIZED VIEW m7 AS WITH with_0 AS (SELECT sq_3.col_1 AS col_0, sq_3.col_1 AS col_1 FROM (SELECT (t_1.p_partkey << (SMALLINT '968')) AS col_0, (FLOAT '408') AS col_1, t_1.p_type AS col_2 FROM part AS t_1 FULL JOIN alltypes1 AS t_2 ON t_1.p_size = t_2.c3 GROUP BY t_1.p_container, t_1.p_partkey, t_1.p_brand, t_2.c10, t_1.p_type, t_1.p_size, t_2.c15, t_2.c1, t_2.c8, t_2.c9, t_2.c5, t_2.c6) AS sq_3 GROUP BY sq_3.col_1) SELECT (0) AS col_0, TIMESTAMP '2022-05-30 14:15:22' AS col_1, (REAL '531') AS col_2, (FLOAT '1') AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m9 AS SELECT t_1.c_acctbal AS col_0 FROM m7 AS t_0 RIGHT JOIN customer AS t_1 ON t_0.col_0 = t_1.c_acctbal AND true WHERE false GROUP BY t_1.c_address, t_1.c_comment, t_0.col_0, t_1.c_custkey, t_1.c_acctbal, t_0.col_3 HAVING true;
