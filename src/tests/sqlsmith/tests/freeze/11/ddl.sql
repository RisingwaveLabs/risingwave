CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT sq_1.col_0 AS col_0, sq_1.col_0 AS col_1, (sq_1.col_0 + (INTERVAL '424848')) AS col_2 FROM (SELECT TIME '05:23:35' AS col_0 FROM bid AS t_0 GROUP BY t_0.date_time, t_0.auction) AS sq_1 WHERE ((INT '864') > (SMALLINT '601')) GROUP BY sq_1.col_0;
CREATE MATERIALIZED VIEW m1 AS SELECT sq_2.col_0 AS col_0, sq_2.col_0 AS col_1, (833) AS col_2, 'iYVQId0wTo' AS col_3 FROM (SELECT '2hPtXFhXmc' AS col_0, t_1.id AS col_1 FROM orders AS t_0 FULL JOIN person AS t_1 ON t_0.o_comment = t_1.state WHERE ((t_0.o_custkey / ((INT '0'))) = (SMALLINT '32767')) GROUP BY t_1.name, t_0.o_orderdate, t_1.email_address, t_1.id, t_0.o_totalprice, t_0.o_custkey HAVING max(((FLOAT '-2147483648') <= ((SMALLINT '626') << (SMALLINT '485'))))) AS sq_2 WHERE false GROUP BY sq_2.col_0 HAVING (true);
CREATE MATERIALIZED VIEW m2 AS WITH with_0 AS (SELECT t_1.l_linenumber AS col_0, (t_1.l_tax / (502)) AS col_1, t_1.l_linenumber AS col_2 FROM lineitem AS t_1 WHERE true GROUP BY t_1.l_shipmode, t_1.l_receiptdate, t_1.l_shipdate, t_1.l_linenumber, t_1.l_discount, t_1.l_linestatus, t_1.l_tax, t_1.l_extendedprice) SELECT (569) AS col_0 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m3 AS SELECT (CAST((sum((INTERVAL '823469')) <= TIME '05:23:36') AS INT) << t_1.c_custkey) AS col_0 FROM orders AS t_0 RIGHT JOIN customer AS t_1 ON t_0.o_comment = t_1.c_address AND ((SMALLINT '489') > (SMALLINT '863')) GROUP BY t_0.o_clerk, t_1.c_custkey, t_1.c_mktsegment HAVING true;
CREATE MATERIALIZED VIEW m4 AS SELECT (REAL '2147483647') AS col_0 FROM hop(person, person.date_time, INTERVAL '60', INTERVAL '4860') AS hop_0 WHERE false GROUP BY hop_0.name, hop_0.state, hop_0.extra;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (WITH with_1 AS (SELECT DATE '2022-06-18' AS col_0, sq_3.col_1 AS col_1 FROM (SELECT tumble_2.c3 AS col_0, tumble_2.c16 AS col_1 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '62') AS tumble_2 GROUP BY tumble_2.c3, tumble_2.c8, tumble_2.c1, tumble_2.c16, tumble_2.c7) AS sq_3 GROUP BY sq_3.col_1) SELECT (INT '2147483647') AS col_0 FROM with_1) SELECT (CAST(NULL AS STRUCT<a SMALLINT>)) AS col_0, (INT '222') AS col_1, CAST(false AS INT) AS col_2 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m6 AS SELECT t_0.r_name AS col_0, DATE '2022-06-25' AS col_1, string_agg(t_1.extra, (TRIM(t_0.r_comment))) FILTER(WHERE false) AS col_2 FROM region AS t_0 RIGHT JOIN auction AS t_1 ON t_0.r_comment = t_1.item_name GROUP BY t_1.item_name, t_0.r_regionkey, t_0.r_name;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.col_0 AS col_0 FROM m0 AS t_0 GROUP BY t_0.col_0, t_0.col_2 HAVING ((REAL '-1095902223') >= (SMALLINT '380'));
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (WITH with_1 AS (WITH with_2 AS (SELECT t_3.col_2 AS col_0, t_4.ps_supplycost AS col_1 FROM m6 AS t_3 RIGHT JOIN partsupp AS t_4 ON t_3.col_2 = t_4.ps_comment GROUP BY t_3.col_2, t_4.ps_suppkey, t_4.ps_supplycost) SELECT TIME '05:22:39' AS col_0 FROM with_2 WHERE true) SELECT 'BviG8N9gAx' AS col_0 FROM with_1 WHERE true) SELECT (TIMESTAMP '2022-06-25 04:23:39' - TIMESTAMP '2022-06-24 05:23:39') AS col_0, (INTERVAL '3600') AS col_1, (REAL '597584550') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m9 AS SELECT TIMESTAMP '2022-06-24 05:23:39' AS col_0, DATE '2022-06-25' AS col_1, tumble_0.c2 AS col_2 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '74') AS tumble_0 GROUP BY tumble_0.c5, tumble_0.c2 HAVING false;
