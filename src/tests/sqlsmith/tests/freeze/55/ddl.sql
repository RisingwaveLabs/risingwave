CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT 'fxwLpYexEU' AS col_0, t_0.p_size AS col_1 FROM part AS t_0 WHERE false GROUP BY t_0.p_container, t_0.p_size, t_0.p_name, t_0.p_brand;
CREATE MATERIALIZED VIEW m1 AS SELECT (SMALLINT '709') AS col_0 FROM m0 AS t_0 RIGHT JOIN customer AS t_1 ON t_0.col_1 = t_1.c_custkey GROUP BY t_1.c_comment, t_1.c_address, t_1.c_mktsegment, t_0.col_1, t_1.c_custkey HAVING false;
CREATE MATERIALIZED VIEW m2 AS WITH with_0 AS (SELECT 'Wpus1jIlmr' AS col_0, t_1.n_comment AS col_1, t_1.n_regionkey AS col_2, (char_length(t_1.n_comment)) AS col_3 FROM nation AS t_1 GROUP BY t_1.n_regionkey, t_1.n_comment) SELECT '6VuzodsfSA' AS col_0, (INTERVAL '-60') AS col_1, '3PXltaY10i' AS col_2, (BIGINT '313') AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m3 AS SELECT (BIGINT '1') AS col_0, t_0.col_0 AS col_1, (((SMALLINT '889')) # (~ (SMALLINT '80'))) AS col_2 FROM m1 AS t_0 WHERE ((INT '748') <> (REAL '259')) GROUP BY t_0.col_0;
CREATE MATERIALIZED VIEW m4 AS WITH with_0 AS (SELECT 'D7bUVTfAzN' AS col_0, t_2.ps_comment AS col_1, (char_length(t_2.ps_comment)) AS col_2 FROM person AS t_1 LEFT JOIN partsupp AS t_2 ON t_1.credit_card = t_2.ps_comment GROUP BY t_1.email_address, t_2.ps_availqty, t_2.ps_comment, t_2.ps_partkey, t_1.state, t_1.city, t_1.date_time) SELECT (coalesce(NULL, NULL, true, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS col_0, ((FLOAT '0') - (REAL '-2138393012')) AS col_1, ((REAL '0') / (coalesce(NULL, NULL, NULL, NULL, (pow((CASE WHEN false THEN ((SMALLINT '73') | ((SMALLINT '0') << (SMALLINT '0'))) ELSE (SMALLINT '0') END), (0))), NULL, NULL, NULL, NULL, NULL))) AS col_2 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m5 AS SELECT hop_0.description AS col_0, hop_0.category AS col_1 FROM hop(auction, auction.date_time, INTERVAL '86400', INTERVAL '2332800') AS hop_0 GROUP BY hop_0.seller, hop_0.extra, hop_0.category, hop_0.description;
CREATE MATERIALIZED VIEW m7 AS SELECT hop_0.credit_card AS col_0 FROM hop(person, person.date_time, INTERVAL '86400', INTERVAL '3801600') AS hop_0 WHERE true GROUP BY hop_0.credit_card, hop_0.state HAVING false;
CREATE MATERIALIZED VIEW m8 AS SELECT tumble_0.expires AS col_0, min(tumble_0.date_time) FILTER(WHERE (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, NULL))) AS col_1 FROM tumble(auction, auction.expires, INTERVAL '51') AS tumble_0 WHERE ((FLOAT '554') >= (BIGINT '65')) GROUP BY tumble_0.expires HAVING true;
CREATE MATERIALIZED VIEW m9 AS WITH with_0 AS (WITH with_1 AS (SELECT t_3.c2 AS col_0, t_3.c16 AS col_1, t_3.c16 AS col_2, true AS col_3 FROM region AS t_2 FULL JOIN alltypes1 AS t_3 ON t_2.r_name = t_3.c9 WHERE t_3.c1 GROUP BY t_3.c8, t_3.c16, t_3.c2 HAVING false) SELECT ARRAY[(INTERVAL '-60')] AS col_0, false AS col_1, (BIGINT '834') AS col_2 FROM with_1) SELECT (SMALLINT '0') AS col_0 FROM with_0;
