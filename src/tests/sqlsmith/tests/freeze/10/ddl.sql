CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT ARRAY[TIME '22:24:33', TIME '22:24:33', TIME '22:24:33', TIME '22:23:33'] AS col_0, t_0.c5 AS col_1, (CASE WHEN true THEN (SMALLINT '843') ELSE t_0.c2 END) AS col_2 FROM alltypes2 AS t_0 WHERE CAST(t_0.c3 AS BOOLEAN) GROUP BY t_0.c5, t_0.c10, t_0.c8, t_0.c2, t_0.c4, t_0.c16, t_0.c9 HAVING false;
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT hop_1.extra AS col_0, 'Myvv5MBcbe' AS col_1, ((SMALLINT '32767') & hop_1.id) AS col_2, 'czZ93QD7UH' AS col_3 FROM hop(person, person.date_time, INTERVAL '604800', INTERVAL '22982400') AS hop_1 WHERE (DATE '2022-06-29' > (DATE '2022-07-08' - ((SMALLINT '959') & (INT '186')))) GROUP BY hop_1.state, hop_1.id, hop_1.extra, hop_1.name) SELECT CAST((length('K98X6NheEz')) AS BOOLEAN) AS col_0, ((REAL '-1063200343') - ((REAL '968') / ((REAL '850') - (REAL '969')))) AS col_1, (FLOAT '1710904959') AS col_2, (261) AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m3 AS SELECT t_1.s_acctbal AS col_0, t_0.l_receiptdate AS col_1, max(t_0.l_returnflag) AS col_2 FROM lineitem AS t_0 LEFT JOIN supplier AS t_1 ON t_0.l_linenumber = t_1.s_nationkey WHERE true GROUP BY t_1.s_acctbal, t_0.l_shipinstruct, t_1.s_address, t_0.l_extendedprice, t_0.l_receiptdate, t_0.l_linenumber, t_0.l_linestatus, t_0.l_shipdate, t_1.s_suppkey, t_0.l_tax, t_1.s_comment, t_0.l_commitdate;
CREATE MATERIALIZED VIEW m4 AS SELECT (TIMESTAMP '2022-07-01 22:24:34') AS col_0, ((REAL '1') + (REAL '746')) AS col_1, (INT '799') AS col_2, sq_2.col_2 AS col_3 FROM (WITH with_0 AS (SELECT (-2123312042) AS col_0 FROM m3 AS t_1 GROUP BY t_1.col_0) SELECT 'xksu1LickF' AS col_0, (2147483647) AS col_1, TIMESTAMP '2022-07-08 22:24:34' AS col_2 FROM with_0) AS sq_2 GROUP BY sq_2.col_2;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (WITH with_1 AS (SELECT (CASE WHEN (CASE WHEN true THEN t_3.c1 WHEN t_3.c1 THEN t_3.c1 WHEN t_3.c1 THEN ((REAL '954') < t_3.c3) ELSE ((FLOAT '974') <> (FLOAT '670')) END) THEN t_3.c1 WHEN true THEN t_3.c1 ELSE t_3.c1 END) AS col_0, CAST(((INT '-2080836604')) AS BOOLEAN) AS col_1, t_3.c7 AS col_2 FROM auction AS t_2 FULL JOIN alltypes2 AS t_3 ON t_2.extra = t_3.c9 WHERE (t_3.c10 > (INTERVAL '0')) GROUP BY t_3.c4, t_2.date_time, t_3.c7, t_2.id, t_3.c1, t_3.c3 HAVING t_3.c1) SELECT (722) AS col_0, (BIGINT '327') AS col_1, 'qjjbtNVyt9' AS col_2 FROM with_1 WHERE true) SELECT (FLOAT '908') AS col_0 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m6 AS WITH with_0 AS (SELECT (count(t_2.channel) % (INT '0')) AS col_0, t_2.bidder AS col_1, (BIGINT '928') AS col_2 FROM m4 AS t_1 JOIN bid AS t_2 ON t_1.col_3 = t_2.date_time WHERE true GROUP BY t_2.bidder HAVING true) SELECT ((INTERVAL '60') * (FLOAT '-2147483648')) AS col_0, (- ((REAL '874'))) AS col_1 FROM with_0 WHERE ((REAL '862') >= (728));
CREATE MATERIALIZED VIEW m7 AS SELECT sq_2.col_0 AS col_0, ((coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, sq_2.col_0, NULL)) + ((INTERVAL '3600') * (INT '741'))) AS col_1, min(sq_2.col_0) FILTER(WHERE false) AS col_2, TIME '15:29:12' AS col_3 FROM (SELECT TIME '23:19:12' AS col_0, t_1.auction AS col_1 FROM orders AS t_0 FULL JOIN bid AS t_1 ON t_0.o_orderstatus = t_1.url WHERE false GROUP BY t_0.o_shippriority, t_0.o_custkey, t_0.o_clerk, t_0.o_totalprice, t_0.o_orderdate, t_1.price, t_1.channel, t_1.auction HAVING true) AS sq_2 WHERE false GROUP BY sq_2.col_0 HAVING (((FLOAT '-2147483648')) > (BIGINT '695'));
CREATE MATERIALIZED VIEW m8 AS SELECT (REAL '2147483647') AS col_0, (REAL '431') AS col_1 FROM m4 AS t_0 RIGHT JOIN m4 AS t_1 ON t_0.col_3 = t_1.col_3 AND (CASE WHEN false THEN false WHEN false THEN true ELSE true END) GROUP BY t_1.col_1 HAVING (true);
CREATE MATERIALIZED VIEW m9 AS SELECT (tumble_0.bidder << (INT '519')) AS col_0, 'S5V1GW6uqH' AS col_1, ARRAY[(BIGINT '0')] AS col_2, tumble_0.extra AS col_3 FROM tumble(bid, bid.date_time, INTERVAL '60') AS tumble_0 GROUP BY tumble_0.price, tumble_0.extra, tumble_0.bidder HAVING false;
