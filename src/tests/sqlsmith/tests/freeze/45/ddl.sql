CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_1.url AS col_0, ('CHgigITL8z') AS col_1 FROM bid AS t_0 JOIN bid AS t_1 ON t_0.price = t_1.auction AND ((REAL '710') > (INT '0')) WHERE true GROUP BY t_0.channel, t_0.date_time, t_0.auction, t_0.extra, t_1.url, t_1.extra, t_1.auction HAVING true;
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT ((SMALLINT '690') | (((BIGINT '579') << (CASE WHEN true THEN (INT '67') WHEN false THEN (INT '152') WHEN false THEN (INT '24') ELSE ((INT '395') >> (SMALLINT '114')) END)) >> max((SMALLINT '32767')) FILTER(WHERE false))) AS col_0, '4rLymvZ15X' AS col_1, t_1.description AS col_2, max(TIME '10:37:54') FILTER(WHERE false) AS col_3 FROM auction AS t_1 WHERE false GROUP BY t_1.description HAVING false) SELECT (SMALLINT '650') AS col_0, ((INTERVAL '-3600') + TIMESTAMP '2022-11-22 09:37:54') AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m2 AS SELECT tumble_0.initial_bid AS col_0 FROM tumble(auction, auction.expires, INTERVAL '92') AS tumble_0 WHERE true GROUP BY tumble_0.category, tumble_0.initial_bid, tumble_0.extra, tumble_0.reserve;
CREATE MATERIALIZED VIEW m3 AS SELECT (BIGINT '778') AS col_0, max(tumble_0.date_time) FILTER(WHERE (coalesce(NULL, NULL, NULL, NULL, true, NULL, NULL, NULL, NULL, NULL))) AS col_1, (CASE WHEN false THEN ((INTERVAL '-86400') + TIME '10:37:55') ELSE TIME '09:37:55' END) AS col_2 FROM tumble(auction, auction.date_time, INTERVAL '67') AS tumble_0 GROUP BY tumble_0.id, tumble_0.expires HAVING true;
CREATE MATERIALIZED VIEW m4 AS SELECT t_0.c_nationkey AS col_0, t_0.c_nationkey AS col_1 FROM customer AS t_0 LEFT JOIN orders AS t_1 ON t_0.c_name = t_1.o_orderstatus GROUP BY t_1.o_clerk, t_0.c_phone, t_0.c_nationkey, t_0.c_address, t_0.c_mktsegment HAVING max(true) FILTER(WHERE true);
CREATE MATERIALIZED VIEW m5 AS SELECT t_0.p_type AS col_0 FROM part AS t_0 WHERE true GROUP BY t_0.p_type, t_0.p_brand, t_0.p_container, t_0.p_retailprice;
CREATE MATERIALIZED VIEW m6 AS SELECT t_0.col_0 AS col_0, (TRIM('OL9mOvV2h3')) AS col_1, 'zV5RCfyPsB' AS col_2 FROM m0 AS t_0 WHERE CAST(((INT '768') << (INT '0')) AS BOOLEAN) GROUP BY t_0.col_0 HAVING true;
CREATE MATERIALIZED VIEW m7 AS WITH with_0 AS (SELECT t_1.ps_suppkey AS col_0, (INT '261') AS col_1 FROM partsupp AS t_1 RIGHT JOIN partsupp AS t_2 ON t_1.ps_comment = t_2.ps_comment GROUP BY t_1.ps_suppkey, t_2.ps_supplycost, t_1.ps_comment HAVING true) SELECT '8f1G5DK4Me' AS col_0, (REAL '598') AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m8 AS SELECT ((((SMALLINT '162') >> t_2.col_0) % (t_2.col_0 * (SMALLINT '14063'))) - t_2.col_0) AS col_0, (~ ((INT '215'))) AS col_1 FROM m4 AS t_2 WHERE false GROUP BY t_2.col_0 HAVING true;
CREATE MATERIALIZED VIEW m9 AS SELECT t_0.l_returnflag AS col_0, t_0.l_returnflag AS col_1, t_0.l_receiptdate AS col_2 FROM lineitem AS t_0 GROUP BY t_0.l_quantity, t_0.l_linestatus, t_0.l_receiptdate, t_0.l_returnflag, t_0.l_partkey, t_0.l_extendedprice, t_0.l_orderkey, t_0.l_shipinstruct HAVING (false <> true);
