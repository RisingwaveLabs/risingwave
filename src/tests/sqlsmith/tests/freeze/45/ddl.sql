CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_1.channel AS col_0, (OVERLAY(t_1.channel PLACING t_0.channel FROM CAST(true AS INT) FOR (INT '20'))) AS col_1 FROM bid AS t_0 LEFT JOIN bid AS t_1 ON t_0.price = t_1.auction AND (TIMESTAMP '2022-11-15 15:50:33' > DATE '2022-11-22') GROUP BY t_0.channel, t_0.date_time, t_0.auction, t_1.price, t_1.channel, t_1.date_time, t_0.price HAVING true;
CREATE MATERIALIZED VIEW m1 AS SELECT ((BIGINT '690') / ((t_1.s_suppkey - (BIGINT '7580489791135509731')) >> (SMALLINT '815'))) AS col_0, t_1.s_suppkey AS col_1 FROM m0 AS t_0 JOIN supplier AS t_1 ON t_0.col_1 = t_1.s_address GROUP BY t_1.s_suppkey HAVING false;
CREATE MATERIALIZED VIEW m2 AS SELECT (sq_1.col_0 # (INT '886')) AS col_0 FROM (SELECT hop_0.id AS col_0 FROM hop(person, person.date_time, INTERVAL '604800', INTERVAL '24796800') AS hop_0 GROUP BY hop_0.name, hop_0.state, hop_0.extra, hop_0.id HAVING ((SMALLINT '839') = (SMALLINT '-32768'))) AS sq_1 GROUP BY sq_1.col_0 HAVING ARRAY[(INT '681')] IN (SELECT tumble_2.c15 AS col_0 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '12') AS tumble_2 GROUP BY tumble_2.c3, tumble_2.c5, tumble_2.c15, tumble_2.c2, tumble_2.c13, tumble_2.c10 HAVING false);
CREATE MATERIALIZED VIEW m3 AS SELECT sq_1.col_0 AS col_0, (lower((coalesce(NULL, NULL, (concat_ws('xdjrZgJL3X', sq_1.col_0)), NULL, NULL, NULL, NULL, NULL, NULL, NULL)))) AS col_1, sq_1.col_0 AS col_2, 'Dxk9wQiiEV' AS col_3 FROM (SELECT hop_0.extra AS col_0 FROM hop(person, person.date_time, INTERVAL '604800', INTERVAL '31449600') AS hop_0 GROUP BY hop_0.city, hop_0.extra, hop_0.name, hop_0.email_address) AS sq_1 GROUP BY sq_1.col_0;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT (BIGINT '577') AS col_0 FROM auction AS t_1 GROUP BY t_1.initial_bid, t_1.id, t_1.date_time, t_1.seller) SELECT (SMALLINT '718') AS col_0, CAST(NULL AS STRUCT<a INTERVAL>) AS col_1 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m6 AS WITH with_0 AS (SELECT t_1.o_orderkey AS col_0, (BIGINT '759') AS col_1, (1) AS col_2 FROM orders AS t_1 GROUP BY t_1.o_comment, t_1.o_orderkey, t_1.o_shippriority, t_1.o_totalprice, t_1.o_orderstatus HAVING false) SELECT TIME '10:37:57' AS col_0, (BIGINT '9223372036854775807') AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m7 AS WITH with_0 AS (SELECT sq_3.col_1 AS col_0 FROM (SELECT (lower(t_2.extra)) AS col_0, 'rnpX3yyftt' AS col_1, t_1.description AS col_2, t_1.description AS col_3 FROM auction AS t_1 RIGHT JOIN bid AS t_2 ON t_1.item_name = t_2.channel GROUP BY t_1.description, t_2.auction, t_2.extra, t_2.bidder, t_1.reserve, t_1.extra, t_1.item_name HAVING true) AS sq_3 GROUP BY sq_3.col_1, sq_3.col_3) SELECT DATE '2022-11-22' AS col_0 FROM with_0 WHERE CAST((INT '427') AS BOOLEAN);
CREATE MATERIALIZED VIEW m8 AS SELECT ((((INT '553')) + DATE '2022-11-13') + (INT '694')) AS col_0 FROM (SELECT (BIGINT '250') AS col_0, ((CASE WHEN ((1) <= (coalesce((REAL '0'), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL))) THEN (SMALLINT '902') ELSE (SMALLINT '557') END) - tumble_0.auction) AS col_1, tumble_0.auction AS col_2, 'jb4X6Jiigf' AS col_3 FROM tumble(bid, bid.date_time, INTERVAL '45') AS tumble_0 WHERE ((- ((REAL '872'))) <> (INT '844')) GROUP BY tumble_0.price, tumble_0.auction, tumble_0.channel, tumble_0.bidder) AS sq_1 GROUP BY sq_1.col_2, sq_1.col_0;
CREATE MATERIALIZED VIEW m9 AS SELECT tumble_0.bidder AS col_0, (FLOAT '639583510') AS col_1, tumble_0.channel AS col_2, tumble_0.channel AS col_3 FROM tumble(bid, bid.date_time, INTERVAL '71') AS tumble_0 GROUP BY tumble_0.channel, tumble_0.auction, tumble_0.bidder HAVING false;
