CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_1.p_container AS col_0, 'oMO9OElogE' AS col_1, t_1.p_container AS col_2 FROM alltypes2 AS t_0 JOIN part AS t_1 ON t_0.c9 = t_1.p_type AND (t_1.p_size >= t_0.c6) GROUP BY t_0.c5, t_1.p_mfgr, t_0.c15, t_1.p_partkey, t_1.p_brand, t_0.c2, t_0.c8, t_1.p_comment, t_1.p_type, t_1.p_container HAVING false;
CREATE MATERIALIZED VIEW m1 AS SELECT t_1.ps_availqty AS col_0, (split_part('7dMdWp6oV7', t_0.col_1, (SMALLINT '0'))) AS col_1, (INT '130') AS col_2 FROM m0 AS t_0 FULL JOIN partsupp AS t_1 ON t_0.col_1 = t_1.ps_comment WHERE CAST(t_1.ps_availqty AS BOOLEAN) GROUP BY t_1.ps_availqty, t_0.col_1, t_1.ps_partkey, t_1.ps_suppkey HAVING false;
CREATE MATERIALIZED VIEW m2 AS SELECT (t_0.o_shippriority # (SMALLINT '60')) AS col_0, (INT '19') AS col_1 FROM orders AS t_0 FULL JOIN partsupp AS t_1 ON t_0.o_shippriority = t_1.ps_suppkey WHERE true GROUP BY t_1.ps_suppkey, t_0.o_shippriority, t_1.ps_availqty;
CREATE MATERIALIZED VIEW m3 AS SELECT tumble_0.c1 AS col_0 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '36') AS tumble_0 WHERE (true) GROUP BY tumble_0.c9, tumble_0.c1, tumble_0.c4 HAVING (CASE WHEN (((REAL '89') / (FLOAT '737')) = ((SMALLINT '0') # (INT '922'))) THEN tumble_0.c1 ELSE tumble_0.c1 END);
CREATE MATERIALIZED VIEW m4 AS SELECT (to_char((TIMESTAMP '2022-03-30 09:31:35' - (INTERVAL '1')), t_0.city)) AS col_0, (md5((TRIM(LEADING 'eUsW3dvsrO' FROM 'vnRlrjuCj1')))) AS col_1 FROM person AS t_0 WHERE (coalesce(CAST((INT '287') AS BOOLEAN), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) GROUP BY t_0.city HAVING (avg((SMALLINT '32767')) > ((INT '-203576432') >> (SMALLINT '1')));
CREATE MATERIALIZED VIEW m5 AS SELECT ((REAL '292') - (REAL '607')) AS col_0, t_0.p_mfgr AS col_1 FROM part AS t_0 LEFT JOIN person AS t_1 ON t_0.p_comment = t_1.state AND true GROUP BY t_0.p_mfgr, t_0.p_comment, t_1.city;
CREATE MATERIALIZED VIEW m6 AS SELECT 'L2HqVLruMQ' AS col_0, sq_2.col_2 AS col_1, 'zswiNEz3Se' AS col_2 FROM (SELECT (replace((lower(t_1.r_name)), t_1.r_name, '3Q6waZUuLg')) AS col_0, (md5((substr(t_1.r_name, (INT '670'), (INT '-2147483648'))))) AS col_1, t_1.r_name AS col_2, (substr(t_1.r_name, (INT '-2147483648'), (INT '940'))) AS col_3 FROM partsupp AS t_0 LEFT JOIN region AS t_1 ON t_0.ps_comment = t_1.r_name GROUP BY t_1.r_name HAVING false) AS sq_2 GROUP BY sq_2.col_2 HAVING (true);
CREATE MATERIALIZED VIEW m7 AS SELECT hop_0.id AS col_0, (hop_0.id & (INT '925')) AS col_1 FROM hop(auction, auction.date_time, INTERVAL '60', INTERVAL '3660') AS hop_0 GROUP BY hop_0.id HAVING ((FLOAT '546') <> (- hop_0.id));
CREATE MATERIALIZED VIEW m8 AS SELECT ((SMALLINT '942') + (INT '768')) AS col_0, 'voLLkJYL4w' AS col_1, t_1.c_mktsegment AS col_2, t_1.c_nationkey AS col_3 FROM partsupp AS t_0 JOIN customer AS t_1 ON t_0.ps_comment = t_1.c_name WHERE true GROUP BY t_1.c_mktsegment, t_1.c_nationkey HAVING true;
CREATE MATERIALIZED VIEW m9 AS WITH with_0 AS (SELECT TIMESTAMP '2022-03-30 09:32:37' AS col_0 FROM customer AS t_1 FULL JOIN m0 AS t_2 ON t_1.c_address = t_2.col_2 AND true WHERE (true) GROUP BY t_2.col_2, t_1.c_nationkey, t_2.col_0, t_1.c_name) SELECT ((524585995)) AS col_0, 'CRbn053h6b' AS col_1 FROM with_0;
