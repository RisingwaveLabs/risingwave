CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT sq_1.col_0 AS col_0, (BIGINT '1') AS col_1, (INTERVAL '-604800') AS col_2, (SMALLINT '147') AS col_3 FROM (SELECT tumble_0.email_address AS col_0, tumble_0.email_address AS col_1 FROM tumble(person, person.date_time, INTERVAL '21') AS tumble_0 WHERE false GROUP BY tumble_0.city, tumble_0.state, tumble_0.email_address, tumble_0.date_time HAVING true) AS sq_1 WHERE true GROUP BY sq_1.col_0 HAVING false;
CREATE MATERIALIZED VIEW m1 AS SELECT (t_0.o_shippriority & (SMALLINT '428')) AS col_0 FROM orders AS t_0 LEFT JOIN auction AS t_1 ON t_0.o_comment = t_1.extra WHERE true GROUP BY t_0.o_shippriority, t_0.o_comment, t_0.o_orderkey;
CREATE MATERIALIZED VIEW m3 AS SELECT (t_0.ps_availqty | (SMALLINT '234')) AS col_0 FROM partsupp AS t_0 GROUP BY t_0.ps_availqty, t_0.ps_suppkey;
CREATE MATERIALIZED VIEW m4 AS SELECT hop_0.seller AS col_0 FROM hop(auction, auction.date_time, INTERVAL '86400', INTERVAL '7516800') AS hop_0 WHERE true GROUP BY hop_0.seller, hop_0.reserve, hop_0.date_time HAVING CAST(((INT '-1125024616') % (INT '364')) AS BOOLEAN);
CREATE MATERIALIZED VIEW m5 AS SELECT t_1.col_0 AS col_0, 'OPHVEQOmNB' AS col_1 FROM person AS t_0 RIGHT JOIN m4 AS t_1 ON t_0.id = t_1.col_0 AND true WHERE false GROUP BY t_0.city, t_0.date_time, t_0.credit_card, t_1.col_0, t_0.extra HAVING (false <> false);
CREATE MATERIALIZED VIEW m6 AS SELECT (727) AS col_0 FROM m5 AS t_0 RIGHT JOIN customer AS t_1 ON t_0.col_1 = t_1.c_comment AND ((REAL '2147483647') <> (SMALLINT '801')) GROUP BY t_1.c_acctbal, t_1.c_phone, t_1.c_comment;
CREATE MATERIALIZED VIEW m7 AS SELECT (TRIM(BOTH 'Vpn84FMBbs' FROM 'ioxWuzMCbg')) AS col_0, hop_0.expires AS col_1, hop_0.expires AS col_2 FROM hop(auction, auction.expires, INTERVAL '60', INTERVAL '2640') AS hop_0 GROUP BY hop_0.expires HAVING false;
CREATE MATERIALIZED VIEW m8 AS SELECT hop_0.c15 AS col_0, ARRAY['vxr2pv1kry', 'cLhFpcQKau', 'Sl5G3411lV', 'zRB8G5V61N'] AS col_1, (BIGINT '9223372036854775807') AS col_2, (SMALLINT '344') AS col_3 FROM hop(alltypes2, alltypes2.c11, INTERVAL '604800', INTERVAL '50803200') AS hop_0 WHERE hop_0.c1 GROUP BY hop_0.c14, hop_0.c16, hop_0.c7, hop_0.c15, hop_0.c6 HAVING (true);
CREATE MATERIALIZED VIEW m9 AS SELECT t_0.n_regionkey AS col_0, ((BIGINT '680') | (SMALLINT '422')) AS col_1 FROM nation AS t_0 RIGHT JOIN m7 AS t_1 ON t_0.n_name = t_1.col_0 GROUP BY t_0.n_regionkey HAVING max(false);
