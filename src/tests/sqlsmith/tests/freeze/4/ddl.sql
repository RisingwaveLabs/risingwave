CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT t_1.category AS col_0 FROM auction AS t_1 RIGHT JOIN region AS t_2 ON t_1.description = t_2.r_comment GROUP BY t_1.description, t_1.seller, t_2.r_regionkey, t_1.expires, t_1.id, t_1.category, t_2.r_comment HAVING false) SELECT (REAL '936') AS col_0, (- (- (REAL '15'))) AS col_1, DATE '2022-08-05' AS col_2, (REAL '174') AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m2 AS SELECT t_2.c_mktsegment AS col_0, t_2.c_mktsegment AS col_1, (BIGINT '9223372036854775807') AS col_2 FROM customer AS t_2 WHERE (true IS FALSE) GROUP BY t_2.c_mktsegment;
CREATE MATERIALIZED VIEW m3 AS SELECT t_0.url AS col_0, t_0.url AS col_1, 'O3QOItRfen' AS col_2, (BIGINT '913') AS col_3 FROM bid AS t_0 GROUP BY t_0.bidder, t_0.url;
CREATE MATERIALIZED VIEW m4 AS SELECT t_0.c5 AS col_0 FROM alltypes2 AS t_0 FULL JOIN region AS t_1 ON t_0.c9 = t_1.r_comment AND t_0.c1 WHERE t_0.c1 GROUP BY t_1.r_regionkey, t_0.c5;
CREATE MATERIALIZED VIEW m6 AS SELECT (t_1.n_regionkey - t_1.n_regionkey) AS col_0, t_0.s_address AS col_1 FROM supplier AS t_0 RIGHT JOIN nation AS t_1 ON t_0.s_suppkey = t_1.n_nationkey AND true GROUP BY t_0.s_suppkey, t_1.n_regionkey, t_0.s_address;
CREATE MATERIALIZED VIEW m7 AS SELECT (INT '219') AS col_0 FROM (WITH with_0 AS (SELECT (BIGINT '514') AS col_0, t_2.o_totalprice AS col_1, t_1.col_1 AS col_2, TIME '16:36:33' AS col_3 FROM m2 AS t_1 RIGHT JOIN orders AS t_2 ON t_1.col_0 = t_2.o_orderstatus WHERE true GROUP BY t_1.col_2, t_1.col_1, t_2.o_orderkey, t_2.o_totalprice, t_2.o_orderpriority, t_2.o_shippriority HAVING false) SELECT TIME '16:37:33' AS col_0, DATE '2022-08-08' AS col_1, ((SMALLINT '-6684') # ((BIGINT '919') # (INT '562'))) AS col_2 FROM with_0) AS sq_3 WHERE (false) GROUP BY sq_3.col_1, sq_3.col_0 HAVING CAST((INT '369') AS BOOLEAN);
CREATE MATERIALIZED VIEW m8 AS SELECT ('kmRrVBhSRW') AS col_0, t_1.reserve AS col_1, (BIGINT '231') AS col_2 FROM person AS t_0 RIGHT JOIN auction AS t_1 ON t_0.email_address = t_1.item_name GROUP BY t_1.expires, t_0.date_time, t_1.initial_bid, t_1.description, t_1.reserve, t_0.credit_card, t_1.id, t_0.email_address;
CREATE MATERIALIZED VIEW m9 AS SELECT (TIMESTAMP '2022-08-08 16:37:33') AS col_0 FROM orders AS t_0 RIGHT JOIN lineitem AS t_1 ON t_0.o_totalprice = t_1.l_quantity GROUP BY t_1.l_commitdate, t_1.l_comment, t_1.l_orderkey HAVING true;
