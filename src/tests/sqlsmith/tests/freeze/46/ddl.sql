CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT (REAL '535') AS col_0 FROM supplier AS t_0 LEFT JOIN alltypes1 AS t_1 ON t_0.s_nationkey = t_1.c3 AND t_1.c1 WHERE ((t_1.c10 = t_1.c10) OR t_1.c1) GROUP BY t_1.c8, t_0.s_acctbal, t_1.c7, t_0.s_comment, t_0.s_nationkey, t_1.c15;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.ps_partkey AS col_0, t_0.ps_suppkey AS col_1, t_1.s_phone AS col_2 FROM partsupp AS t_0 RIGHT JOIN supplier AS t_1 ON t_0.ps_partkey = t_1.s_suppkey WHERE (false) GROUP BY t_0.ps_suppkey, t_0.ps_supplycost, t_0.ps_availqty, t_1.s_acctbal, t_1.s_phone, t_0.ps_partkey;
CREATE MATERIALIZED VIEW m2 AS SELECT ((INT '1657891619') % (BIGINT '690')) AS col_0 FROM auction AS t_2 WHERE true GROUP BY t_2.extra, t_2.seller, t_2.id, t_2.date_time, t_2.initial_bid HAVING (CASE WHEN (false) THEN ((INT '-2147483648') < t_2.initial_bid) ELSE false END);
CREATE MATERIALIZED VIEW m3 AS WITH with_0 AS (WITH with_1 AS (SELECT t_3.date_time AS col_0, (BIGINT '717') AS col_1, (INT '2147483647') AS col_2 FROM nation AS t_2 JOIN auction AS t_3 ON t_2.n_name = t_3.description GROUP BY t_2.n_nationkey, t_3.initial_bid, t_3.date_time, t_3.seller) SELECT (FLOAT '1') AS col_0 FROM with_1) SELECT (CASE WHEN true THEN (false) WHEN false THEN true ELSE (false) END) AS col_0 FROM with_0;
CREATE MATERIALIZED VIEW m4 AS WITH with_0 AS (WITH with_1 AS (SELECT hop_2.category AS col_0 FROM hop(auction, auction.date_time, INTERVAL '1', INTERVAL '44') AS hop_2 GROUP BY hop_2.item_name, hop_2.category, hop_2.reserve HAVING true) SELECT DATE '2022-01-31' AS col_0, (REAL '1') AS col_1 FROM with_1) SELECT (false) AS col_0, (REAL '510') AS col_1, max((REAL '614')) FILTER(WHERE true) AS col_2, DATE '2022-01-31' AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m7 AS SELECT t_1.s_suppkey AS col_0, t_1.s_acctbal AS col_1, (INT '196') AS col_2, (~ (INT '-467918950')) AS col_3 FROM m1 AS t_0 FULL JOIN supplier AS t_1 ON t_0.col_2 = t_1.s_address WHERE true GROUP BY t_0.col_0, t_1.s_nationkey, t_1.s_acctbal, t_1.s_suppkey, t_0.col_1 HAVING true;
CREATE MATERIALIZED VIEW m8 AS SELECT t_0.col_1 AS col_0, t_0.col_2 AS col_1 FROM m1 AS t_0 GROUP BY t_0.col_1, t_0.col_2;
CREATE MATERIALIZED VIEW m9 AS SELECT 'tUY46tYMMJ' AS col_0, (INT '-2147483648') AS col_1 FROM nation AS t_0 LEFT JOIN supplier AS t_1 ON t_0.n_nationkey = t_1.s_suppkey GROUP BY t_1.s_suppkey, t_1.s_phone, t_1.s_name HAVING false;
