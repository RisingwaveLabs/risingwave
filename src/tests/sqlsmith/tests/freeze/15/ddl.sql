CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS WITH with_0 AS (WITH with_1 AS (SELECT DATE '2022-06-16' AS col_0, 'pLwlSOFAlM' AS col_1, t_3.state AS col_2, t_2.n_name AS col_3 FROM nation AS t_2 LEFT JOIN person AS t_3 ON t_2.n_name = t_3.extra GROUP BY t_3.state, t_3.name, t_2.n_name, t_3.credit_card HAVING false) SELECT true AS col_0 FROM with_1 WHERE true) SELECT TIMESTAMP '2022-06-17 10:23:53' AS col_0, (INT '637') AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m1 AS SELECT ((INT '695') << max((((SMALLINT '289') << CAST(((REAL '57') > (BIGINT '838')) AS INT)) & t_0.c_custkey))) AS col_0, t_0.c_comment AS col_1 FROM customer AS t_0 LEFT JOIN region AS t_1 ON t_0.c_mktsegment = t_1.r_comment GROUP BY t_0.c_nationkey, t_0.c_address, t_0.c_phone, t_0.c_comment;
CREATE MATERIALIZED VIEW m2 AS SELECT hop_0.c14 AS col_0, TIMESTAMP '2022-06-17 11:22:54' AS col_1, false AS col_2 FROM hop(alltypes1, alltypes1.c11, INTERVAL '562226', INTERVAL '19677910') AS hop_0 GROUP BY hop_0.c11, hop_0.c6, hop_0.c5, hop_0.c8, hop_0.c14, hop_0.c10, hop_0.c9;
CREATE MATERIALIZED VIEW m3 AS SELECT (BIGINT '924') AS col_0 FROM bid AS t_0 LEFT JOIN partsupp AS t_1 ON t_0.extra = t_1.ps_comment WHERE true GROUP BY t_0.bidder HAVING (true);
CREATE MATERIALIZED VIEW m5 AS SELECT 'UK1tRWp8zd' AS col_0, true AS col_1, (replace(('ecONMJdXgG'), t_1.city, t_1.city)) AS col_2, t_1.date_time AS col_3 FROM auction AS t_0 RIGHT JOIN person AS t_1 ON t_0.extra = t_1.credit_card AND true GROUP BY t_1.date_time, t_0.seller, t_1.city, t_0.description;
CREATE MATERIALIZED VIEW m6 AS SELECT (REAL '1') AS col_0, (- (t_1.c5 - (REAL '0'))) AS col_1 FROM m0 AS t_0 RIGHT JOIN alltypes1 AS t_1 ON t_0.col_1 = t_1.c3 AND t_1.c1 WHERE t_1.c1 GROUP BY t_1.c13, t_1.c5, t_1.c11, t_1.c9;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.c15 AS col_0, t_0.c16 AS col_1, t_1.ps_partkey AS col_2, t_0.c8 AS col_3 FROM alltypes2 AS t_0 FULL JOIN partsupp AS t_1 ON t_0.c9 = t_1.ps_comment GROUP BY t_0.c6, t_1.ps_partkey, t_0.c4, t_0.c8, t_1.ps_comment, t_0.c16, t_0.c10, t_0.c14, t_0.c15 HAVING (t_1.ps_comment IS NOT NULL);
CREATE MATERIALIZED VIEW m8 AS SELECT (((SMALLINT '450') # t_0.col_1) # t_0.col_1) AS col_0 FROM m0 AS t_0 GROUP BY t_0.col_1 HAVING ((230) < (FLOAT '628'));
CREATE MATERIALIZED VIEW m9 AS SELECT t_2.col_1 AS col_0 FROM m7 AS t_2 WHERE true GROUP BY t_2.col_1 HAVING true;
