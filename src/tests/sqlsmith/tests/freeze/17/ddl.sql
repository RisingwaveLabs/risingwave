CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS WITH with_0 AS (SELECT t_1.s_comment AS col_0, t_1.s_nationkey AS col_1 FROM supplier AS t_1 WHERE true GROUP BY t_1.s_acctbal, t_1.s_nationkey, t_1.s_name, t_1.s_comment HAVING true) SELECT (concat((OVERLAY('QjcbF1StKn' PLACING 'GZGQSCNCHZ' FROM (INT '-1236306622') FOR (INT '942'))))) AS col_0, (INT '-2147483648') AS col_1, (BIGINT '1') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m1 AS SELECT ((INT '934')) AS col_0 FROM region AS t_0 FULL JOIN customer AS t_1 ON t_0.r_regionkey = t_1.c_nationkey WHERE true GROUP BY t_1.c_comment, t_0.r_name, t_0.r_regionkey, t_1.c_custkey, t_1.c_nationkey, t_1.c_mktsegment;
CREATE MATERIALIZED VIEW m2 AS WITH with_0 AS (WITH with_1 AS (SELECT t_2.bidder AS col_0 FROM bid AS t_2 WHERE true GROUP BY t_2.bidder HAVING true) SELECT DATE '2022-05-24' AS col_0, ((coalesce((TIME '05:46:16' - TIME '05:46:15'), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) - (INTERVAL '86400')) AS col_1, (218) AS col_2, ((REAL '427')) AS col_3 FROM with_1 WHERE (((FLOAT '198')) < (BIGINT '154'))) SELECT ((INT '310') & (SMALLINT '942')) AS col_0, true AS col_1, true AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m3 AS SELECT ARRAY[(INT '325')] AS col_0, ((INTERVAL '-60') + (CASE WHEN t_1.col_1 THEN t_0.c10 WHEN t_1.col_1 THEN t_0.c10 WHEN t_1.col_2 THEN TIME '05:46:16' ELSE min(TIME '04:46:16') FILTER(WHERE ((BIGINT '980') > ((REAL '442') + (REAL '260')))) END)) AS col_1, false AS col_2 FROM alltypes2 AS t_0 JOIN m2 AS t_1 ON t_0.c1 = t_1.col_2 WHERE (CASE WHEN t_0.c1 THEN ((BIGINT '271') <> t_0.c5) ELSE t_0.c1 END) GROUP BY t_1.col_2, t_0.c8, t_0.c15, t_0.c6, t_0.c10, t_1.col_1;
CREATE MATERIALIZED VIEW m4 AS WITH with_0 AS (SELECT t_1.o_orderkey AS col_0 FROM orders AS t_1 GROUP BY t_1.o_orderkey, t_1.o_custkey, t_1.o_shippriority, t_1.o_totalprice HAVING false) SELECT 'WUIBzqiHsS' AS col_0, ((REAL '1') - (REAL '155')) AS col_1, (INTERVAL '-936837') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m6 AS SELECT 'SYtWHu8LGt' AS col_0, tumble_0.item_name AS col_1, (TRIM('HJsCIjFS6v')) AS col_2 FROM tumble(auction, auction.expires, INTERVAL '30') AS tumble_0 GROUP BY tumble_0.item_name;
CREATE MATERIALIZED VIEW m7 AS SELECT 'abmcTkDQbV' AS col_0, t_0.col_1 AS col_1 FROM m4 AS t_0 GROUP BY t_0.col_0, t_0.col_1;
CREATE MATERIALIZED VIEW m8 AS SELECT tumble_0.expires AS col_0, tumble_0.id AS col_1, tumble_0.expires AS col_2, tumble_0.expires AS col_3 FROM tumble(auction, auction.date_time, INTERVAL '2') AS tumble_0 GROUP BY tumble_0.reserve, tumble_0.date_time, tumble_0.expires, tumble_0.id HAVING false;
CREATE MATERIALIZED VIEW m9 AS SELECT t_1.name AS col_0, 'yCiivBjVdv' AS col_1, (concat_ws((upper(t_1.name)), (replace(t_1.city, t_1.state, 'n04EFnxYG4')), (concat_ws(t_1.city, t_1.state, t_1.state)))) AS col_2 FROM nation AS t_0 RIGHT JOIN person AS t_1 ON t_0.n_name = t_1.name AND (true) WHERE true GROUP BY t_1.name, t_1.state, t_1.city;
