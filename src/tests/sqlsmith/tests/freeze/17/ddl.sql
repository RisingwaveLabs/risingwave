CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS WITH with_0 AS (SELECT t_1.s_comment AS col_0, t_1.s_nationkey AS col_1 FROM supplier AS t_1 WHERE true GROUP BY t_1.s_acctbal, t_1.s_nationkey, t_1.s_name, t_1.s_comment HAVING true) SELECT (concat((substr('QjcbF1StKn', (INT '2147483647'), (INT '86779384'))))) AS col_0, (SMALLINT '211') AS col_1, (REAL '-2147483648') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT ((SMALLINT '-30484') + hop_1.price) AS col_0, 'yA1zGrN4Ac' AS col_1, (TIMESTAMP '2022-05-20 04:43:45') AS col_2, hop_1.price AS col_3 FROM hop(bid, bid.date_time, INTERVAL '1', INTERVAL '63') AS hop_1 WHERE (DATE '2022-05-24' > DATE '2022-05-24') GROUP BY hop_1.date_time, hop_1.price, hop_1.url, hop_1.channel HAVING false) SELECT (INT '651') AS col_0, (BIGINT '2801545524549433997') AS col_1, ((coalesce(((SMALLINT '770') * (INTERVAL '1')), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) * (INT '511')) AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m2 AS SELECT (substr(t_1.p_mfgr, (INT '1'))) AS col_0, (substr(t_0.c_address, t_0.c_nationkey, ((CASE WHEN CAST(t_0.c_nationkey AS BOOLEAN) THEN ((INT '453') / t_0.c_nationkey) WHEN false THEN t_0.c_nationkey WHEN true THEN t_0.c_nationkey ELSE t_0.c_nationkey END) # (t_0.c_nationkey & (SMALLINT '446'))))) AS col_1 FROM customer AS t_0 JOIN part AS t_1 ON t_0.c_address = t_1.p_brand AND true GROUP BY t_0.c_nationkey, t_1.p_mfgr, t_0.c_address HAVING true;
CREATE MATERIALIZED VIEW m3 AS WITH with_0 AS (SELECT false AS col_0, (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, (hop_1.id # hop_1.id))) AS col_1, hop_1.email_address AS col_2, (substr(('Z1EsltQoAQ'), (INT '1773520740'))) AS col_3 FROM hop(person, person.date_time, INTERVAL '604800', INTERVAL '19958400') AS hop_1 GROUP BY hop_1.city, hop_1.email_address, hop_1.id, hop_1.name) SELECT (BIGINT '194') AS col_0, ((INTERVAL '3600') + TIME '05:46:16') AS col_1, (SMALLINT '121') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m4 AS SELECT ARRAY['N4W6Yv6vf4', 'oDv2EpLaGQ', 'uraTmiip2U', 'Zxzl2gpKi5'] AS col_0, ARRAY[DATE '2022-05-24', DATE '2022-05-24'] AS col_1 FROM nation AS t_0 FULL JOIN alltypes2 AS t_1 ON t_0.n_nationkey = t_1.c3 AND (t_1.c1 IS NOT TRUE) GROUP BY t_1.c1, t_1.c9, t_1.c8, t_1.c10, t_1.c16, t_0.n_nationkey;
CREATE MATERIALIZED VIEW m6 AS SELECT TIME '05:45:17' AS col_0 FROM (SELECT (substr(t_1.extra, (INT '467'))) AS col_0, (substr('cKlByijSuW', (INT '924'))) AS col_1, (TRIM(TRAILING t_1.extra FROM (to_char((DATE '2022-05-19' + CAST((max(t_0.date_time) FILTER(WHERE CAST((INT '408') AS BOOLEAN)) > TIMESTAMP '2022-05-23 05:46:17') AS INT)), '9CTJVvYjlA')))) AS col_2 FROM person AS t_0 LEFT JOIN bid AS t_1 ON t_0.city = t_1.extra AND (CASE WHEN (true) THEN true WHEN true THEN true ELSE (true) END) WHERE false GROUP BY t_1.extra) AS sq_2 GROUP BY sq_2.col_1;
CREATE MATERIALIZED VIEW m7 AS SELECT TIMESTAMP '2022-05-19 08:22:56' AS col_0, 'x5Pfq0uGMB' AS col_1, 'wyLe0AMdOd' AS col_2 FROM supplier AS t_0 JOIN alltypes2 AS t_1 ON t_0.s_acctbal = t_1.c7 GROUP BY t_1.c9, t_0.s_phone, t_0.s_address HAVING ((BIGINT '810') < (REAL '537'));
CREATE MATERIALIZED VIEW m9 AS SELECT ARRAY['eu5laP4HI4'] AS col_0 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '68') AS tumble_0 GROUP BY tumble_0.c16 HAVING true;
