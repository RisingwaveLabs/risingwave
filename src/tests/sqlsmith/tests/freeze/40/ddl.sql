CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.ps_suppkey AS col_0 FROM partsupp AS t_0 GROUP BY t_0.ps_supplycost, t_0.ps_suppkey, t_0.ps_comment HAVING true;
CREATE MATERIALIZED VIEW m2 AS WITH with_0 AS (SELECT (sq_3.col_0 - (INTERVAL '-305158')) AS col_0, sq_3.col_0 AS col_1 FROM (SELECT TIME '04:10:09' AS col_0, ((SMALLINT '-32768') - t_1.reserve) AS col_1, max(TIMESTAMP '2022-03-05 05:10:09') AS col_2 FROM auction AS t_1 FULL JOIN customer AS t_2 ON t_1.extra = t_2.c_mktsegment AND (t_2.c_custkey <> (FLOAT '91')) GROUP BY t_1.reserve, t_2.c_mktsegment, t_1.date_time, t_1.item_name, t_2.c_name, t_1.category HAVING true) AS sq_3 GROUP BY sq_3.col_0) SELECT TIMESTAMP '2022-03-06 05:09:09' AS col_0, ((SMALLINT '166') & (SMALLINT '1')) AS col_1, (SMALLINT '0') AS col_2, TIME '05:09:09' AS col_3 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m3 AS SELECT t_0.ps_comment AS col_0 FROM partsupp AS t_0 RIGHT JOIN m1 AS t_1 ON t_0.ps_suppkey = t_1.col_0 AND (((REAL '805') / (REAL '869')) <= (coalesce(NULL, NULL, NULL, NULL, (INT '365'), NULL, NULL, NULL, NULL, NULL))) GROUP BY t_0.ps_comment, t_0.ps_suppkey, t_0.ps_partkey HAVING false;
CREATE MATERIALIZED VIEW m4 AS SELECT (substr('XfMctH1QCp', min((INT '869')))) AS col_0, t_0.col_0 AS col_1 FROM m3 AS t_0 GROUP BY t_0.col_0 HAVING false;
CREATE MATERIALIZED VIEW m5 AS SELECT sq_1.col_0 AS col_0, (DATE '2022-03-06' - (INTERVAL '0')) AS col_1, sq_1.col_0 AS col_2 FROM (SELECT tumble_0.date_time AS col_0, min((replace(tumble_0.name, (TRIM(tumble_0.state)), 'YCVZeYlZ6F'))) FILTER(WHERE (false)) AS col_1, tumble_0.email_address AS col_2, 'ZGEvngYxwe' AS col_3 FROM tumble(person, person.date_time, INTERVAL '66') AS tumble_0 WHERE (tumble_0.date_time = (tumble_0.date_time + (INTERVAL '60'))) GROUP BY tumble_0.date_time, tumble_0.state, tumble_0.city, tumble_0.email_address) AS sq_1 WHERE true GROUP BY sq_1.col_0;
CREATE MATERIALIZED VIEW m6 AS SELECT (TIMESTAMP '2022-03-06 05:10:10') AS col_0, t_0.c9 AS col_1 FROM alltypes2 AS t_0 FULL JOIN m4 AS t_1 ON t_0.c9 = t_1.col_1 GROUP BY t_0.c14, t_1.col_0, t_0.c5, t_0.c9, t_0.c8, t_0.c10 HAVING true;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.col_0 AS col_0 FROM m4 AS t_0 JOIN alltypes1 AS t_1 ON t_0.col_1 = t_1.c9 GROUP BY t_1.c5, t_1.c9, t_0.col_0, t_1.c6, t_1.c1;
CREATE MATERIALIZED VIEW m8 AS SELECT t_1.initial_bid AS col_0, t_1.date_time AS col_1 FROM person AS t_0 LEFT JOIN auction AS t_1 ON t_0.id = t_1.seller WHERE (false) GROUP BY t_1.extra, t_0.email_address, t_1.initial_bid, t_0.credit_card, t_1.date_time, t_0.city, t_1.category, t_1.seller, t_0.date_time;
CREATE MATERIALIZED VIEW m9 AS SELECT 'bOwpASpocN' AS col_0, t_1.col_0 AS col_1, t_1.col_0 AS col_2, 'WMr0LSJUxx' AS col_3 FROM m6 AS t_0 FULL JOIN m7 AS t_1 ON t_0.col_1 = t_1.col_0 GROUP BY t_1.col_0, t_0.col_1;
