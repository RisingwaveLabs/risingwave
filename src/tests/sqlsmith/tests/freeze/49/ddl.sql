CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT ((INTERVAL '3600') + DATE '2022-11-21') AS col_0, 'paN7RCTrqt' AS col_1 FROM hop(person, person.date_time, INTERVAL '60', INTERVAL '4560') AS hop_0 WHERE false GROUP BY hop_0.name, hop_0.city, hop_0.id, hop_0.email_address;
CREATE MATERIALIZED VIEW m1 AS SELECT TIMESTAMP '2022-11-20 13:54:25' AS col_0, (OVERLAY(t_0.item_name PLACING t_0.item_name FROM (INT '906') FOR (INT '1'))) AS col_1, 'xZX9T9ee7f' AS col_2 FROM auction AS t_0 GROUP BY t_0.reserve, t_0.date_time, t_0.expires, t_0.id, t_0.item_name;
CREATE MATERIALIZED VIEW m2 AS SELECT (to_char((TIMESTAMP '2022-11-21 10:26:57'), 'uQn2ZKZu1B')) AS col_0, (TIMESTAMP '2022-11-20 07:59:26') AS col_1, hop_0.col_0 AS col_2, TIMESTAMP '2022-11-14 13:54:26' AS col_3 FROM hop(m0, m0.col_0, INTERVAL '3600', INTERVAL '345600') AS hop_0 GROUP BY hop_0.col_0 HAVING false;
CREATE MATERIALIZED VIEW m3 AS SELECT ((BIGINT '386') + (BIGINT '-7926449271864774637')) AS col_0, t_0.s_acctbal AS col_1 FROM supplier AS t_0 LEFT JOIN supplier AS t_1 ON t_0.s_suppkey = t_1.s_suppkey AND true GROUP BY t_0.s_acctbal;
CREATE MATERIALIZED VIEW m4 AS SELECT t_0.extra AS col_0 FROM bid AS t_0 WHERE ((INT '109') >= (0)) GROUP BY t_0.extra, t_0.date_time;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT TIME '13:54:27' AS col_0, (substr((split_part(hop_1.col_1, hop_1.col_1, (SMALLINT '916'))), ((INT '503') + (INT '589')), (INT '866'))) AS col_1 FROM hop(m1, m1.col_0, INTERVAL '86400', INTERVAL '4665600') AS hop_1 GROUP BY hop_1.col_1 HAVING false) SELECT (FLOAT '564') AS col_0, (OVERLAY('YWR2yReUvg' PLACING 'plPSeS5gdo' FROM (INT '347') FOR (INT '959'))) AS col_1 FROM with_0 WHERE false;
CREATE MATERIALIZED VIEW m6 AS SELECT TIME '13:54:27' AS col_0, t_1.s_acctbal AS col_1, (INT '2147483647') AS col_2, (INT '-370899743') AS col_3 FROM customer AS t_0 LEFT JOIN supplier AS t_1 ON t_0.c_mktsegment = t_1.s_phone WHERE false GROUP BY t_1.s_acctbal, t_0.c_comment, t_1.s_nationkey HAVING false;
CREATE MATERIALIZED VIEW m7 AS WITH with_0 AS (SELECT t_1.s_phone AS col_0, t_1.s_phone AS col_1, t_1.s_acctbal AS col_2, t_2.col_1 AS col_3 FROM supplier AS t_1 LEFT JOIN m2 AS t_2 ON t_1.s_name = t_2.col_0 GROUP BY t_2.col_1, t_1.s_phone, t_1.s_acctbal, t_2.col_2, t_2.col_3, t_1.s_address) SELECT (SMALLINT '29') AS col_0, (1) AS col_1, TIME '13:53:28' AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m9 AS SELECT tumble_0.expires AS col_0, (INTERVAL '-902045') AS col_1 FROM tumble(auction, auction.date_time, INTERVAL '58') AS tumble_0 GROUP BY tumble_0.expires;
