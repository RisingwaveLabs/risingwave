CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_1.l_orderkey AS col_0, 'TWIKMDcKHX' AS col_1 FROM lineitem AS t_0 FULL JOIN lineitem AS t_1 ON t_0.l_discount = t_1.l_tax AND true GROUP BY t_1.l_returnflag, t_0.l_suppkey, t_0.l_orderkey, t_1.l_tax, t_0.l_returnflag, t_0.l_partkey, t_0.l_linenumber, t_0.l_receiptdate, t_1.l_shipmode, t_1.l_linenumber, t_1.l_orderkey HAVING ((SMALLINT '265') < (SMALLINT '965'));
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.p_comment AS col_0, t_0.p_name AS col_1 FROM part AS t_0 WHERE false GROUP BY t_0.p_retailprice, t_0.p_name, t_0.p_container, t_0.p_size, t_0.p_comment;
CREATE MATERIALIZED VIEW m2 AS SELECT (TRIM(BOTH t_0.p_container FROM t_0.p_container)) AS col_0, t_0.p_container AS col_1, (md5((coalesce(NULL, NULL, NULL, NULL, (substr(t_0.p_container, (INT '602'), (INT '204643670'))), NULL, NULL, NULL, NULL, NULL)))) AS col_2 FROM part AS t_0 JOIN bid AS t_1 ON t_0.p_type = t_1.extra GROUP BY t_0.p_container;
CREATE MATERIALIZED VIEW m3 AS SELECT (SMALLINT '37') AS col_0 FROM alltypes1 AS t_0 FULL JOIN nation AS t_1 ON t_0.c3 = t_1.n_regionkey WHERE CAST((INT '820') AS BOOLEAN) GROUP BY t_0.c8;
CREATE MATERIALIZED VIEW m4 AS WITH with_0 AS (WITH with_1 AS (SELECT (BIGINT '-1395439889042602294') AS col_0, ((29) * ((INTERVAL '3600'))) AS col_1, (TRIM(BOTH sq_4.col_0 FROM sq_4.col_0)) AS col_2 FROM (SELECT (TRIM((TRIM(TRAILING sq_3.col_0 FROM (upper(sq_3.col_0)))))) AS col_0, sq_3.col_0 AS col_1 FROM (SELECT t_2.col_0 AS col_0, t_2.col_0 AS col_1 FROM m2 AS t_2 GROUP BY t_2.col_0 HAVING true) AS sq_3 GROUP BY sq_3.col_0 HAVING true) AS sq_4 WHERE true GROUP BY sq_4.col_0) SELECT (INT '0') AS col_0, true AS col_1, ((SMALLINT '724') >> (INT '681')) AS col_2 FROM with_1) SELECT TIMESTAMP '2022-10-27 04:31:14' AS col_0 FROM with_0;
CREATE MATERIALIZED VIEW m5 AS SELECT (BIGINT '17') AS col_0, ARRAY[(BIGINT '566')] AS col_1, ARRAY['1k1jF2AAXz'] AS col_2, t_0.s_phone AS col_3 FROM supplier AS t_0 LEFT JOIN alltypes2 AS t_1 ON t_0.s_address = t_1.c9 WHERE t_1.c1 GROUP BY t_1.c10, t_1.c15, t_1.c3, t_1.c2, t_0.s_phone, t_1.c4, t_1.c16, t_0.s_acctbal, t_1.c9 HAVING true;
CREATE MATERIALIZED VIEW m6 AS SELECT t_1.c11 AS col_0, t_0.p_brand AS col_1, t_1.c16 AS col_2, (t_1.c8 + (- (char_length('oRHBK4RTbT')))) AS col_3 FROM part AS t_0 LEFT JOIN alltypes2 AS t_1 ON t_0.p_retailprice = t_1.c7 WHERE t_1.c1 GROUP BY t_0.p_container, t_0.p_brand, t_0.p_name, t_1.c8, t_1.c11, t_1.c7, t_1.c16, t_1.c3, t_1.c4, t_0.p_size HAVING false;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.p_name AS col_0, (TRIM(LEADING t_1.col_0 FROM (substr(t_1.col_0, (INT '0'))))) AS col_1, t_1.col_0 AS col_2, t_1.col_0 AS col_3 FROM part AS t_0 JOIN m1 AS t_1 ON t_0.p_container = t_1.col_0 GROUP BY t_0.p_name, t_1.col_0 HAVING false;
CREATE MATERIALIZED VIEW m8 AS SELECT (724) AS col_0, tumble_0.channel AS col_1, '4MNNzYQkaA' AS col_2 FROM tumble(bid, bid.date_time, INTERVAL '68') AS tumble_0 WHERE CAST((INT '429') AS BOOLEAN) GROUP BY tumble_0.url, tumble_0.price, tumble_0.channel, tumble_0.auction HAVING CAST(((INT '721') & (SMALLINT '169')) AS BOOLEAN);
CREATE MATERIALIZED VIEW m9 AS SELECT t_0.ps_comment AS col_0 FROM partsupp AS t_0 WHERE false GROUP BY t_0.ps_supplycost, t_0.ps_comment HAVING (t_0.ps_supplycost < (BIGINT '1'));
