CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT (OVERLAY((TRIM('eTWFqqVmft')) PLACING t_0.s_comment FROM (INT '890'))) AS col_0, (split_part('2sJUrzKdQf', (split_part(t_1.extra, t_0.s_comment, (INT '0'))), (INT '12981896'))) AS col_1, 'Ck3Kgyr1Am' AS col_2, TIMESTAMP '2022-09-12 10:55:33' AS col_3 FROM supplier AS t_0 FULL JOIN bid AS t_1 ON t_0.s_address = t_1.extra AND true WHERE true GROUP BY t_1.extra, t_0.s_comment HAVING false;
CREATE MATERIALIZED VIEW m1 AS SELECT true AS col_0 FROM hop(alltypes1, alltypes1.c11, INTERVAL '588977', INTERVAL '588977') AS hop_0 WHERE hop_0.c1 GROUP BY hop_0.c3, hop_0.c15, hop_0.c2, hop_0.c4;
CREATE MATERIALIZED VIEW m2 AS SELECT '9HAjsIVk1t' AS col_0 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '1') AS tumble_0 GROUP BY tumble_0.c15, tumble_0.c2, tumble_0.c16, tumble_0.c9;
CREATE MATERIALIZED VIEW m3 AS SELECT TIMESTAMP '2022-09-11 10:55:34' AS col_0, (INTERVAL '-604800') AS col_1, TIMESTAMP '2022-09-12 10:55:33' AS col_2 FROM m0 AS t_0 FULL JOIN region AS t_1 ON t_0.col_2 = t_1.r_comment WHERE true GROUP BY t_0.col_3;
CREATE MATERIALIZED VIEW m4 AS SELECT (SMALLINT '30') AS col_0, (CASE WHEN false THEN TIMESTAMP '2022-09-12 10:55:35' WHEN true THEN (CASE WHEN false THEN t_1.date_time WHEN true THEN (((INT '119') + DATE '2022-09-12') - (INTERVAL '3600')) WHEN (true) THEN t_1.date_time ELSE t_1.date_time END) ELSE t_1.date_time END) AS col_1, t_0.r_regionkey AS col_2 FROM region AS t_0 LEFT JOIN bid AS t_1 ON t_0.r_comment = t_1.channel AND true WHERE true GROUP BY t_0.r_regionkey, t_1.auction, t_1.bidder, t_1.price, t_1.date_time;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT sq_6.col_0 AS col_0, sq_6.col_0 AS col_1, sq_6.col_0 AS col_2 FROM (SELECT ((SMALLINT '0')) AS col_0 FROM (SELECT (INTERVAL '-60') AS col_0, sq_4.col_0 AS col_1, sq_4.col_0 AS col_2 FROM (SELECT t_3.col_0 AS col_0, t_3.col_0 AS col_1, t_3.col_0 AS col_2, (lower((OVERLAY(t_3.col_0 PLACING t_3.col_0 FROM (INT '-1118304811') FOR (INT '712750634'))))) AS col_3 FROM m2 AS t_3 GROUP BY t_3.col_0 HAVING (((REAL '-2147483648') + (REAL '495')) >= (BIGINT '4206685591024297816'))) AS sq_4 GROUP BY sq_4.col_3, sq_4.col_0 HAVING true) AS sq_5 WHERE true GROUP BY sq_5.col_0, sq_5.col_2) AS sq_6 WHERE false GROUP BY sq_6.col_0 HAVING false) SELECT '9YL1TuG9Io' AS col_0, 'J2leZck4p1' AS col_1, (FLOAT '-1846153630') AS col_2 FROM with_0;
CREATE MATERIALIZED VIEW m6 AS SELECT (md5('CL54X2sr0u')) AS col_0 FROM bid AS t_0 JOIN nation AS t_1 ON t_0.url = t_1.n_name GROUP BY t_1.n_name, t_0.url, t_0.extra, t_1.n_comment HAVING false;
CREATE MATERIALIZED VIEW m7 AS SELECT (sq_2.col_0 & (SMALLINT '437')) AS col_0, sq_2.col_0 AS col_1 FROM (SELECT (SMALLINT '140') AS col_0, t_0.date_time AS col_1 FROM auction AS t_0 JOIN part AS t_1 ON t_0.item_name = t_1.p_mfgr WHERE true GROUP BY t_0.id, t_0.item_name, t_1.p_container, t_0.date_time, t_1.p_size, t_0.category, t_1.p_partkey, t_1.p_brand) AS sq_2 GROUP BY sq_2.col_0;
CREATE MATERIALIZED VIEW m8 AS SELECT t_2.extra AS col_0, (TRIM(BOTH t_2.extra FROM t_2.city)) AS col_1, t_2.city AS col_2 FROM person AS t_2 GROUP BY t_2.extra, t_2.city HAVING ((SMALLINT '173') < (SMALLINT '791'));
CREATE MATERIALIZED VIEW m9 AS SELECT TIME '06:53:12' AS col_0 FROM tumble(bid, bid.date_time, INTERVAL '38') AS tumble_0 GROUP BY tumble_0.auction HAVING max((false)) FILTER(WHERE true);
