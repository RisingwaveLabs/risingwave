CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_1.extra AS col_0, max(('QdtDJx4zyv')) FILTER(WHERE false) AS col_1 FROM orders AS t_0 JOIN person AS t_1 ON t_0.o_clerk = t_1.extra GROUP BY t_0.o_orderkey, t_1.state, t_0.o_shippriority, t_1.credit_card, t_1.extra HAVING false;
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT (BIGINT '237') AS col_0, (INT '189') AS col_1, (INT '534') AS col_2 FROM lineitem AS t_1 LEFT JOIN bid AS t_2 ON t_1.l_returnflag = t_2.channel WHERE false GROUP BY t_2.price, t_1.l_partkey) SELECT (FLOAT '497') AS col_0, (INTERVAL '86400') AS col_1, (BIGINT '371') AS col_2 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m3 AS SELECT t_0.o_orderstatus AS col_0, t_1.p_type AS col_1, t_0.o_orderpriority AS col_2 FROM orders AS t_0 LEFT JOIN part AS t_1 ON t_0.o_orderpriority = t_1.p_type AND true WHERE true GROUP BY t_0.o_orderstatus, t_0.o_orderpriority, t_1.p_type;
CREATE MATERIALIZED VIEW m4 AS SELECT 'O0X36LY0DV' AS col_0 FROM supplier AS t_0 LEFT JOIN orders AS t_1 ON t_0.s_suppkey = t_1.o_shippriority AND true GROUP BY t_1.o_clerk, t_0.s_comment, t_1.o_comment;
CREATE MATERIALIZED VIEW m5 AS SELECT tumble_0.extra AS col_0 FROM tumble(bid, bid.date_time, INTERVAL '65') AS tumble_0 GROUP BY tumble_0.channel, tumble_0.extra, tumble_0.price, tumble_0.date_time;
CREATE MATERIALIZED VIEW m6 AS SELECT (FLOAT '187') AS col_0, t_0.l_partkey AS col_1, t_0.l_shipinstruct AS col_2, 'NBdmcMKXor' AS col_3 FROM lineitem AS t_0 FULL JOIN partsupp AS t_1 ON t_0.l_suppkey = t_1.ps_suppkey AND true WHERE (false) GROUP BY t_0.l_shipinstruct, t_0.l_partkey, t_0.l_shipmode, t_0.l_discount;
CREATE MATERIALIZED VIEW m7 AS SELECT string_agg((TRIM(t_0.col_1)), t_0.col_1) AS col_0, (BIGINT '0') AS col_1, t_0.col_1 AS col_2 FROM m0 AS t_0 GROUP BY t_0.col_1 HAVING true;
CREATE MATERIALIZED VIEW m8 AS SELECT hop_0.c11 AS col_0, hop_0.c16 AS col_1 FROM hop(alltypes1, alltypes1.c11, INTERVAL '604800', INTERVAL '46569600') AS hop_0 GROUP BY hop_0.c14, hop_0.c16, hop_0.c11 HAVING true;
CREATE MATERIALIZED VIEW m9 AS SELECT (hop_0.id % ((SMALLINT '994') / ((BIGINT '-72979361426509364') - hop_0.initial_bid))) AS col_0 FROM hop(auction, auction.expires, INTERVAL '3600', INTERVAL '324000') AS hop_0 WHERE false GROUP BY hop_0.description, hop_0.id, hop_0.item_name, hop_0.reserve, hop_0.initial_bid;
