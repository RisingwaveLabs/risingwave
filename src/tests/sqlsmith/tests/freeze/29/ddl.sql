CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT tumble_0.city AS col_0, tumble_0.email_address AS col_1, tumble_0.city AS col_2, '6AIwV53bhB' AS col_3 FROM tumble(person, person.date_time, INTERVAL '7') AS tumble_0 GROUP BY tumble_0.email_address, tumble_0.name, tumble_0.city, tumble_0.extra;
CREATE MATERIALIZED VIEW m1 AS SELECT t_1.state AS col_0, t_1.state AS col_1 FROM auction AS t_0 JOIN person AS t_1 ON t_0.expires = t_1.date_time GROUP BY t_1.date_time, t_0.category, t_0.date_time, t_1.state, t_0.expires, t_1.id, t_0.id, t_1.extra, t_0.item_name HAVING false;
CREATE MATERIALIZED VIEW m2 AS SELECT hop_0.description AS col_0, hop_0.date_time AS col_1, hop_0.date_time AS col_2 FROM hop(auction, auction.expires, INTERVAL '3600', INTERVAL '100800') AS hop_0 GROUP BY hop_0.description, hop_0.date_time;
CREATE MATERIALIZED VIEW m3 AS SELECT t_0.c11 AS col_0, ARRAY[(INT '2147483647'), (INT '656'), (INT '966')] AS col_1 FROM alltypes2 AS t_0 LEFT JOIN m0 AS t_1 ON t_0.c9 = t_1.col_3 AND t_0.c1 GROUP BY t_0.c13, t_0.c7, t_0.c5, t_0.c15, t_0.c11, t_0.c3, t_0.c2 HAVING ((DATE '2022-07-24' - (t_0.c3 - (min((SMALLINT '-32768')) FILTER(WHERE false) << t_0.c2))) > (DATE '2022-07-24' - t_0.c3));
CREATE MATERIALIZED VIEW m4 AS SELECT (TIMESTAMP '2022-07-24 11:39:47') AS col_0, t_1.col_0 AS col_1 FROM m3 AS t_0 FULL JOIN m3 AS t_1 ON t_0.col_1 = t_1.col_1 AND CAST((INT '817') AS BOOLEAN) GROUP BY t_0.col_1, t_1.col_0;
CREATE MATERIALIZED VIEW m5 AS SELECT t_0.n_name AS col_0, t_0.n_name AS col_1, (replace('TOVE1qTxFk', t_0.n_name, t_0.n_name)) AS col_2, max((OVERLAY(t_0.n_name PLACING (TRIM(BOTH 'AyrT6GdsgH' FROM t_0.n_name)) FROM t_0.n_regionkey))) FILTER(WHERE true) AS col_3 FROM nation AS t_0 GROUP BY t_0.n_name HAVING true;
CREATE MATERIALIZED VIEW m6 AS WITH with_0 AS (SELECT hop_1.col_0 AS col_0, hop_1.col_0 AS col_1, hop_1.col_0 AS col_2, (DATE '2022-07-23' - (INTERVAL '761871')) AS col_3 FROM hop(m3, m3.col_0, INTERVAL '60', INTERVAL '2760') AS hop_1 GROUP BY hop_1.col_0) SELECT 'oqrFHaxXUF' AS col_0 FROM with_0;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.col_0 AS col_0 FROM m6 AS t_0 WHERE true GROUP BY t_0.col_0 HAVING false;
CREATE MATERIALIZED VIEW m8 AS SELECT t_1.col_1 AS col_0, t_1.col_1 AS col_1 FROM alltypes2 AS t_0 FULL JOIN m4 AS t_1 ON t_0.c11 = t_1.col_1 GROUP BY t_0.c13, t_1.col_1 HAVING true;
CREATE MATERIALIZED VIEW m9 AS SELECT t_1.p_name AS col_0, (294) AS col_1, 'ZUC4GRDLp1' AS col_2 FROM m1 AS t_0 RIGHT JOIN part AS t_1 ON t_0.col_0 = t_1.p_type AND true WHERE true GROUP BY t_1.p_name HAVING false;
