CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT (CASE WHEN ((SMALLINT '29')) NOT IN ((SMALLINT '300'), (SMALLINT '-20694'), (SMALLINT '32767'), (SMALLINT '0'), (SMALLINT '187'), ((~ (SMALLINT '466')) << CAST(true AS INT)), (SMALLINT '895'), (SMALLINT '849'), min((tumble_0.c2 * (SMALLINT '141'))), (SMALLINT '228')) THEN CAST(NULL AS STRUCT<a INT>) WHEN ((SMALLINT '162') <= (BIGINT '286')) THEN tumble_0.c14 ELSE tumble_0.c14 END) AS col_0, CAST(NULL AS STRUCT<a INT>) AS col_1, (FLOAT '414') AS col_2, tumble_0.c10 AS col_3 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '66') AS tumble_0 GROUP BY tumble_0.c5, tumble_0.c10, tumble_0.c14 HAVING true;
CREATE MATERIALIZED VIEW m1 AS SELECT (BIGINT '-9223372036854775808') AS col_0, (t_0.expires - (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, (INTERVAL '604800')))) AS col_1, (BIGINT '983') AS col_2 FROM auction AS t_0 GROUP BY t_0.reserve, t_0.expires, t_0.initial_bid, t_0.id;
CREATE MATERIALIZED VIEW m2 AS WITH with_0 AS (WITH with_1 AS (SELECT t_3.p_type AS col_0, 'P5ymR26Kyg' AS col_1, t_2.c_address AS col_2 FROM customer AS t_2 JOIN part AS t_3 ON t_2.c_phone = t_3.p_brand AND true GROUP BY t_3.p_partkey, t_2.c_mktsegment, t_3.p_mfgr, t_3.p_comment, t_2.c_address, t_3.p_retailprice, t_2.c_custkey, t_3.p_brand, t_3.p_type) SELECT (SMALLINT '213') AS col_0, false AS col_1, (CASE WHEN true THEN TIMESTAMP '2022-01-15 07:11:41' WHEN (true) THEN TIMESTAMP '2022-01-10 15:24:49' ELSE TIMESTAMP '2022-01-17 14:24:49' END) AS col_2 FROM with_1 WHERE true) SELECT (FLOAT '527') AS col_0, (TIMESTAMP '2022-01-17 14:24:49') AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m3 AS SELECT (TRIM(BOTH t_0.l_returnflag FROM ('l7g1nUHooq'))) AS col_0, t_0.l_returnflag AS col_1, max(t_0.l_receiptdate) AS col_2 FROM lineitem AS t_0 GROUP BY t_0.l_returnflag, t_0.l_partkey;
CREATE MATERIALIZED VIEW m4 AS SELECT (TIMESTAMP '2022-01-17 15:23:50') AS col_0, (BIGINT '0') AS col_1 FROM alltypes1 AS t_0 GROUP BY t_0.c4, t_0.c16, t_0.c9, t_0.c5, t_0.c14, t_0.c11, t_0.c15 HAVING true;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT 'EcGguejRTg' AS col_0, t_2.o_orderstatus AS col_1, (TRIM((TRIM(TRAILING t_2.o_orderstatus FROM t_2.o_orderstatus)))) AS col_2 FROM supplier AS t_1 FULL JOIN orders AS t_2 ON t_1.s_acctbal = t_2.o_totalprice GROUP BY t_2.o_orderstatus HAVING true) SELECT TIME '15:24:50' AS col_0 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m6 AS SELECT (SMALLINT '65') AS col_0, (INT '607') AS col_1 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '33') AS tumble_0 GROUP BY tumble_0.c2;
CREATE MATERIALIZED VIEW m7 AS SELECT hop_0.col_2 AS col_0, hop_0.col_2 AS col_1, hop_0.col_2 AS col_2 FROM hop(m1, m1.col_1, INTERVAL '1', INTERVAL '91') AS hop_0 WHERE true GROUP BY hop_0.col_2 HAVING true;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT hop_1.c1 AS col_0, hop_1.c1 AS col_1 FROM hop(alltypes1, alltypes1.c11, INTERVAL '256003', INTERVAL '5376063') AS hop_1 GROUP BY hop_1.c1 HAVING hop_1.c1) SELECT (113) AS col_0, (- (REAL '769')) AS col_1, (FLOAT '669') AS col_2 FROM with_0 WHERE false;
CREATE MATERIALIZED VIEW m9 AS SELECT true AS col_0, t_2.col_0 AS col_1, ((INTERVAL '604800') + TIMESTAMP '2022-01-17 15:24:52') AS col_2 FROM m4 AS t_2 GROUP BY t_2.col_0 HAVING max(false) FILTER(WHERE ((concat_ws('QakhyxmHTg', 'ea5n05Kpkv', 'CXJwhM7U4r')) IS NOT NULL));
