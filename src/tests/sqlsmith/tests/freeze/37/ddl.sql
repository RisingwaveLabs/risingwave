CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT 'jLnGccuhja' AS col_0, (TIME '00:30:52' + DATE '2022-04-29') AS col_1 FROM hop(auction, auction.expires, INTERVAL '141773', INTERVAL '7372196') AS hop_0 WHERE (true) GROUP BY hop_0.seller, hop_0.date_time;
CREATE MATERIALIZED VIEW m1 AS SELECT t_0.ps_supplycost AS col_0, t_0.ps_supplycost AS col_1, ((BIGINT '1') + (14)) AS col_2 FROM partsupp AS t_0 WHERE (CASE WHEN (true) THEN false ELSE true END) GROUP BY t_0.ps_supplycost;
CREATE MATERIALIZED VIEW m2 AS SELECT (736) AS col_0, (TRIM(t_0.o_clerk)) AS col_1 FROM orders AS t_0 LEFT JOIN partsupp AS t_1 ON t_0.o_shippriority = t_1.ps_suppkey WHERE false GROUP BY t_0.o_shippriority, t_1.ps_comment, t_1.ps_availqty, t_1.ps_partkey, t_0.o_clerk, t_0.o_comment HAVING true;
CREATE MATERIALIZED VIEW m3 AS SELECT t_0.channel AS col_0, t_0.channel AS col_1, 'J067tWGvwA' AS col_2, 'do8FFmBxAo' AS col_3 FROM bid AS t_0 WHERE false GROUP BY t_0.extra, t_0.channel HAVING true;
CREATE MATERIALIZED VIEW m4 AS SELECT 'x8FZW5J9kr' AS col_0, (FLOAT '697') AS col_1, t_1.col_0 AS col_2 FROM partsupp AS t_0 FULL JOIN m3 AS t_1 ON t_0.ps_comment = t_1.col_2 WHERE false GROUP BY t_0.ps_suppkey, t_1.col_0, t_1.col_1, t_0.ps_comment HAVING true;
CREATE MATERIALIZED VIEW m5 AS SELECT (CASE WHEN false THEN t_0.city WHEN true THEN t_0.city WHEN true THEN t_0.city ELSE (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, t_0.city, NULL, NULL)) END) AS col_0, 'AgwWd3mH60' AS col_1, TIME '16:23:06' AS col_2, (INT '590') AS col_3 FROM person AS t_0 GROUP BY t_0.city;
CREATE MATERIALIZED VIEW m7 AS SELECT tumble_0.c2 AS col_0, false AS col_1, (FLOAT '0') AS col_2 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '12') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c2, tumble_0.c14, tumble_0.c3, tumble_0.c4, tumble_0.c5, tumble_0.c1, tumble_0.c8, tumble_0.c6 HAVING (true < tumble_0.c1);
CREATE MATERIALIZED VIEW m9 AS WITH with_0 AS (SELECT 'Udgf6Didc8' AS col_0, t_1.col_2 AS col_1, min(t_1.col_2) AS col_2 FROM m7 AS t_1 GROUP BY t_1.col_1, t_1.col_2) SELECT TIMESTAMP '2022-04-28 00:31:55' AS col_0, TIMESTAMP '2022-04-22 00:31:55' AS col_1 FROM with_0;
