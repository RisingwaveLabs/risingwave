CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_0.extra AS col_0 FROM bid AS t_0 WHERE ((FLOAT '477') <> (594)) GROUP BY t_0.channel, t_0.extra, t_0.auction;
CREATE MATERIALIZED VIEW m1 AS SELECT sq_2.col_0 AS col_0, max(sq_2.col_0) AS col_1, sq_2.col_0 AS col_2 FROM (SELECT (((INT '-2147483648') + sq_1.col_1) - (INT '917')) AS col_0, sq_1.col_1 AS col_1, sq_1.col_1 AS col_2, sq_1.col_1 AS col_3 FROM (SELECT t_0.c15 AS col_0, t_0.c8 AS col_1 FROM alltypes2 AS t_0 GROUP BY t_0.c8, t_0.c13, t_0.c15 HAVING true) AS sq_1 WHERE true GROUP BY sq_1.col_1) AS sq_2 GROUP BY sq_2.col_0 HAVING false;
CREATE MATERIALIZED VIEW m2 AS WITH with_0 AS (SELECT ((((SMALLINT '164') % t_1.r_regionkey) % t_1.r_regionkey) << t_1.r_regionkey) AS col_0, (REAL '26') AS col_1 FROM region AS t_1 GROUP BY t_1.r_regionkey) SELECT false AS col_0, (REAL '726') AS col_1, (TIMESTAMP '2022-03-18 19:24:01') AS col_2, (SMALLINT '907') AS col_3 FROM with_0;
CREATE MATERIALIZED VIEW m3 AS SELECT tumble_0.id AS col_0, tumble_0.id AS col_1 FROM tumble(auction, auction.date_time, INTERVAL '19') AS tumble_0 WHERE false GROUP BY tumble_0.id HAVING CAST((char_length('mvlVNkfqXT')) AS BOOLEAN);
CREATE MATERIALIZED VIEW m4 AS SELECT t_2.n_comment AS col_0, t_2.n_nationkey AS col_1, (REAL '679') AS col_2 FROM nation AS t_2 WHERE false GROUP BY t_2.n_comment, t_2.n_nationkey;
CREATE MATERIALIZED VIEW m5 AS SELECT tumble_0.col_2 AS col_0, CAST(true AS INT) AS col_1, (BIGINT '268') AS col_2 FROM tumble(m2, m2.col_2, INTERVAL '95') AS tumble_0 GROUP BY tumble_0.col_2 HAVING false;
CREATE MATERIALIZED VIEW m6 AS WITH with_0 AS (SELECT (TIMESTAMP '2022-03-18 20:24:01') AS col_0, (BIGINT '512') AS col_1, TIMESTAMP '2022-03-17 20:24:02' AS col_2, ((REAL '729')) AS col_3 FROM tumble(m5, m5.col_0, INTERVAL '31') AS tumble_1 GROUP BY tumble_1.col_0, tumble_1.col_2) SELECT DATE '2022-03-18' AS col_0, (437) AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m7 AS WITH with_0 AS (SELECT (TRIM(tumble_1.extra)) AS col_0, tumble_1.extra AS col_1, '8lPGTVOxst' AS col_2 FROM tumble(person, person.date_time, INTERVAL '45') AS tumble_1 GROUP BY tumble_1.date_time, tumble_1.id, tumble_1.email_address, tumble_1.extra HAVING false) SELECT 'hD6pXCjjIx' AS col_0, (SMALLINT '-7236') AS col_1 FROM with_0 WHERE (true);
CREATE MATERIALIZED VIEW m8 AS SELECT ((INTERVAL '60') + ((DATE '2022-03-18' - (INT '1')) + ((INTERVAL '-3600') + TIME '20:24:03'))) AS col_0, hop_0.extra AS col_1, hop_0.initial_bid AS col_2 FROM hop(auction, auction.expires, INTERVAL '604800', INTERVAL '56246400') AS hop_0 WHERE false GROUP BY hop_0.date_time, hop_0.expires, hop_0.initial_bid, hop_0.extra;
CREATE MATERIALIZED VIEW m9 AS SELECT t_1.s_acctbal AS col_0, (TRIM(t_1.s_phone)) AS col_1, (TRIM(t_1.s_phone)) AS col_2 FROM bid AS t_0 FULL JOIN supplier AS t_1 ON t_0.url = t_1.s_name AND true WHERE true GROUP BY t_1.s_suppkey, t_0.price, t_1.s_acctbal, t_1.s_phone;
