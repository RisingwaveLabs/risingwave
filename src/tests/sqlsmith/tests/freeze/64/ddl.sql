CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT tumble_0.c1 AS col_0, ((FLOAT '424') <> (BIGINT '961')) AS col_1, tumble_0.c1 AS col_2, tumble_0.c1 AS col_3 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '20') AS tumble_0 WHERE (false) GROUP BY tumble_0.c1;
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT tumble_1.state AS col_0, '9MEJ9urW73' AS col_1, tumble_1.city AS col_2 FROM tumble(person, person.date_time, INTERVAL '99') AS tumble_1 WHERE (false) GROUP BY tumble_1.date_time, tumble_1.state, tumble_1.extra, tumble_1.city HAVING ((FLOAT '672') <= (INT '-2147483648'))) SELECT false AS col_0, ARRAY[(FLOAT '240'), (FLOAT '45099125')] AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m2 AS SELECT (TIME '15:04:37' >= TIME '15:04:37') AS col_0 FROM alltypes1 AS t_0 JOIN partsupp AS t_1 ON t_0.c3 = t_1.ps_availqty WHERE (CASE WHEN t_0.c1 THEN ((((SMALLINT '736') # (t_0.c2 # t_0.c4)) + (t_0.c3 * t_0.c2)) > t_0.c3) WHEN t_0.c1 THEN t_0.c1 ELSE true END) GROUP BY t_0.c15, t_0.c5, t_0.c1, t_0.c13 HAVING t_0.c1;
CREATE MATERIALIZED VIEW m3 AS SELECT (substr(sq_2.col_0, (INT '45'), (INT '319'))) AS col_0, sq_2.col_0 AS col_1 FROM (SELECT (concat_ws((substr(t_1.item_name, (INT '357'), (INT '380'))), 'OgD7ImfczY', t_1.extra)) AS col_0 FROM lineitem AS t_0 FULL JOIN auction AS t_1 ON t_0.l_linestatus = t_1.item_name AND ((REAL '480') = (FLOAT '980')) GROUP BY t_1.item_name, t_1.extra, t_0.l_returnflag HAVING CAST((INT '396') AS BOOLEAN)) AS sq_2 WHERE true GROUP BY sq_2.col_0 HAVING true;
CREATE MATERIALIZED VIEW m4 AS SELECT DATE '2022-07-29' AS col_0, (lower('4U4YbyOTTt')) AS col_1 FROM m3 AS t_0 WHERE false GROUP BY t_0.col_1;
CREATE MATERIALIZED VIEW m5 AS SELECT sq_2.col_0 AS col_0, sq_2.col_0 AS col_1, (INT '2147483647') AS col_2 FROM (SELECT (t_1.ps_availqty + t_0.c4) AS col_0 FROM alltypes1 AS t_0 JOIN partsupp AS t_1 ON t_0.c7 = t_1.ps_supplycost AND t_0.c1 GROUP BY t_0.c4, t_0.c15, t_1.ps_availqty, t_0.c13, t_0.c5, t_0.c1, t_0.c10, t_0.c11 HAVING true) AS sq_2 GROUP BY sq_2.col_0;
CREATE MATERIALIZED VIEW m8 AS SELECT (INT '-2120133590') AS col_0, t_1.c_phone AS col_1, (REAL '135') AS col_2 FROM m4 AS t_0 JOIN customer AS t_1 ON t_0.col_1 = t_1.c_mktsegment GROUP BY t_0.col_1, t_1.c_phone, t_1.c_nationkey HAVING true;
CREATE MATERIALIZED VIEW m9 AS SELECT hop_0.category AS col_0, hop_0.extra AS col_1, (FLOAT '417') AS col_2, ((SMALLINT '901') + sum((SMALLINT '-6052')) FILTER(WHERE true)) AS col_3 FROM hop(auction, auction.date_time, INTERVAL '604800', INTERVAL '45964800') AS hop_0 GROUP BY hop_0.extra, hop_0.category, hop_0.item_name, hop_0.initial_bid HAVING false;
