CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT tumble_0.c1 AS col_0, ((FLOAT '424') <> (BIGINT '961')) AS col_1, tumble_0.c1 AS col_2, tumble_0.c1 AS col_3 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '20') AS tumble_0 WHERE (false) GROUP BY tumble_0.c1;
CREATE MATERIALIZED VIEW m1 AS WITH with_0 AS (SELECT tumble_1.extra AS col_0, 'nljrcwyMxV' AS col_1, '1qJuZ9MPp3' AS col_2 FROM tumble(person, person.date_time, INTERVAL '99') AS tumble_1 WHERE (TIME '14:04:36' IS NOT NULL) GROUP BY tumble_1.extra, tumble_1.credit_card, tumble_1.state) SELECT DATE '2022-07-29' AS col_0, (INTERVAL '0') AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m2 AS SELECT 'rDbAKRCQSe' AS col_0, 'ID3JO4ImgO' AS col_1 FROM person AS t_0 FULL JOIN nation AS t_1 ON t_0.state = t_1.n_name GROUP BY t_0.state, t_0.extra;
CREATE MATERIALIZED VIEW m3 AS SELECT (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, (upper(t_0.p_mfgr)), NULL)) AS col_0, t_0.p_name AS col_1, 'FXDyUd96hD' AS col_2 FROM part AS t_0 GROUP BY t_0.p_mfgr, t_0.p_partkey, t_0.p_brand, t_0.p_name HAVING false;
CREATE MATERIALIZED VIEW m4 AS SELECT t_1.c11 AS col_0 FROM m2 AS t_0 JOIN alltypes2 AS t_1 ON t_0.col_0 = t_1.c9 GROUP BY t_1.c5, t_1.c11, t_0.col_0, t_1.c9, t_1.c7, t_1.c8, t_1.c4, t_1.c2;
CREATE MATERIALIZED VIEW m5 AS SELECT t_1.l_comment AS col_0, 'OgD7ImfczY' AS col_1, 'xqCvUEdC8P' AS col_2 FROM nation AS t_0 FULL JOIN lineitem AS t_1 ON t_0.n_comment = t_1.l_returnflag WHERE true GROUP BY t_1.l_tax, t_1.l_shipinstruct, t_1.l_linestatus, t_1.l_comment, t_0.n_regionkey, t_1.l_linenumber, t_1.l_returnflag;
CREATE MATERIALIZED VIEW m6 AS SELECT (INTERVAL '1') AS col_0, t_1.p_size AS col_1 FROM orders AS t_0 RIGHT JOIN part AS t_1 ON t_0.o_orderpriority = t_1.p_name AND true GROUP BY t_0.o_totalprice, t_1.p_size, t_1.p_partkey, t_1.p_name, t_0.o_orderkey, t_1.p_comment, t_1.p_mfgr, t_0.o_orderstatus, t_1.p_type;
CREATE MATERIALIZED VIEW m7 AS SELECT 'DLgIIkboQI' AS col_0, (INT '762') AS col_1 FROM partsupp AS t_0 GROUP BY t_0.ps_supplycost, t_0.ps_comment, t_0.ps_availqty;
CREATE MATERIALIZED VIEW m8 AS SELECT (SMALLINT '616') AS col_0, ((INT '832') / sq_2.col_0) AS col_1 FROM (SELECT t_1.l_extendedprice AS col_0, t_1.l_extendedprice AS col_1, t_1.l_extendedprice AS col_2 FROM part AS t_0 JOIN lineitem AS t_1 ON t_0.p_mfgr = t_1.l_shipmode AND (((REAL '622') * (CASE WHEN false THEN (REAL '745') WHEN ((FLOAT '624') > (REAL '844154964')) THEN (REAL '186') WHEN false THEN (REAL '2147483647') ELSE (REAL '586') END)) = (SMALLINT '702')) WHERE CAST((INT '722') AS BOOLEAN) GROUP BY t_1.l_shipmode, t_0.p_container, t_0.p_partkey, t_0.p_brand, t_1.l_extendedprice, t_0.p_type, t_1.l_shipinstruct HAVING true) AS sq_2 GROUP BY sq_2.col_0, sq_2.col_1 HAVING false;
CREATE MATERIALIZED VIEW m9 AS SELECT ((DATE '2022-07-29' - (INT '135')) + (INTERVAL '-604800')) AS col_0, t_1.c11 AS col_1 FROM region AS t_0 FULL JOIN alltypes2 AS t_1 ON t_0.r_comment = t_1.c9 AND ((TRIM(LEADING t_1.c9 FROM t_1.c9)) > 'RinPkD5vF8') GROUP BY t_1.c11, t_1.c4 HAVING false;
