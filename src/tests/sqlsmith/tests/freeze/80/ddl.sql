CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT max(t_1.r_regionkey) AS col_0, CAST(true AS INT) AS col_1, t_0.ps_suppkey AS col_2, t_0.ps_suppkey AS col_3 FROM partsupp AS t_0 JOIN region AS t_1 ON t_0.ps_suppkey = t_1.r_regionkey WHERE (true > true) GROUP BY t_0.ps_supplycost, t_0.ps_suppkey;
CREATE MATERIALIZED VIEW m1 AS SELECT t_1.s_phone AS col_0, t_0.category AS col_1, t_0.description AS col_2, t_1.s_phone AS col_3 FROM auction AS t_0 LEFT JOIN supplier AS t_1 ON t_0.item_name = t_1.s_name WHERE (t_0.date_time) IN (TIMESTAMP '2022-02-27 05:15:52', t_0.date_time, TIMESTAMP '2022-02-27 05:14:52', ((INTERVAL '1') + t_0.date_time), t_0.date_time, t_0.date_time, t_0.date_time, t_0.date_time, (t_0.expires - (INTERVAL '1')), t_0.date_time) GROUP BY t_0.category, t_1.s_phone, t_0.description, t_0.extra HAVING ((SMALLINT '815') >= (REAL '805'));
CREATE MATERIALIZED VIEW m2 AS SELECT hop_0.c9 AS col_0 FROM hop(alltypes1, alltypes1.c11, INTERVAL '1', INTERVAL '83') AS hop_0 WHERE true GROUP BY hop_0.c2, hop_0.c6, hop_0.c14, hop_0.c9, hop_0.c1;
CREATE MATERIALIZED VIEW m3 AS SELECT (SMALLINT '535') AS col_0 FROM orders AS t_0 GROUP BY t_0.o_totalprice, t_0.o_clerk;
CREATE MATERIALIZED VIEW m4 AS SELECT t_0.c_acctbal AS col_0, t_0.c_comment AS col_1 FROM customer AS t_0 RIGHT JOIN person AS t_1 ON t_0.c_name = t_1.state AND ((REAL '-748791742') <= ((REAL '2147483647') + ((REAL '841')))) WHERE false GROUP BY t_0.c_acctbal, t_1.date_time, t_0.c_comment HAVING true;
CREATE MATERIALIZED VIEW m5 AS SELECT (coalesce(NULL, NULL, NULL, NULL, NULL, (BIGINT '0'), NULL, NULL, NULL, NULL)) AS col_0, 'NbBI3fwln9' AS col_1, t_0.state AS col_2, t_0.name AS col_3 FROM person AS t_0 FULL JOIN m4 AS t_1 ON t_0.extra = t_1.col_1 GROUP BY t_0.id, t_0.credit_card, t_0.name, t_0.state;
CREATE MATERIALIZED VIEW m6 AS SELECT t_1.col_1 AS col_0, t_1.col_0 AS col_1, (split_part(t_0.p_brand, t_0.p_mfgr, t_1.col_0)) AS col_2, (INT '976917089') AS col_3 FROM part AS t_0 FULL JOIN m0 AS t_1 ON t_0.p_size = t_1.col_1 GROUP BY t_0.p_mfgr, t_0.p_brand, t_0.p_comment, t_1.col_0, t_0.p_partkey, t_1.col_1 HAVING false;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.col_2 AS col_0 FROM m5 AS t_0 WHERE (TIMESTAMP '2022-02-27 05:14:55' = TIMESTAMP '2022-02-22 08:20:20') GROUP BY t_0.col_2;
CREATE MATERIALIZED VIEW m8 AS SELECT hop_0.name AS col_0 FROM hop(person, person.date_time, INTERVAL '60', INTERVAL '4680') AS hop_0 GROUP BY hop_0.name;
