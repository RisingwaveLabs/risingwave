CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS WITH with_0 AS (WITH with_1 AS (SELECT hop_2.c11 AS col_0 FROM hop(alltypes2, alltypes2.c11, INTERVAL '573461', INTERVAL '18350752') AS hop_2 GROUP BY hop_2.c7, hop_2.c13, hop_2.c11) SELECT TIME '16:49:39' AS col_0 FROM with_1) SELECT (SMALLINT '696') AS col_0, ((REAL '-1925977211') > ((REAL '175') - (REAL '980'))) AS col_1 FROM with_0;
CREATE MATERIALIZED VIEW m1 AS SELECT string_agg((TRIM('XCvqaDuzrC')), (split_part(('O0IoB6551f'), (to_char((CASE WHEN true THEN TIMESTAMP '2022-07-08 23:11:51' ELSE (TIMESTAMP '2022-07-05 23:55:39') END), hop_0.extra)), (INT '-1453911288')))) FILTER(WHERE ((SMALLINT '204') >= (REAL '57'))) AS col_0, hop_0.price AS col_1, ((BIGINT '404')) AS col_2, hop_0.url AS col_3 FROM hop(bid, bid.date_time, INTERVAL '60', INTERVAL '4440') AS hop_0 WHERE (true) GROUP BY hop_0.price, hop_0.url;
CREATE MATERIALIZED VIEW m2 AS SELECT sq_1.col_0 AS col_0, ('h2ToVGry8G') AS col_1, 'yP0T67OobO' AS col_2 FROM (SELECT (substr(t_0.r_comment, CAST(true AS INT), (INT '73'))) AS col_0, DATE '2022-07-15' AS col_1 FROM region AS t_0 WHERE false GROUP BY t_0.r_comment, t_0.r_name HAVING false) AS sq_1 WHERE true GROUP BY sq_1.col_0 HAVING true;
CREATE MATERIALIZED VIEW m3 AS WITH with_0 AS (SELECT t_2.o_clerk AS col_0, (REAL '1') AS col_1, (((INTERVAL '-604800') * ((BIGINT '362') & (coalesce(NULL, ((SMALLINT '671') % (SMALLINT '730')), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)))) / (FLOAT '457')) AS col_2, ('5ZNtLg5SQS') AS col_3 FROM m2 AS t_1 JOIN orders AS t_2 ON t_1.col_1 = t_2.o_clerk WHERE ((INT '621') <> t_2.o_orderkey) GROUP BY t_1.col_0, t_2.o_clerk, t_2.o_totalprice, t_1.col_2, t_1.col_1) SELECT TIMESTAMP '2022-07-15 16:50:39' AS col_0, CAST(NULL AS STRUCT<a NUMERIC>) AS col_1 FROM with_0 WHERE false;
CREATE MATERIALIZED VIEW m4 AS SELECT t_0.c6 AS col_0, t_0.c13 AS col_1 FROM alltypes2 AS t_0 WHERE t_0.c1 GROUP BY t_0.c11, t_0.c6, t_0.c3, t_0.c13;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT (TRIM(t_2.p_brand)) AS col_0, (substr(t_1.c9, (INT '411'), (INT '965'))) AS col_1, min('a4xZ97z9Qq') FILTER(WHERE false) AS col_2, t_2.p_comment AS col_3 FROM alltypes1 AS t_1 JOIN part AS t_2 ON t_1.c3 = t_2.p_partkey WHERE t_1.c1 GROUP BY t_2.p_brand, t_1.c9, t_2.p_comment, t_1.c7, t_1.c13 HAVING false) SELECT (810) AS col_0, min(DATE '2022-07-04') AS col_1, DATE '2022-07-08' AS col_2 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m6 AS SELECT (replace('MXObuLSVo1', (upper(('fToIpfoEPi'))), t_0.p_name)) AS col_0 FROM part AS t_0 JOIN supplier AS t_1 ON t_0.p_container = t_1.s_comment WHERE false GROUP BY t_0.p_brand, t_0.p_comment, t_0.p_type, t_0.p_name, t_0.p_retailprice;
CREATE MATERIALIZED VIEW m7 AS SELECT sq_1.col_1 AS col_0, true AS col_1, sq_1.col_1 AS col_2 FROM (SELECT TIME '16:50:42' AS col_0, true AS col_1, tumble_0.c6 AS col_2 FROM tumble(alltypes2, alltypes2.c11, INTERVAL '21') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c4, tumble_0.c6, tumble_0.c15, tumble_0.c8, tumble_0.c9, tumble_0.c5, tumble_0.c10, tumble_0.c3 HAVING ((SMALLINT '32767') >= tumble_0.c6)) AS sq_1 GROUP BY sq_1.col_1;
CREATE MATERIALIZED VIEW m8 AS SELECT (md5(t_1.s_comment)) AS col_0 FROM m5 AS t_0 FULL JOIN supplier AS t_1 ON t_0.col_0 = t_1.s_acctbal AND true GROUP BY t_1.s_comment, t_1.s_address, t_1.s_nationkey, t_1.s_name HAVING true;
CREATE MATERIALIZED VIEW m9 AS SELECT ((SMALLINT '397') # sq_1.col_1) AS col_0, max((sq_1.col_1 & (SMALLINT '480'))) FILTER(WHERE false) AS col_1, sq_1.col_1 AS col_2, sq_1.col_1 AS col_3 FROM (SELECT t_0.p_type AS col_0, t_0.p_partkey AS col_1 FROM part AS t_0 WHERE ('8xTYVIO5JM' IS NULL) GROUP BY t_0.p_type, t_0.p_partkey HAVING true) AS sq_1 GROUP BY sq_1.col_1;
