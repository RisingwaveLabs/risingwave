CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT (OVERLAY(t_0.p_type PLACING (TRIM(BOTH (TRIM((TRIM(BOTH t_0.p_container FROM t_0.p_container)))) FROM t_0.p_type)) FROM (INT '392') FOR (INT '279'))) AS col_0, t_0.p_name AS col_1, (coalesce(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, t_0.p_container)) AS col_2, ((INT '-264328179') + t_0.p_retailprice) AS col_3 FROM part AS t_0 GROUP BY t_0.p_container, t_0.p_type, t_0.p_retailprice, t_0.p_name, t_0.p_brand;
CREATE MATERIALIZED VIEW m1 AS SELECT tumble_0.extra AS col_0 FROM tumble(auction, auction.expires, INTERVAL '41') AS tumble_0 WHERE CAST((INT '988') AS BOOLEAN) GROUP BY tumble_0.description, tumble_0.extra, tumble_0.item_name, tumble_0.seller HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT (CAST(NULL AS STRUCT<a INT>)) AS col_0, t_0.c1 AS col_1, (INTERVAL '3600') AS col_2 FROM alltypes1 AS t_0 WHERE t_0.c1 GROUP BY t_0.c11, t_0.c14, t_0.c7, t_0.c1, t_0.c13;
CREATE MATERIALIZED VIEW m3 AS SELECT tumble_0.c16 AS col_0, tumble_0.c7 AS col_1, tumble_0.c1 AS col_2 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '64') AS tumble_0 GROUP BY tumble_0.c1, tumble_0.c13, tumble_0.c7, tumble_0.c16 HAVING tumble_0.c1;
CREATE MATERIALIZED VIEW m4 AS SELECT t_0.ps_supplycost AS col_0 FROM partsupp AS t_0 LEFT JOIN person AS t_1 ON t_0.ps_comment = t_1.credit_card AND true GROUP BY t_0.ps_supplycost HAVING true;
CREATE MATERIALIZED VIEW m5 AS SELECT hop_0.c4 AS col_0, ARRAY['zAFnRAtpFH', 'ZYtl9IjcaW'] AS col_1, (FLOAT '309') AS col_2 FROM hop(alltypes1, alltypes1.c11, INTERVAL '86400', INTERVAL '3888000') AS hop_0 WHERE hop_0.c1 GROUP BY hop_0.c16, hop_0.c4, hop_0.c7, hop_0.c8, hop_0.c9, hop_0.c2, hop_0.c13, hop_0.c6;
CREATE MATERIALIZED VIEW m6 AS WITH with_0 AS (WITH with_1 AS (SELECT tumble_2.date_time AS col_0, ((FLOAT '271')) AS col_1, (TIMESTAMP '2022-11-27 14:10:05') AS col_2, 'G8lX6FjcOo' AS col_3 FROM tumble(bid, bid.date_time, INTERVAL '22') AS tumble_2 GROUP BY tumble_2.channel, tumble_2.date_time) SELECT TIME '14:10:05' AS col_0, (INT '1916134313') AS col_1 FROM with_1 WHERE false) SELECT (FLOAT '82') AS col_0, TIMESTAMP '2022-11-27 13:11:05' AS col_1, false AS col_2, (SMALLINT '0') AS col_3 FROM with_0 WHERE false;
CREATE MATERIALIZED VIEW m7 AS SELECT hop_0.extra AS col_0, (TRIM(LEADING '2d8gJo7ZNl' FROM hop_0.extra)) AS col_1, 'wG3UhoWCK0' AS col_2, (REAL '805') AS col_3 FROM hop(bid, bid.date_time, INTERVAL '60', INTERVAL '3660') AS hop_0 WHERE true GROUP BY hop_0.extra;
CREATE MATERIALIZED VIEW m8 AS SELECT t_0.c_comment AS col_0, 'kUmbMk40qb' AS col_1, t_1.col_1 AS col_2, ((INT '-1123131423')) AS col_3 FROM customer AS t_0 JOIN m0 AS t_1 ON t_0.c_phone = t_1.col_1 AND ((SMALLINT '1') <= (SMALLINT '1')) GROUP BY t_0.c_comment, t_1.col_1, t_0.c_nationkey, t_0.c_mktsegment HAVING false;
CREATE MATERIALIZED VIEW m9 AS WITH with_0 AS (SELECT hop_1.c7 AS col_0, hop_1.c14 AS col_1, hop_1.c6 AS col_2, hop_1.c6 AS col_3 FROM hop(alltypes1, alltypes1.c11, INTERVAL '604800', INTERVAL '44755200') AS hop_1 WHERE hop_1.c1 GROUP BY hop_1.c1, hop_1.c15, hop_1.c3, hop_1.c7, hop_1.c10, hop_1.c6, hop_1.c14 HAVING (((BIGINT '789') - (hop_1.c3 # ((SMALLINT '988') | (SMALLINT '27983')))) < (BIGINT '103'))) SELECT (FLOAT '109') AS col_0, ((FLOAT '291') * (REAL '212')) AS col_1, false AS col_2 FROM with_0;
