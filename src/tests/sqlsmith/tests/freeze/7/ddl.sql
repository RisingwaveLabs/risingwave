CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT t_0.s_name AS col_0 FROM supplier AS t_0 WHERE false GROUP BY t_0.s_name HAVING CAST((INT '336') AS BOOLEAN);
CREATE MATERIALIZED VIEW m1 AS SELECT (t_0.c7 / (t_0.c7 + (INT '0'))) AS col_0 FROM alltypes1 AS t_0 FULL JOIN region AS t_1 ON t_0.c9 = t_1.r_comment WHERE t_0.c1 GROUP BY t_0.c7, t_0.c5, t_1.r_name HAVING true;
CREATE MATERIALIZED VIEW m2 AS SELECT t_0.c9 AS col_0, t_0.c9 AS col_1, t_1.l_shipinstruct AS col_2, TIMESTAMP '2022-11-30 16:59:38' AS col_3 FROM alltypes2 AS t_0 JOIN lineitem AS t_1 ON t_0.c7 = t_1.l_extendedprice WHERE false GROUP BY t_1.l_shipinstruct, t_0.c8, t_0.c13, t_0.c3, t_0.c5, t_1.l_discount, t_0.c15, t_1.l_comment, t_1.l_shipdate, t_0.c9, t_1.l_quantity, t_1.l_suppkey;
CREATE MATERIALIZED VIEW m3 AS SELECT (t_0.o_orderdate + (INT '368')) AS col_0, TIMESTAMP '2022-12-07 16:59:37' AS col_1, t_1.p_retailprice AS col_2, (coalesce(NULL, NULL, NULL, t_1.p_retailprice, NULL, NULL, NULL, NULL, NULL, NULL)) AS col_3 FROM orders AS t_0 RIGHT JOIN part AS t_1 ON t_0.o_custkey = t_1.p_partkey WHERE false GROUP BY t_0.o_orderdate, t_1.p_retailprice;
CREATE MATERIALIZED VIEW m4 AS SELECT t_1.p_retailprice AS col_0, t_1.p_type AS col_1, 'TMmcLAXscs' AS col_2, 'GMTTdO5rzE' AS col_3 FROM m2 AS t_0 LEFT JOIN part AS t_1 ON t_0.col_1 = t_1.p_mfgr WHERE (DATE '2022-12-07' = (TIMESTAMP '2022-12-07 16:58:39')) GROUP BY t_0.col_1, t_0.col_0, t_0.col_3, t_1.p_comment, t_1.p_retailprice, t_1.p_type, t_1.p_container;
CREATE MATERIALIZED VIEW m5 AS WITH with_0 AS (SELECT ARRAY[(INT '318'), (INT '653'), (INT '413')] AS col_0 FROM alltypes2 AS t_1 GROUP BY t_1.c7, t_1.c4, t_1.c15, t_1.c13, t_1.c14, t_1.c1, t_1.c9) SELECT ((INT '623') & (SMALLINT '381')) AS col_0, (SMALLINT '480') AS col_1, ((SMALLINT '778') % (SMALLINT '446')) AS col_2 FROM with_0 WHERE true;
CREATE MATERIALIZED VIEW m6 AS SELECT sq_1.col_0 AS col_0, sq_1.col_0 AS col_1, sq_1.col_0 AS col_2, sq_1.col_3 AS col_3 FROM (SELECT t_0.url AS col_0, t_0.auction AS col_1, t_0.date_time AS col_2, t_0.auction AS col_3 FROM bid AS t_0 WHERE false GROUP BY t_0.url, t_0.auction, t_0.date_time) AS sq_1 WHERE false GROUP BY sq_1.col_0, sq_1.col_3;
CREATE MATERIALIZED VIEW m7 AS SELECT CAST(false AS INT) AS col_0, ((INT '-985131772')) AS col_1, t_1.c3 AS col_2 FROM m2 AS t_0 LEFT JOIN alltypes2 AS t_1 ON t_0.col_1 = t_1.c9 GROUP BY t_1.c3, t_1.c13;
CREATE MATERIALIZED VIEW m8 AS WITH with_0 AS (SELECT (TRIM(BOTH tumble_1.state FROM '4tpRK8x51I')) AS col_0 FROM tumble(person, person.date_time, INTERVAL '53') AS tumble_1 GROUP BY tumble_1.state, tumble_1.date_time, tumble_1.name, tumble_1.extra HAVING min(true) FILTER(WHERE true)) SELECT (CAST(NULL AS STRUCT<a INT>)) AS col_0, ((INT '333') % (SMALLINT '351')) AS col_1, ARRAY[TIMESTAMP '2022-12-07 16:59:40', TIMESTAMP '2022-12-07 16:58:41', TIMESTAMP '2022-12-07 15:59:41', TIMESTAMP '2022-12-07 16:59:40'] AS col_2 FROM with_0 WHERE CAST((INT '161') AS BOOLEAN);
