CREATE TABLE supplier (s_suppkey INT, s_name CHARACTER VARYING, s_address CHARACTER VARYING, s_nationkey INT, s_phone CHARACTER VARYING, s_acctbal NUMERIC, s_comment CHARACTER VARYING, PRIMARY KEY (s_suppkey));
CREATE TABLE part (p_partkey INT, p_name CHARACTER VARYING, p_mfgr CHARACTER VARYING, p_brand CHARACTER VARYING, p_type CHARACTER VARYING, p_size INT, p_container CHARACTER VARYING, p_retailprice NUMERIC, p_comment CHARACTER VARYING, PRIMARY KEY (p_partkey));
CREATE TABLE partsupp (ps_partkey INT, ps_suppkey INT, ps_availqty INT, ps_supplycost NUMERIC, ps_comment CHARACTER VARYING, PRIMARY KEY (ps_partkey, ps_suppkey));
CREATE TABLE customer (c_custkey INT, c_name CHARACTER VARYING, c_address CHARACTER VARYING, c_nationkey INT, c_phone CHARACTER VARYING, c_acctbal NUMERIC, c_mktsegment CHARACTER VARYING, c_comment CHARACTER VARYING, PRIMARY KEY (c_custkey));
CREATE TABLE orders (o_orderkey BIGINT, o_custkey INT, o_orderstatus CHARACTER VARYING, o_totalprice NUMERIC, o_orderdate DATE, o_orderpriority CHARACTER VARYING, o_clerk CHARACTER VARYING, o_shippriority INT, o_comment CHARACTER VARYING, PRIMARY KEY (o_orderkey));
CREATE TABLE lineitem (l_orderkey BIGINT, l_partkey INT, l_suppkey INT, l_linenumber INT, l_quantity NUMERIC, l_extendedprice NUMERIC, l_discount NUMERIC, l_tax NUMERIC, l_returnflag CHARACTER VARYING, l_linestatus CHARACTER VARYING, l_shipdate DATE, l_commitdate DATE, l_receiptdate DATE, l_shipinstruct CHARACTER VARYING, l_shipmode CHARACTER VARYING, l_comment CHARACTER VARYING, PRIMARY KEY (l_orderkey, l_linenumber));
CREATE TABLE nation (n_nationkey INT, n_name CHARACTER VARYING, n_regionkey INT, n_comment CHARACTER VARYING, PRIMARY KEY (n_nationkey));
CREATE TABLE region (r_regionkey INT, r_name CHARACTER VARYING, r_comment CHARACTER VARYING, PRIMARY KEY (r_regionkey));
CREATE TABLE person (id BIGINT, name CHARACTER VARYING, email_address CHARACTER VARYING, credit_card CHARACTER VARYING, city CHARACTER VARYING, state CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE auction (id BIGINT, item_name CHARACTER VARYING, description CHARACTER VARYING, initial_bid BIGINT, reserve BIGINT, date_time TIMESTAMP, expires TIMESTAMP, seller BIGINT, category BIGINT, extra CHARACTER VARYING, PRIMARY KEY (id));
CREATE TABLE bid (auction BIGINT, bidder BIGINT, price BIGINT, channel CHARACTER VARYING, url CHARACTER VARYING, date_time TIMESTAMP, extra CHARACTER VARYING);
CREATE TABLE alltypes1 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE TABLE alltypes2 (c1 BOOLEAN, c2 SMALLINT, c3 INT, c4 BIGINT, c5 REAL, c6 DOUBLE, c7 NUMERIC, c8 DATE, c9 CHARACTER VARYING, c10 TIME, c11 TIMESTAMP, c13 INTERVAL, c14 STRUCT<a INT>, c15 INT[], c16 CHARACTER VARYING[]);
CREATE MATERIALIZED VIEW m0 AS SELECT (((INTERVAL '60')) + (INTERVAL '169470')) AS col_0, tumble_0.c13 AS col_1, (INTERVAL '1') AS col_2 FROM tumble(alltypes1, alltypes1.c11, INTERVAL '99') AS tumble_0 WHERE tumble_0.c1 GROUP BY tumble_0.c6, tumble_0.c13;
CREATE MATERIALIZED VIEW m1 AS SELECT (INT '969') AS col_0, t_0.p_type AS col_1 FROM part AS t_0 RIGHT JOIN partsupp AS t_1 ON t_0.p_size = t_1.ps_suppkey GROUP BY t_1.ps_suppkey, t_1.ps_supplycost, t_0.p_container, t_0.p_type HAVING false;
CREATE MATERIALIZED VIEW m2 AS SELECT t_1.c15 AS col_0, DATE '2022-07-15' AS col_1, t_1.c14 AS col_2, t_1.c15 AS col_3 FROM lineitem AS t_0 JOIN alltypes2 AS t_1 ON t_0.l_shipinstruct = t_1.c9 AND (CASE WHEN t_1.c1 THEN t_1.c1 WHEN t_1.c1 THEN t_1.c1 ELSE t_1.c1 END) WHERE (t_0.l_suppkey < t_1.c5) GROUP BY t_1.c15, t_0.l_shipdate, t_1.c14, t_0.l_linestatus HAVING false;
CREATE MATERIALIZED VIEW m3 AS SELECT t_0.r_regionkey AS col_0, t_1.l_orderkey AS col_1 FROM region AS t_0 FULL JOIN lineitem AS t_1 ON t_0.r_comment = t_1.l_returnflag GROUP BY t_0.r_regionkey, t_1.l_orderkey, t_1.l_suppkey, t_1.l_returnflag HAVING true;
CREATE MATERIALIZED VIEW m4 AS SELECT ((INTERVAL '-3600') + (TIMESTAMP '2022-07-09 17:14:48')) AS col_0, (CASE WHEN CAST(t_0.c_custkey AS BOOLEAN) THEN t_0.c_nationkey WHEN true THEN ((INT '1') / t_0.c_nationkey) WHEN max(true) FILTER(WHERE true) THEN t_0.c_custkey ELSE (INT '0') END) AS col_1, t_0.c_nationkey AS col_2 FROM customer AS t_0 LEFT JOIN auction AS t_1 ON t_0.c_comment = t_1.extra GROUP BY t_0.c_custkey, t_1.date_time, t_0.c_nationkey;
CREATE MATERIALIZED VIEW m5 AS SELECT false AS col_0 FROM alltypes2 AS t_0 LEFT JOIN alltypes2 AS t_1 ON t_0.c4 = t_1.c4 GROUP BY t_0.c13, t_1.c1;
CREATE MATERIALIZED VIEW m7 AS SELECT t_0.col_2 AS col_0, ((INTERVAL '1') * ((REAL '958'))) AS col_1 FROM m0 AS t_0 LEFT JOIN m0 AS t_1 ON t_0.col_1 = t_1.col_2 GROUP BY t_0.col_2;
CREATE MATERIALIZED VIEW m9 AS SELECT (BIGINT '770') AS col_0, 'c2vA6SwZJt' AS col_1, sq_2.col_2 AS col_2 FROM (SELECT (2147483647) AS col_0, t_0.price AS col_1, (BIGINT '8297330151475816905') AS col_2 FROM bid AS t_0 FULL JOIN nation AS t_1 ON t_0.extra = t_1.n_comment GROUP BY t_0.price, t_0.channel) AS sq_2 GROUP BY sq_2.col_2, sq_2.col_0 HAVING true;
