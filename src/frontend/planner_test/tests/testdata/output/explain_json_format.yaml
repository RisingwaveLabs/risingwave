# This file is automatically generated. See `src/frontend/planner_test/README.md` for more information.
- name: test json output format
  sql: |
    CREATE TABLE t (v1 int);
    SELECT approx_percentile(0.5) WITHIN GROUP (order by v1) from t;
  logical_plan_json: |-
    {
      "name": "LogicalProject",
      "fields": {
        "exprs": [
          "approx_percentile($expr1)"
        ]
      },
      "children": [
        {
          "name": "LogicalAgg",
          "fields": {
            "aggs": [
              "approx_percentile($expr1)"
            ]
          },
          "children": [
            {
              "name": "LogicalProject",
              "fields": {
                "exprs": [
                  "t.v1::Float64 as $expr1"
                ]
              },
              "children": [
                {
                  "name": "LogicalScan",
                  "fields": {
                    "columns": [
                      "t.v1",
                      "t._row_id"
                    ],
                    "table": "t"
                  },
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    }
  batch_plan_json: |-
    {
      "name": "BatchSimpleAgg",
      "fields": {
        "aggs": [
          "approx_percentile($expr1)"
        ]
      },
      "children": [
        {
          "name": "BatchExchange",
          "fields": {
            "dist": "Single",
            "order": []
          },
          "children": [
            {
              "name": "BatchProject",
              "fields": {
                "exprs": [
                  "t.v1::Float64 as $expr1"
                ]
              },
              "children": [
                {
                  "name": "BatchScan",
                  "fields": {
                    "columns": [
                      "t.v1"
                    ],
                    "distribution": "SomeShard",
                    "table": "t"
                  },
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    }
  stream_plan_json: |-
    {
      "name": "StreamMaterialize",
      "fields": {
        "columns": [
          "approx_percentile"
        ],
        "pk_columns": [],
        "pk_conflict": "NoCheck",
        "stream_key": []
      },
      "children": [
        {
          "name": "StreamGlobalApproxPercentile",
          "fields": {
            "quantile": "0.5:Float64",
            "relative_error": "0.01:Float64"
          },
          "children": [
            {
              "name": "StreamExchange",
              "fields": {
                "dist": "Single"
              },
              "children": [
                {
                  "name": "StreamLocalApproxPercentile",
                  "fields": {
                    "percentile_col": "$expr1",
                    "quantile": "0.5:Float64",
                    "relative_error": "0.01:Float64"
                  },
                  "children": [
                    {
                      "name": "StreamProject",
                      "fields": {
                        "exprs": [
                          "t.v1::Float64 as $expr1",
                          "t._row_id"
                        ]
                      },
                      "children": [
                        {
                          "name": "StreamTableScan",
                          "fields": {
                            "columns": [
                              "t.v1",
                              "t._row_id"
                            ],
                            "dist": "UpstreamHashShard(t._row_id)",
                            "pk": [
                              "_row_id"
                            ],
                            "stream_key": [
                              "t._row_id"
                            ],
                            "stream_scan_type": "ArrangementBackfill",
                            "table": "t"
                          },
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
